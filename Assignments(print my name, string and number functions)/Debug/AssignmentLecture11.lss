
AssignmentLecture11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000029a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  000029a2  00002a36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800088  00800088  00002a5e  2**0
                  ALLOC
  3 .stab         0000183c  00000000  00000000  00002a60  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000df0  00000000  00000000  0000429c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  0000508c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000051cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000533c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00006f85  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00007e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008c20  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00008d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  0000900d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000097db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__pack_f+0xba>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__mulsf3+0x162>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z+
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <_fpadd_parts+0x1e8>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__fixunssfsi+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e2 ea       	ldi	r30, 0xA2	; 162
     162:	f9 e2       	ldi	r31, 0x29	; 41
     164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
     16a:	a8 38       	cpi	r26, 0x88	; 136
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>

00000170 <__do_clear_bss>:
     170:	10 e0       	ldi	r17, 0x00	; 0
     172:	a8 e8       	ldi	r26, 0x88	; 136
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	aa 38       	cpi	r26, 0x8A	; 138
     17c:	b1 07       	cpc	r27, r17
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <main>
     184:	0c 94 cf 14 	jmp	0x299e	; 0x299e <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <__fixunssfsi>:
     18c:	ef 92       	push	r14
     18e:	ff 92       	push	r15
     190:	0f 93       	push	r16
     192:	1f 93       	push	r17
     194:	7b 01       	movw	r14, r22
     196:	8c 01       	movw	r16, r24
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	40 e0       	ldi	r20, 0x00	; 0
     19e:	5f e4       	ldi	r21, 0x4F	; 79
     1a0:	0e 94 c6 03 	call	0x78c	; 0x78c <__gesf2>
     1a4:	88 23       	and	r24, r24
     1a6:	8c f0       	brlt	.+34     	; 0x1ca <__fixunssfsi+0x3e>
     1a8:	c8 01       	movw	r24, r16
     1aa:	b7 01       	movw	r22, r14
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	40 e0       	ldi	r20, 0x00	; 0
     1b2:	5f e4       	ldi	r21, 0x4F	; 79
     1b4:	0e 94 3e 02 	call	0x47c	; 0x47c <__subsf3>
     1b8:	0e 94 26 04 	call	0x84c	; 0x84c <__fixsfsi>
     1bc:	9b 01       	movw	r18, r22
     1be:	ac 01       	movw	r20, r24
     1c0:	20 50       	subi	r18, 0x00	; 0
     1c2:	30 40       	sbci	r19, 0x00	; 0
     1c4:	40 40       	sbci	r20, 0x00	; 0
     1c6:	50 48       	sbci	r21, 0x80	; 128
     1c8:	06 c0       	rjmp	.+12     	; 0x1d6 <__fixunssfsi+0x4a>
     1ca:	c8 01       	movw	r24, r16
     1cc:	b7 01       	movw	r22, r14
     1ce:	0e 94 26 04 	call	0x84c	; 0x84c <__fixsfsi>
     1d2:	9b 01       	movw	r18, r22
     1d4:	ac 01       	movw	r20, r24
     1d6:	b9 01       	movw	r22, r18
     1d8:	ca 01       	movw	r24, r20
     1da:	1f 91       	pop	r17
     1dc:	0f 91       	pop	r16
     1de:	ff 90       	pop	r15
     1e0:	ef 90       	pop	r14
     1e2:	08 95       	ret

000001e4 <_fpadd_parts>:
     1e4:	a0 e0       	ldi	r26, 0x00	; 0
     1e6:	b0 e0       	ldi	r27, 0x00	; 0
     1e8:	e8 ef       	ldi	r30, 0xF8	; 248
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	0c 94 9c 0f 	jmp	0x1f38	; 0x1f38 <__prologue_saves__>
     1f0:	dc 01       	movw	r26, r24
     1f2:	2b 01       	movw	r4, r22
     1f4:	fa 01       	movw	r30, r20
     1f6:	9c 91       	ld	r25, X
     1f8:	92 30       	cpi	r25, 0x02	; 2
     1fa:	08 f4       	brcc	.+2      	; 0x1fe <_fpadd_parts+0x1a>
     1fc:	39 c1       	rjmp	.+626    	; 0x470 <_fpadd_parts+0x28c>
     1fe:	eb 01       	movw	r28, r22
     200:	88 81       	ld	r24, Y
     202:	82 30       	cpi	r24, 0x02	; 2
     204:	08 f4       	brcc	.+2      	; 0x208 <_fpadd_parts+0x24>
     206:	33 c1       	rjmp	.+614    	; 0x46e <_fpadd_parts+0x28a>
     208:	94 30       	cpi	r25, 0x04	; 4
     20a:	69 f4       	brne	.+26     	; 0x226 <_fpadd_parts+0x42>
     20c:	84 30       	cpi	r24, 0x04	; 4
     20e:	09 f0       	breq	.+2      	; 0x212 <_fpadd_parts+0x2e>
     210:	2f c1       	rjmp	.+606    	; 0x470 <_fpadd_parts+0x28c>
     212:	11 96       	adiw	r26, 0x01	; 1
     214:	9c 91       	ld	r25, X
     216:	11 97       	sbiw	r26, 0x01	; 1
     218:	89 81       	ldd	r24, Y+1	; 0x01
     21a:	98 17       	cp	r25, r24
     21c:	09 f4       	brne	.+2      	; 0x220 <_fpadd_parts+0x3c>
     21e:	28 c1       	rjmp	.+592    	; 0x470 <_fpadd_parts+0x28c>
     220:	af e7       	ldi	r26, 0x7F	; 127
     222:	b0 e0       	ldi	r27, 0x00	; 0
     224:	25 c1       	rjmp	.+586    	; 0x470 <_fpadd_parts+0x28c>
     226:	84 30       	cpi	r24, 0x04	; 4
     228:	09 f4       	brne	.+2      	; 0x22c <_fpadd_parts+0x48>
     22a:	21 c1       	rjmp	.+578    	; 0x46e <_fpadd_parts+0x28a>
     22c:	82 30       	cpi	r24, 0x02	; 2
     22e:	a9 f4       	brne	.+42     	; 0x25a <_fpadd_parts+0x76>
     230:	92 30       	cpi	r25, 0x02	; 2
     232:	09 f0       	breq	.+2      	; 0x236 <_fpadd_parts+0x52>
     234:	1d c1       	rjmp	.+570    	; 0x470 <_fpadd_parts+0x28c>
     236:	9a 01       	movw	r18, r20
     238:	ad 01       	movw	r20, r26
     23a:	88 e0       	ldi	r24, 0x08	; 8
     23c:	ea 01       	movw	r28, r20
     23e:	09 90       	ld	r0, Y+
     240:	ae 01       	movw	r20, r28
     242:	e9 01       	movw	r28, r18
     244:	09 92       	st	Y+, r0
     246:	9e 01       	movw	r18, r28
     248:	81 50       	subi	r24, 0x01	; 1
     24a:	c1 f7       	brne	.-16     	; 0x23c <_fpadd_parts+0x58>
     24c:	e2 01       	movw	r28, r4
     24e:	89 81       	ldd	r24, Y+1	; 0x01
     250:	11 96       	adiw	r26, 0x01	; 1
     252:	9c 91       	ld	r25, X
     254:	89 23       	and	r24, r25
     256:	81 83       	std	Z+1, r24	; 0x01
     258:	08 c1       	rjmp	.+528    	; 0x46a <_fpadd_parts+0x286>
     25a:	92 30       	cpi	r25, 0x02	; 2
     25c:	09 f4       	brne	.+2      	; 0x260 <_fpadd_parts+0x7c>
     25e:	07 c1       	rjmp	.+526    	; 0x46e <_fpadd_parts+0x28a>
     260:	12 96       	adiw	r26, 0x02	; 2
     262:	2d 90       	ld	r2, X+
     264:	3c 90       	ld	r3, X
     266:	13 97       	sbiw	r26, 0x03	; 3
     268:	eb 01       	movw	r28, r22
     26a:	8a 81       	ldd	r24, Y+2	; 0x02
     26c:	9b 81       	ldd	r25, Y+3	; 0x03
     26e:	14 96       	adiw	r26, 0x04	; 4
     270:	ad 90       	ld	r10, X+
     272:	bd 90       	ld	r11, X+
     274:	cd 90       	ld	r12, X+
     276:	dc 90       	ld	r13, X
     278:	17 97       	sbiw	r26, 0x07	; 7
     27a:	ec 80       	ldd	r14, Y+4	; 0x04
     27c:	fd 80       	ldd	r15, Y+5	; 0x05
     27e:	0e 81       	ldd	r16, Y+6	; 0x06
     280:	1f 81       	ldd	r17, Y+7	; 0x07
     282:	91 01       	movw	r18, r2
     284:	28 1b       	sub	r18, r24
     286:	39 0b       	sbc	r19, r25
     288:	b9 01       	movw	r22, r18
     28a:	37 ff       	sbrs	r19, 7
     28c:	04 c0       	rjmp	.+8      	; 0x296 <_fpadd_parts+0xb2>
     28e:	66 27       	eor	r22, r22
     290:	77 27       	eor	r23, r23
     292:	62 1b       	sub	r22, r18
     294:	73 0b       	sbc	r23, r19
     296:	60 32       	cpi	r22, 0x20	; 32
     298:	71 05       	cpc	r23, r1
     29a:	0c f0       	brlt	.+2      	; 0x29e <_fpadd_parts+0xba>
     29c:	61 c0       	rjmp	.+194    	; 0x360 <_fpadd_parts+0x17c>
     29e:	12 16       	cp	r1, r18
     2a0:	13 06       	cpc	r1, r19
     2a2:	6c f5       	brge	.+90     	; 0x2fe <_fpadd_parts+0x11a>
     2a4:	37 01       	movw	r6, r14
     2a6:	48 01       	movw	r8, r16
     2a8:	06 2e       	mov	r0, r22
     2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <_fpadd_parts+0xd0>
     2ac:	96 94       	lsr	r9
     2ae:	87 94       	ror	r8
     2b0:	77 94       	ror	r7
     2b2:	67 94       	ror	r6
     2b4:	0a 94       	dec	r0
     2b6:	d2 f7       	brpl	.-12     	; 0x2ac <_fpadd_parts+0xc8>
     2b8:	21 e0       	ldi	r18, 0x01	; 1
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 e0       	ldi	r20, 0x00	; 0
     2be:	50 e0       	ldi	r21, 0x00	; 0
     2c0:	04 c0       	rjmp	.+8      	; 0x2ca <_fpadd_parts+0xe6>
     2c2:	22 0f       	add	r18, r18
     2c4:	33 1f       	adc	r19, r19
     2c6:	44 1f       	adc	r20, r20
     2c8:	55 1f       	adc	r21, r21
     2ca:	6a 95       	dec	r22
     2cc:	d2 f7       	brpl	.-12     	; 0x2c2 <_fpadd_parts+0xde>
     2ce:	21 50       	subi	r18, 0x01	; 1
     2d0:	30 40       	sbci	r19, 0x00	; 0
     2d2:	40 40       	sbci	r20, 0x00	; 0
     2d4:	50 40       	sbci	r21, 0x00	; 0
     2d6:	2e 21       	and	r18, r14
     2d8:	3f 21       	and	r19, r15
     2da:	40 23       	and	r20, r16
     2dc:	51 23       	and	r21, r17
     2de:	21 15       	cp	r18, r1
     2e0:	31 05       	cpc	r19, r1
     2e2:	41 05       	cpc	r20, r1
     2e4:	51 05       	cpc	r21, r1
     2e6:	21 f0       	breq	.+8      	; 0x2f0 <_fpadd_parts+0x10c>
     2e8:	21 e0       	ldi	r18, 0x01	; 1
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	40 e0       	ldi	r20, 0x00	; 0
     2ee:	50 e0       	ldi	r21, 0x00	; 0
     2f0:	79 01       	movw	r14, r18
     2f2:	8a 01       	movw	r16, r20
     2f4:	e6 28       	or	r14, r6
     2f6:	f7 28       	or	r15, r7
     2f8:	08 29       	or	r16, r8
     2fa:	19 29       	or	r17, r9
     2fc:	3c c0       	rjmp	.+120    	; 0x376 <_fpadd_parts+0x192>
     2fe:	23 2b       	or	r18, r19
     300:	d1 f1       	breq	.+116    	; 0x376 <_fpadd_parts+0x192>
     302:	26 0e       	add	r2, r22
     304:	37 1e       	adc	r3, r23
     306:	35 01       	movw	r6, r10
     308:	46 01       	movw	r8, r12
     30a:	06 2e       	mov	r0, r22
     30c:	04 c0       	rjmp	.+8      	; 0x316 <_fpadd_parts+0x132>
     30e:	96 94       	lsr	r9
     310:	87 94       	ror	r8
     312:	77 94       	ror	r7
     314:	67 94       	ror	r6
     316:	0a 94       	dec	r0
     318:	d2 f7       	brpl	.-12     	; 0x30e <_fpadd_parts+0x12a>
     31a:	21 e0       	ldi	r18, 0x01	; 1
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e0       	ldi	r20, 0x00	; 0
     320:	50 e0       	ldi	r21, 0x00	; 0
     322:	04 c0       	rjmp	.+8      	; 0x32c <_fpadd_parts+0x148>
     324:	22 0f       	add	r18, r18
     326:	33 1f       	adc	r19, r19
     328:	44 1f       	adc	r20, r20
     32a:	55 1f       	adc	r21, r21
     32c:	6a 95       	dec	r22
     32e:	d2 f7       	brpl	.-12     	; 0x324 <_fpadd_parts+0x140>
     330:	21 50       	subi	r18, 0x01	; 1
     332:	30 40       	sbci	r19, 0x00	; 0
     334:	40 40       	sbci	r20, 0x00	; 0
     336:	50 40       	sbci	r21, 0x00	; 0
     338:	2a 21       	and	r18, r10
     33a:	3b 21       	and	r19, r11
     33c:	4c 21       	and	r20, r12
     33e:	5d 21       	and	r21, r13
     340:	21 15       	cp	r18, r1
     342:	31 05       	cpc	r19, r1
     344:	41 05       	cpc	r20, r1
     346:	51 05       	cpc	r21, r1
     348:	21 f0       	breq	.+8      	; 0x352 <_fpadd_parts+0x16e>
     34a:	21 e0       	ldi	r18, 0x01	; 1
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	40 e0       	ldi	r20, 0x00	; 0
     350:	50 e0       	ldi	r21, 0x00	; 0
     352:	59 01       	movw	r10, r18
     354:	6a 01       	movw	r12, r20
     356:	a6 28       	or	r10, r6
     358:	b7 28       	or	r11, r7
     35a:	c8 28       	or	r12, r8
     35c:	d9 28       	or	r13, r9
     35e:	0b c0       	rjmp	.+22     	; 0x376 <_fpadd_parts+0x192>
     360:	82 15       	cp	r24, r2
     362:	93 05       	cpc	r25, r3
     364:	2c f0       	brlt	.+10     	; 0x370 <_fpadd_parts+0x18c>
     366:	1c 01       	movw	r2, r24
     368:	aa 24       	eor	r10, r10
     36a:	bb 24       	eor	r11, r11
     36c:	65 01       	movw	r12, r10
     36e:	03 c0       	rjmp	.+6      	; 0x376 <_fpadd_parts+0x192>
     370:	ee 24       	eor	r14, r14
     372:	ff 24       	eor	r15, r15
     374:	87 01       	movw	r16, r14
     376:	11 96       	adiw	r26, 0x01	; 1
     378:	9c 91       	ld	r25, X
     37a:	d2 01       	movw	r26, r4
     37c:	11 96       	adiw	r26, 0x01	; 1
     37e:	8c 91       	ld	r24, X
     380:	98 17       	cp	r25, r24
     382:	09 f4       	brne	.+2      	; 0x386 <_fpadd_parts+0x1a2>
     384:	45 c0       	rjmp	.+138    	; 0x410 <_fpadd_parts+0x22c>
     386:	99 23       	and	r25, r25
     388:	39 f0       	breq	.+14     	; 0x398 <_fpadd_parts+0x1b4>
     38a:	a8 01       	movw	r20, r16
     38c:	97 01       	movw	r18, r14
     38e:	2a 19       	sub	r18, r10
     390:	3b 09       	sbc	r19, r11
     392:	4c 09       	sbc	r20, r12
     394:	5d 09       	sbc	r21, r13
     396:	06 c0       	rjmp	.+12     	; 0x3a4 <_fpadd_parts+0x1c0>
     398:	a6 01       	movw	r20, r12
     39a:	95 01       	movw	r18, r10
     39c:	2e 19       	sub	r18, r14
     39e:	3f 09       	sbc	r19, r15
     3a0:	40 0b       	sbc	r20, r16
     3a2:	51 0b       	sbc	r21, r17
     3a4:	57 fd       	sbrc	r21, 7
     3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <_fpadd_parts+0x1d4>
     3a8:	11 82       	std	Z+1, r1	; 0x01
     3aa:	33 82       	std	Z+3, r3	; 0x03
     3ac:	22 82       	std	Z+2, r2	; 0x02
     3ae:	24 83       	std	Z+4, r18	; 0x04
     3b0:	35 83       	std	Z+5, r19	; 0x05
     3b2:	46 83       	std	Z+6, r20	; 0x06
     3b4:	57 83       	std	Z+7, r21	; 0x07
     3b6:	1d c0       	rjmp	.+58     	; 0x3f2 <_fpadd_parts+0x20e>
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	81 83       	std	Z+1, r24	; 0x01
     3bc:	33 82       	std	Z+3, r3	; 0x03
     3be:	22 82       	std	Z+2, r2	; 0x02
     3c0:	88 27       	eor	r24, r24
     3c2:	99 27       	eor	r25, r25
     3c4:	dc 01       	movw	r26, r24
     3c6:	82 1b       	sub	r24, r18
     3c8:	93 0b       	sbc	r25, r19
     3ca:	a4 0b       	sbc	r26, r20
     3cc:	b5 0b       	sbc	r27, r21
     3ce:	84 83       	std	Z+4, r24	; 0x04
     3d0:	95 83       	std	Z+5, r25	; 0x05
     3d2:	a6 83       	std	Z+6, r26	; 0x06
     3d4:	b7 83       	std	Z+7, r27	; 0x07
     3d6:	0d c0       	rjmp	.+26     	; 0x3f2 <_fpadd_parts+0x20e>
     3d8:	22 0f       	add	r18, r18
     3da:	33 1f       	adc	r19, r19
     3dc:	44 1f       	adc	r20, r20
     3de:	55 1f       	adc	r21, r21
     3e0:	24 83       	std	Z+4, r18	; 0x04
     3e2:	35 83       	std	Z+5, r19	; 0x05
     3e4:	46 83       	std	Z+6, r20	; 0x06
     3e6:	57 83       	std	Z+7, r21	; 0x07
     3e8:	82 81       	ldd	r24, Z+2	; 0x02
     3ea:	93 81       	ldd	r25, Z+3	; 0x03
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	93 83       	std	Z+3, r25	; 0x03
     3f0:	82 83       	std	Z+2, r24	; 0x02
     3f2:	24 81       	ldd	r18, Z+4	; 0x04
     3f4:	35 81       	ldd	r19, Z+5	; 0x05
     3f6:	46 81       	ldd	r20, Z+6	; 0x06
     3f8:	57 81       	ldd	r21, Z+7	; 0x07
     3fa:	da 01       	movw	r26, r20
     3fc:	c9 01       	movw	r24, r18
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	a1 09       	sbc	r26, r1
     402:	b1 09       	sbc	r27, r1
     404:	8f 5f       	subi	r24, 0xFF	; 255
     406:	9f 4f       	sbci	r25, 0xFF	; 255
     408:	af 4f       	sbci	r26, 0xFF	; 255
     40a:	bf 43       	sbci	r27, 0x3F	; 63
     40c:	28 f3       	brcs	.-54     	; 0x3d8 <_fpadd_parts+0x1f4>
     40e:	0b c0       	rjmp	.+22     	; 0x426 <_fpadd_parts+0x242>
     410:	91 83       	std	Z+1, r25	; 0x01
     412:	33 82       	std	Z+3, r3	; 0x03
     414:	22 82       	std	Z+2, r2	; 0x02
     416:	ea 0c       	add	r14, r10
     418:	fb 1c       	adc	r15, r11
     41a:	0c 1d       	adc	r16, r12
     41c:	1d 1d       	adc	r17, r13
     41e:	e4 82       	std	Z+4, r14	; 0x04
     420:	f5 82       	std	Z+5, r15	; 0x05
     422:	06 83       	std	Z+6, r16	; 0x06
     424:	17 83       	std	Z+7, r17	; 0x07
     426:	83 e0       	ldi	r24, 0x03	; 3
     428:	80 83       	st	Z, r24
     42a:	24 81       	ldd	r18, Z+4	; 0x04
     42c:	35 81       	ldd	r19, Z+5	; 0x05
     42e:	46 81       	ldd	r20, Z+6	; 0x06
     430:	57 81       	ldd	r21, Z+7	; 0x07
     432:	57 ff       	sbrs	r21, 7
     434:	1a c0       	rjmp	.+52     	; 0x46a <_fpadd_parts+0x286>
     436:	c9 01       	movw	r24, r18
     438:	aa 27       	eor	r26, r26
     43a:	97 fd       	sbrc	r25, 7
     43c:	a0 95       	com	r26
     43e:	ba 2f       	mov	r27, r26
     440:	81 70       	andi	r24, 0x01	; 1
     442:	90 70       	andi	r25, 0x00	; 0
     444:	a0 70       	andi	r26, 0x00	; 0
     446:	b0 70       	andi	r27, 0x00	; 0
     448:	56 95       	lsr	r21
     44a:	47 95       	ror	r20
     44c:	37 95       	ror	r19
     44e:	27 95       	ror	r18
     450:	82 2b       	or	r24, r18
     452:	93 2b       	or	r25, r19
     454:	a4 2b       	or	r26, r20
     456:	b5 2b       	or	r27, r21
     458:	84 83       	std	Z+4, r24	; 0x04
     45a:	95 83       	std	Z+5, r25	; 0x05
     45c:	a6 83       	std	Z+6, r26	; 0x06
     45e:	b7 83       	std	Z+7, r27	; 0x07
     460:	82 81       	ldd	r24, Z+2	; 0x02
     462:	93 81       	ldd	r25, Z+3	; 0x03
     464:	01 96       	adiw	r24, 0x01	; 1
     466:	93 83       	std	Z+3, r25	; 0x03
     468:	82 83       	std	Z+2, r24	; 0x02
     46a:	df 01       	movw	r26, r30
     46c:	01 c0       	rjmp	.+2      	; 0x470 <_fpadd_parts+0x28c>
     46e:	d2 01       	movw	r26, r4
     470:	cd 01       	movw	r24, r26
     472:	cd b7       	in	r28, 0x3d	; 61
     474:	de b7       	in	r29, 0x3e	; 62
     476:	e2 e1       	ldi	r30, 0x12	; 18
     478:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__epilogue_restores__>

0000047c <__subsf3>:
     47c:	a0 e2       	ldi	r26, 0x20	; 32
     47e:	b0 e0       	ldi	r27, 0x00	; 0
     480:	e4 e4       	ldi	r30, 0x44	; 68
     482:	f2 e0       	ldi	r31, 0x02	; 2
     484:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__prologue_saves__+0x18>
     488:	69 83       	std	Y+1, r22	; 0x01
     48a:	7a 83       	std	Y+2, r23	; 0x02
     48c:	8b 83       	std	Y+3, r24	; 0x03
     48e:	9c 83       	std	Y+4, r25	; 0x04
     490:	2d 83       	std	Y+5, r18	; 0x05
     492:	3e 83       	std	Y+6, r19	; 0x06
     494:	4f 83       	std	Y+7, r20	; 0x07
     496:	58 87       	std	Y+8, r21	; 0x08
     498:	e9 e0       	ldi	r30, 0x09	; 9
     49a:	ee 2e       	mov	r14, r30
     49c:	f1 2c       	mov	r15, r1
     49e:	ec 0e       	add	r14, r28
     4a0:	fd 1e       	adc	r15, r29
     4a2:	ce 01       	movw	r24, r28
     4a4:	01 96       	adiw	r24, 0x01	; 1
     4a6:	b7 01       	movw	r22, r14
     4a8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     4ac:	8e 01       	movw	r16, r28
     4ae:	0f 5e       	subi	r16, 0xEF	; 239
     4b0:	1f 4f       	sbci	r17, 0xFF	; 255
     4b2:	ce 01       	movw	r24, r28
     4b4:	05 96       	adiw	r24, 0x05	; 5
     4b6:	b8 01       	movw	r22, r16
     4b8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     4bc:	8a 89       	ldd	r24, Y+18	; 0x12
     4be:	91 e0       	ldi	r25, 0x01	; 1
     4c0:	89 27       	eor	r24, r25
     4c2:	8a 8b       	std	Y+18, r24	; 0x12
     4c4:	c7 01       	movw	r24, r14
     4c6:	b8 01       	movw	r22, r16
     4c8:	ae 01       	movw	r20, r28
     4ca:	47 5e       	subi	r20, 0xE7	; 231
     4cc:	5f 4f       	sbci	r21, 0xFF	; 255
     4ce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_fpadd_parts>
     4d2:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__pack_f>
     4d6:	a0 96       	adiw	r28, 0x20	; 32
     4d8:	e6 e0       	ldi	r30, 0x06	; 6
     4da:	0c 94 c4 0f 	jmp	0x1f88	; 0x1f88 <__epilogue_restores__+0x18>

000004de <__addsf3>:
     4de:	a0 e2       	ldi	r26, 0x20	; 32
     4e0:	b0 e0       	ldi	r27, 0x00	; 0
     4e2:	e5 e7       	ldi	r30, 0x75	; 117
     4e4:	f2 e0       	ldi	r31, 0x02	; 2
     4e6:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__prologue_saves__+0x18>
     4ea:	69 83       	std	Y+1, r22	; 0x01
     4ec:	7a 83       	std	Y+2, r23	; 0x02
     4ee:	8b 83       	std	Y+3, r24	; 0x03
     4f0:	9c 83       	std	Y+4, r25	; 0x04
     4f2:	2d 83       	std	Y+5, r18	; 0x05
     4f4:	3e 83       	std	Y+6, r19	; 0x06
     4f6:	4f 83       	std	Y+7, r20	; 0x07
     4f8:	58 87       	std	Y+8, r21	; 0x08
     4fa:	f9 e0       	ldi	r31, 0x09	; 9
     4fc:	ef 2e       	mov	r14, r31
     4fe:	f1 2c       	mov	r15, r1
     500:	ec 0e       	add	r14, r28
     502:	fd 1e       	adc	r15, r29
     504:	ce 01       	movw	r24, r28
     506:	01 96       	adiw	r24, 0x01	; 1
     508:	b7 01       	movw	r22, r14
     50a:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     50e:	8e 01       	movw	r16, r28
     510:	0f 5e       	subi	r16, 0xEF	; 239
     512:	1f 4f       	sbci	r17, 0xFF	; 255
     514:	ce 01       	movw	r24, r28
     516:	05 96       	adiw	r24, 0x05	; 5
     518:	b8 01       	movw	r22, r16
     51a:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     51e:	c7 01       	movw	r24, r14
     520:	b8 01       	movw	r22, r16
     522:	ae 01       	movw	r20, r28
     524:	47 5e       	subi	r20, 0xE7	; 231
     526:	5f 4f       	sbci	r21, 0xFF	; 255
     528:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_fpadd_parts>
     52c:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__pack_f>
     530:	a0 96       	adiw	r28, 0x20	; 32
     532:	e6 e0       	ldi	r30, 0x06	; 6
     534:	0c 94 c4 0f 	jmp	0x1f88	; 0x1f88 <__epilogue_restores__+0x18>

00000538 <__mulsf3>:
     538:	a0 e2       	ldi	r26, 0x20	; 32
     53a:	b0 e0       	ldi	r27, 0x00	; 0
     53c:	e2 ea       	ldi	r30, 0xA2	; 162
     53e:	f2 e0       	ldi	r31, 0x02	; 2
     540:	0c 94 9c 0f 	jmp	0x1f38	; 0x1f38 <__prologue_saves__>
     544:	69 83       	std	Y+1, r22	; 0x01
     546:	7a 83       	std	Y+2, r23	; 0x02
     548:	8b 83       	std	Y+3, r24	; 0x03
     54a:	9c 83       	std	Y+4, r25	; 0x04
     54c:	2d 83       	std	Y+5, r18	; 0x05
     54e:	3e 83       	std	Y+6, r19	; 0x06
     550:	4f 83       	std	Y+7, r20	; 0x07
     552:	58 87       	std	Y+8, r21	; 0x08
     554:	ce 01       	movw	r24, r28
     556:	01 96       	adiw	r24, 0x01	; 1
     558:	be 01       	movw	r22, r28
     55a:	67 5f       	subi	r22, 0xF7	; 247
     55c:	7f 4f       	sbci	r23, 0xFF	; 255
     55e:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     562:	ce 01       	movw	r24, r28
     564:	05 96       	adiw	r24, 0x05	; 5
     566:	be 01       	movw	r22, r28
     568:	6f 5e       	subi	r22, 0xEF	; 239
     56a:	7f 4f       	sbci	r23, 0xFF	; 255
     56c:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     570:	99 85       	ldd	r25, Y+9	; 0x09
     572:	92 30       	cpi	r25, 0x02	; 2
     574:	88 f0       	brcs	.+34     	; 0x598 <__mulsf3+0x60>
     576:	89 89       	ldd	r24, Y+17	; 0x11
     578:	82 30       	cpi	r24, 0x02	; 2
     57a:	c8 f0       	brcs	.+50     	; 0x5ae <__mulsf3+0x76>
     57c:	94 30       	cpi	r25, 0x04	; 4
     57e:	19 f4       	brne	.+6      	; 0x586 <__mulsf3+0x4e>
     580:	82 30       	cpi	r24, 0x02	; 2
     582:	51 f4       	brne	.+20     	; 0x598 <__mulsf3+0x60>
     584:	04 c0       	rjmp	.+8      	; 0x58e <__mulsf3+0x56>
     586:	84 30       	cpi	r24, 0x04	; 4
     588:	29 f4       	brne	.+10     	; 0x594 <__mulsf3+0x5c>
     58a:	92 30       	cpi	r25, 0x02	; 2
     58c:	81 f4       	brne	.+32     	; 0x5ae <__mulsf3+0x76>
     58e:	8f e7       	ldi	r24, 0x7F	; 127
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	c6 c0       	rjmp	.+396    	; 0x720 <__mulsf3+0x1e8>
     594:	92 30       	cpi	r25, 0x02	; 2
     596:	49 f4       	brne	.+18     	; 0x5aa <__mulsf3+0x72>
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	9a 85       	ldd	r25, Y+10	; 0x0a
     59c:	8a 89       	ldd	r24, Y+18	; 0x12
     59e:	98 13       	cpse	r25, r24
     5a0:	21 e0       	ldi	r18, 0x01	; 1
     5a2:	2a 87       	std	Y+10, r18	; 0x0a
     5a4:	ce 01       	movw	r24, r28
     5a6:	09 96       	adiw	r24, 0x09	; 9
     5a8:	bb c0       	rjmp	.+374    	; 0x720 <__mulsf3+0x1e8>
     5aa:	82 30       	cpi	r24, 0x02	; 2
     5ac:	49 f4       	brne	.+18     	; 0x5c0 <__mulsf3+0x88>
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5b2:	8a 89       	ldd	r24, Y+18	; 0x12
     5b4:	98 13       	cpse	r25, r24
     5b6:	21 e0       	ldi	r18, 0x01	; 1
     5b8:	2a 8b       	std	Y+18, r18	; 0x12
     5ba:	ce 01       	movw	r24, r28
     5bc:	41 96       	adiw	r24, 0x11	; 17
     5be:	b0 c0       	rjmp	.+352    	; 0x720 <__mulsf3+0x1e8>
     5c0:	2d 84       	ldd	r2, Y+13	; 0x0d
     5c2:	3e 84       	ldd	r3, Y+14	; 0x0e
     5c4:	4f 84       	ldd	r4, Y+15	; 0x0f
     5c6:	58 88       	ldd	r5, Y+16	; 0x10
     5c8:	6d 88       	ldd	r6, Y+21	; 0x15
     5ca:	7e 88       	ldd	r7, Y+22	; 0x16
     5cc:	8f 88       	ldd	r8, Y+23	; 0x17
     5ce:	98 8c       	ldd	r9, Y+24	; 0x18
     5d0:	ee 24       	eor	r14, r14
     5d2:	ff 24       	eor	r15, r15
     5d4:	87 01       	movw	r16, r14
     5d6:	aa 24       	eor	r10, r10
     5d8:	bb 24       	eor	r11, r11
     5da:	65 01       	movw	r12, r10
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	60 e0       	ldi	r22, 0x00	; 0
     5e2:	70 e0       	ldi	r23, 0x00	; 0
     5e4:	e0 e0       	ldi	r30, 0x00	; 0
     5e6:	f0 e0       	ldi	r31, 0x00	; 0
     5e8:	c1 01       	movw	r24, r2
     5ea:	81 70       	andi	r24, 0x01	; 1
     5ec:	90 70       	andi	r25, 0x00	; 0
     5ee:	89 2b       	or	r24, r25
     5f0:	e9 f0       	breq	.+58     	; 0x62c <__mulsf3+0xf4>
     5f2:	e6 0c       	add	r14, r6
     5f4:	f7 1c       	adc	r15, r7
     5f6:	08 1d       	adc	r16, r8
     5f8:	19 1d       	adc	r17, r9
     5fa:	9a 01       	movw	r18, r20
     5fc:	ab 01       	movw	r20, r22
     5fe:	2a 0d       	add	r18, r10
     600:	3b 1d       	adc	r19, r11
     602:	4c 1d       	adc	r20, r12
     604:	5d 1d       	adc	r21, r13
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	a0 e0       	ldi	r26, 0x00	; 0
     60c:	b0 e0       	ldi	r27, 0x00	; 0
     60e:	e6 14       	cp	r14, r6
     610:	f7 04       	cpc	r15, r7
     612:	08 05       	cpc	r16, r8
     614:	19 05       	cpc	r17, r9
     616:	20 f4       	brcc	.+8      	; 0x620 <__mulsf3+0xe8>
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a0 e0       	ldi	r26, 0x00	; 0
     61e:	b0 e0       	ldi	r27, 0x00	; 0
     620:	ba 01       	movw	r22, r20
     622:	a9 01       	movw	r20, r18
     624:	48 0f       	add	r20, r24
     626:	59 1f       	adc	r21, r25
     628:	6a 1f       	adc	r22, r26
     62a:	7b 1f       	adc	r23, r27
     62c:	aa 0c       	add	r10, r10
     62e:	bb 1c       	adc	r11, r11
     630:	cc 1c       	adc	r12, r12
     632:	dd 1c       	adc	r13, r13
     634:	97 fe       	sbrs	r9, 7
     636:	08 c0       	rjmp	.+16     	; 0x648 <__mulsf3+0x110>
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	a0 e0       	ldi	r26, 0x00	; 0
     63e:	b0 e0       	ldi	r27, 0x00	; 0
     640:	a8 2a       	or	r10, r24
     642:	b9 2a       	or	r11, r25
     644:	ca 2a       	or	r12, r26
     646:	db 2a       	or	r13, r27
     648:	31 96       	adiw	r30, 0x01	; 1
     64a:	e0 32       	cpi	r30, 0x20	; 32
     64c:	f1 05       	cpc	r31, r1
     64e:	49 f0       	breq	.+18     	; 0x662 <__mulsf3+0x12a>
     650:	66 0c       	add	r6, r6
     652:	77 1c       	adc	r7, r7
     654:	88 1c       	adc	r8, r8
     656:	99 1c       	adc	r9, r9
     658:	56 94       	lsr	r5
     65a:	47 94       	ror	r4
     65c:	37 94       	ror	r3
     65e:	27 94       	ror	r2
     660:	c3 cf       	rjmp	.-122    	; 0x5e8 <__mulsf3+0xb0>
     662:	fa 85       	ldd	r31, Y+10	; 0x0a
     664:	ea 89       	ldd	r30, Y+18	; 0x12
     666:	2b 89       	ldd	r18, Y+19	; 0x13
     668:	3c 89       	ldd	r19, Y+20	; 0x14
     66a:	8b 85       	ldd	r24, Y+11	; 0x0b
     66c:	9c 85       	ldd	r25, Y+12	; 0x0c
     66e:	28 0f       	add	r18, r24
     670:	39 1f       	adc	r19, r25
     672:	2e 5f       	subi	r18, 0xFE	; 254
     674:	3f 4f       	sbci	r19, 0xFF	; 255
     676:	17 c0       	rjmp	.+46     	; 0x6a6 <__mulsf3+0x16e>
     678:	ca 01       	movw	r24, r20
     67a:	81 70       	andi	r24, 0x01	; 1
     67c:	90 70       	andi	r25, 0x00	; 0
     67e:	89 2b       	or	r24, r25
     680:	61 f0       	breq	.+24     	; 0x69a <__mulsf3+0x162>
     682:	16 95       	lsr	r17
     684:	07 95       	ror	r16
     686:	f7 94       	ror	r15
     688:	e7 94       	ror	r14
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	a0 e0       	ldi	r26, 0x00	; 0
     690:	b0 e8       	ldi	r27, 0x80	; 128
     692:	e8 2a       	or	r14, r24
     694:	f9 2a       	or	r15, r25
     696:	0a 2b       	or	r16, r26
     698:	1b 2b       	or	r17, r27
     69a:	76 95       	lsr	r23
     69c:	67 95       	ror	r22
     69e:	57 95       	ror	r21
     6a0:	47 95       	ror	r20
     6a2:	2f 5f       	subi	r18, 0xFF	; 255
     6a4:	3f 4f       	sbci	r19, 0xFF	; 255
     6a6:	77 fd       	sbrc	r23, 7
     6a8:	e7 cf       	rjmp	.-50     	; 0x678 <__mulsf3+0x140>
     6aa:	0c c0       	rjmp	.+24     	; 0x6c4 <__mulsf3+0x18c>
     6ac:	44 0f       	add	r20, r20
     6ae:	55 1f       	adc	r21, r21
     6b0:	66 1f       	adc	r22, r22
     6b2:	77 1f       	adc	r23, r23
     6b4:	17 fd       	sbrc	r17, 7
     6b6:	41 60       	ori	r20, 0x01	; 1
     6b8:	ee 0c       	add	r14, r14
     6ba:	ff 1c       	adc	r15, r15
     6bc:	00 1f       	adc	r16, r16
     6be:	11 1f       	adc	r17, r17
     6c0:	21 50       	subi	r18, 0x01	; 1
     6c2:	30 40       	sbci	r19, 0x00	; 0
     6c4:	40 30       	cpi	r20, 0x00	; 0
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	59 07       	cpc	r21, r25
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	69 07       	cpc	r22, r25
     6ce:	90 e4       	ldi	r25, 0x40	; 64
     6d0:	79 07       	cpc	r23, r25
     6d2:	60 f3       	brcs	.-40     	; 0x6ac <__mulsf3+0x174>
     6d4:	2b 8f       	std	Y+27, r18	; 0x1b
     6d6:	3c 8f       	std	Y+28, r19	; 0x1c
     6d8:	db 01       	movw	r26, r22
     6da:	ca 01       	movw	r24, r20
     6dc:	8f 77       	andi	r24, 0x7F	; 127
     6de:	90 70       	andi	r25, 0x00	; 0
     6e0:	a0 70       	andi	r26, 0x00	; 0
     6e2:	b0 70       	andi	r27, 0x00	; 0
     6e4:	80 34       	cpi	r24, 0x40	; 64
     6e6:	91 05       	cpc	r25, r1
     6e8:	a1 05       	cpc	r26, r1
     6ea:	b1 05       	cpc	r27, r1
     6ec:	61 f4       	brne	.+24     	; 0x706 <__mulsf3+0x1ce>
     6ee:	47 fd       	sbrc	r20, 7
     6f0:	0a c0       	rjmp	.+20     	; 0x706 <__mulsf3+0x1ce>
     6f2:	e1 14       	cp	r14, r1
     6f4:	f1 04       	cpc	r15, r1
     6f6:	01 05       	cpc	r16, r1
     6f8:	11 05       	cpc	r17, r1
     6fa:	29 f0       	breq	.+10     	; 0x706 <__mulsf3+0x1ce>
     6fc:	40 5c       	subi	r20, 0xC0	; 192
     6fe:	5f 4f       	sbci	r21, 0xFF	; 255
     700:	6f 4f       	sbci	r22, 0xFF	; 255
     702:	7f 4f       	sbci	r23, 0xFF	; 255
     704:	40 78       	andi	r20, 0x80	; 128
     706:	1a 8e       	std	Y+26, r1	; 0x1a
     708:	fe 17       	cp	r31, r30
     70a:	11 f0       	breq	.+4      	; 0x710 <__mulsf3+0x1d8>
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	8a 8f       	std	Y+26, r24	; 0x1a
     710:	4d 8f       	std	Y+29, r20	; 0x1d
     712:	5e 8f       	std	Y+30, r21	; 0x1e
     714:	6f 8f       	std	Y+31, r22	; 0x1f
     716:	78 a3       	std	Y+32, r23	; 0x20
     718:	83 e0       	ldi	r24, 0x03	; 3
     71a:	89 8f       	std	Y+25, r24	; 0x19
     71c:	ce 01       	movw	r24, r28
     71e:	49 96       	adiw	r24, 0x19	; 25
     720:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__pack_f>
     724:	a0 96       	adiw	r28, 0x20	; 32
     726:	e2 e1       	ldi	r30, 0x12	; 18
     728:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__epilogue_restores__>

0000072c <__gtsf2>:
     72c:	a8 e1       	ldi	r26, 0x18	; 24
     72e:	b0 e0       	ldi	r27, 0x00	; 0
     730:	ec e9       	ldi	r30, 0x9C	; 156
     732:	f3 e0       	ldi	r31, 0x03	; 3
     734:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__prologue_saves__+0x18>
     738:	69 83       	std	Y+1, r22	; 0x01
     73a:	7a 83       	std	Y+2, r23	; 0x02
     73c:	8b 83       	std	Y+3, r24	; 0x03
     73e:	9c 83       	std	Y+4, r25	; 0x04
     740:	2d 83       	std	Y+5, r18	; 0x05
     742:	3e 83       	std	Y+6, r19	; 0x06
     744:	4f 83       	std	Y+7, r20	; 0x07
     746:	58 87       	std	Y+8, r21	; 0x08
     748:	89 e0       	ldi	r24, 0x09	; 9
     74a:	e8 2e       	mov	r14, r24
     74c:	f1 2c       	mov	r15, r1
     74e:	ec 0e       	add	r14, r28
     750:	fd 1e       	adc	r15, r29
     752:	ce 01       	movw	r24, r28
     754:	01 96       	adiw	r24, 0x01	; 1
     756:	b7 01       	movw	r22, r14
     758:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     75c:	8e 01       	movw	r16, r28
     75e:	0f 5e       	subi	r16, 0xEF	; 239
     760:	1f 4f       	sbci	r17, 0xFF	; 255
     762:	ce 01       	movw	r24, r28
     764:	05 96       	adiw	r24, 0x05	; 5
     766:	b8 01       	movw	r22, r16
     768:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     76c:	89 85       	ldd	r24, Y+9	; 0x09
     76e:	82 30       	cpi	r24, 0x02	; 2
     770:	40 f0       	brcs	.+16     	; 0x782 <__gtsf2+0x56>
     772:	89 89       	ldd	r24, Y+17	; 0x11
     774:	82 30       	cpi	r24, 0x02	; 2
     776:	28 f0       	brcs	.+10     	; 0x782 <__gtsf2+0x56>
     778:	c7 01       	movw	r24, r14
     77a:	b8 01       	movw	r22, r16
     77c:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fpcmp_parts_f>
     780:	01 c0       	rjmp	.+2      	; 0x784 <__gtsf2+0x58>
     782:	8f ef       	ldi	r24, 0xFF	; 255
     784:	68 96       	adiw	r28, 0x18	; 24
     786:	e6 e0       	ldi	r30, 0x06	; 6
     788:	0c 94 c4 0f 	jmp	0x1f88	; 0x1f88 <__epilogue_restores__+0x18>

0000078c <__gesf2>:
     78c:	a8 e1       	ldi	r26, 0x18	; 24
     78e:	b0 e0       	ldi	r27, 0x00	; 0
     790:	ec ec       	ldi	r30, 0xCC	; 204
     792:	f3 e0       	ldi	r31, 0x03	; 3
     794:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__prologue_saves__+0x18>
     798:	69 83       	std	Y+1, r22	; 0x01
     79a:	7a 83       	std	Y+2, r23	; 0x02
     79c:	8b 83       	std	Y+3, r24	; 0x03
     79e:	9c 83       	std	Y+4, r25	; 0x04
     7a0:	2d 83       	std	Y+5, r18	; 0x05
     7a2:	3e 83       	std	Y+6, r19	; 0x06
     7a4:	4f 83       	std	Y+7, r20	; 0x07
     7a6:	58 87       	std	Y+8, r21	; 0x08
     7a8:	89 e0       	ldi	r24, 0x09	; 9
     7aa:	e8 2e       	mov	r14, r24
     7ac:	f1 2c       	mov	r15, r1
     7ae:	ec 0e       	add	r14, r28
     7b0:	fd 1e       	adc	r15, r29
     7b2:	ce 01       	movw	r24, r28
     7b4:	01 96       	adiw	r24, 0x01	; 1
     7b6:	b7 01       	movw	r22, r14
     7b8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     7bc:	8e 01       	movw	r16, r28
     7be:	0f 5e       	subi	r16, 0xEF	; 239
     7c0:	1f 4f       	sbci	r17, 0xFF	; 255
     7c2:	ce 01       	movw	r24, r28
     7c4:	05 96       	adiw	r24, 0x05	; 5
     7c6:	b8 01       	movw	r22, r16
     7c8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     7cc:	89 85       	ldd	r24, Y+9	; 0x09
     7ce:	82 30       	cpi	r24, 0x02	; 2
     7d0:	40 f0       	brcs	.+16     	; 0x7e2 <__gesf2+0x56>
     7d2:	89 89       	ldd	r24, Y+17	; 0x11
     7d4:	82 30       	cpi	r24, 0x02	; 2
     7d6:	28 f0       	brcs	.+10     	; 0x7e2 <__gesf2+0x56>
     7d8:	c7 01       	movw	r24, r14
     7da:	b8 01       	movw	r22, r16
     7dc:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fpcmp_parts_f>
     7e0:	01 c0       	rjmp	.+2      	; 0x7e4 <__gesf2+0x58>
     7e2:	8f ef       	ldi	r24, 0xFF	; 255
     7e4:	68 96       	adiw	r28, 0x18	; 24
     7e6:	e6 e0       	ldi	r30, 0x06	; 6
     7e8:	0c 94 c4 0f 	jmp	0x1f88	; 0x1f88 <__epilogue_restores__+0x18>

000007ec <__ltsf2>:
     7ec:	a8 e1       	ldi	r26, 0x18	; 24
     7ee:	b0 e0       	ldi	r27, 0x00	; 0
     7f0:	ec ef       	ldi	r30, 0xFC	; 252
     7f2:	f3 e0       	ldi	r31, 0x03	; 3
     7f4:	0c 94 a8 0f 	jmp	0x1f50	; 0x1f50 <__prologue_saves__+0x18>
     7f8:	69 83       	std	Y+1, r22	; 0x01
     7fa:	7a 83       	std	Y+2, r23	; 0x02
     7fc:	8b 83       	std	Y+3, r24	; 0x03
     7fe:	9c 83       	std	Y+4, r25	; 0x04
     800:	2d 83       	std	Y+5, r18	; 0x05
     802:	3e 83       	std	Y+6, r19	; 0x06
     804:	4f 83       	std	Y+7, r20	; 0x07
     806:	58 87       	std	Y+8, r21	; 0x08
     808:	89 e0       	ldi	r24, 0x09	; 9
     80a:	e8 2e       	mov	r14, r24
     80c:	f1 2c       	mov	r15, r1
     80e:	ec 0e       	add	r14, r28
     810:	fd 1e       	adc	r15, r29
     812:	ce 01       	movw	r24, r28
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	b7 01       	movw	r22, r14
     818:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     81c:	8e 01       	movw	r16, r28
     81e:	0f 5e       	subi	r16, 0xEF	; 239
     820:	1f 4f       	sbci	r17, 0xFF	; 255
     822:	ce 01       	movw	r24, r28
     824:	05 96       	adiw	r24, 0x05	; 5
     826:	b8 01       	movw	r22, r16
     828:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     82c:	89 85       	ldd	r24, Y+9	; 0x09
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	40 f0       	brcs	.+16     	; 0x842 <__ltsf2+0x56>
     832:	89 89       	ldd	r24, Y+17	; 0x11
     834:	82 30       	cpi	r24, 0x02	; 2
     836:	28 f0       	brcs	.+10     	; 0x842 <__ltsf2+0x56>
     838:	c7 01       	movw	r24, r14
     83a:	b8 01       	movw	r22, r16
     83c:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fpcmp_parts_f>
     840:	01 c0       	rjmp	.+2      	; 0x844 <__ltsf2+0x58>
     842:	81 e0       	ldi	r24, 0x01	; 1
     844:	68 96       	adiw	r28, 0x18	; 24
     846:	e6 e0       	ldi	r30, 0x06	; 6
     848:	0c 94 c4 0f 	jmp	0x1f88	; 0x1f88 <__epilogue_restores__+0x18>

0000084c <__fixsfsi>:
     84c:	ac e0       	ldi	r26, 0x0C	; 12
     84e:	b0 e0       	ldi	r27, 0x00	; 0
     850:	ec e2       	ldi	r30, 0x2C	; 44
     852:	f4 e0       	ldi	r31, 0x04	; 4
     854:	0c 94 ac 0f 	jmp	0x1f58	; 0x1f58 <__prologue_saves__+0x20>
     858:	69 83       	std	Y+1, r22	; 0x01
     85a:	7a 83       	std	Y+2, r23	; 0x02
     85c:	8b 83       	std	Y+3, r24	; 0x03
     85e:	9c 83       	std	Y+4, r25	; 0x04
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	be 01       	movw	r22, r28
     866:	6b 5f       	subi	r22, 0xFB	; 251
     868:	7f 4f       	sbci	r23, 0xFF	; 255
     86a:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__unpack_f>
     86e:	8d 81       	ldd	r24, Y+5	; 0x05
     870:	82 30       	cpi	r24, 0x02	; 2
     872:	61 f1       	breq	.+88     	; 0x8cc <__stack+0x6d>
     874:	82 30       	cpi	r24, 0x02	; 2
     876:	50 f1       	brcs	.+84     	; 0x8cc <__stack+0x6d>
     878:	84 30       	cpi	r24, 0x04	; 4
     87a:	21 f4       	brne	.+8      	; 0x884 <__stack+0x25>
     87c:	8e 81       	ldd	r24, Y+6	; 0x06
     87e:	88 23       	and	r24, r24
     880:	51 f1       	breq	.+84     	; 0x8d6 <__stack+0x77>
     882:	2e c0       	rjmp	.+92     	; 0x8e0 <__stack+0x81>
     884:	2f 81       	ldd	r18, Y+7	; 0x07
     886:	38 85       	ldd	r19, Y+8	; 0x08
     888:	37 fd       	sbrc	r19, 7
     88a:	20 c0       	rjmp	.+64     	; 0x8cc <__stack+0x6d>
     88c:	6e 81       	ldd	r22, Y+6	; 0x06
     88e:	2f 31       	cpi	r18, 0x1F	; 31
     890:	31 05       	cpc	r19, r1
     892:	1c f0       	brlt	.+6      	; 0x89a <__stack+0x3b>
     894:	66 23       	and	r22, r22
     896:	f9 f0       	breq	.+62     	; 0x8d6 <__stack+0x77>
     898:	23 c0       	rjmp	.+70     	; 0x8e0 <__stack+0x81>
     89a:	8e e1       	ldi	r24, 0x1E	; 30
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	82 1b       	sub	r24, r18
     8a0:	93 0b       	sbc	r25, r19
     8a2:	29 85       	ldd	r18, Y+9	; 0x09
     8a4:	3a 85       	ldd	r19, Y+10	; 0x0a
     8a6:	4b 85       	ldd	r20, Y+11	; 0x0b
     8a8:	5c 85       	ldd	r21, Y+12	; 0x0c
     8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <__stack+0x55>
     8ac:	56 95       	lsr	r21
     8ae:	47 95       	ror	r20
     8b0:	37 95       	ror	r19
     8b2:	27 95       	ror	r18
     8b4:	8a 95       	dec	r24
     8b6:	d2 f7       	brpl	.-12     	; 0x8ac <__stack+0x4d>
     8b8:	66 23       	and	r22, r22
     8ba:	b1 f0       	breq	.+44     	; 0x8e8 <__stack+0x89>
     8bc:	50 95       	com	r21
     8be:	40 95       	com	r20
     8c0:	30 95       	com	r19
     8c2:	21 95       	neg	r18
     8c4:	3f 4f       	sbci	r19, 0xFF	; 255
     8c6:	4f 4f       	sbci	r20, 0xFF	; 255
     8c8:	5f 4f       	sbci	r21, 0xFF	; 255
     8ca:	0e c0       	rjmp	.+28     	; 0x8e8 <__stack+0x89>
     8cc:	20 e0       	ldi	r18, 0x00	; 0
     8ce:	30 e0       	ldi	r19, 0x00	; 0
     8d0:	40 e0       	ldi	r20, 0x00	; 0
     8d2:	50 e0       	ldi	r21, 0x00	; 0
     8d4:	09 c0       	rjmp	.+18     	; 0x8e8 <__stack+0x89>
     8d6:	2f ef       	ldi	r18, 0xFF	; 255
     8d8:	3f ef       	ldi	r19, 0xFF	; 255
     8da:	4f ef       	ldi	r20, 0xFF	; 255
     8dc:	5f e7       	ldi	r21, 0x7F	; 127
     8de:	04 c0       	rjmp	.+8      	; 0x8e8 <__stack+0x89>
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e8       	ldi	r21, 0x80	; 128
     8e8:	b9 01       	movw	r22, r18
     8ea:	ca 01       	movw	r24, r20
     8ec:	2c 96       	adiw	r28, 0x0c	; 12
     8ee:	e2 e0       	ldi	r30, 0x02	; 2
     8f0:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <__epilogue_restores__+0x20>

000008f4 <__pack_f>:
     8f4:	df 92       	push	r13
     8f6:	ef 92       	push	r14
     8f8:	ff 92       	push	r15
     8fa:	0f 93       	push	r16
     8fc:	1f 93       	push	r17
     8fe:	fc 01       	movw	r30, r24
     900:	e4 80       	ldd	r14, Z+4	; 0x04
     902:	f5 80       	ldd	r15, Z+5	; 0x05
     904:	06 81       	ldd	r16, Z+6	; 0x06
     906:	17 81       	ldd	r17, Z+7	; 0x07
     908:	d1 80       	ldd	r13, Z+1	; 0x01
     90a:	80 81       	ld	r24, Z
     90c:	82 30       	cpi	r24, 0x02	; 2
     90e:	48 f4       	brcc	.+18     	; 0x922 <__pack_f+0x2e>
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	a0 e1       	ldi	r26, 0x10	; 16
     916:	b0 e0       	ldi	r27, 0x00	; 0
     918:	e8 2a       	or	r14, r24
     91a:	f9 2a       	or	r15, r25
     91c:	0a 2b       	or	r16, r26
     91e:	1b 2b       	or	r17, r27
     920:	a5 c0       	rjmp	.+330    	; 0xa6c <__pack_f+0x178>
     922:	84 30       	cpi	r24, 0x04	; 4
     924:	09 f4       	brne	.+2      	; 0x928 <__pack_f+0x34>
     926:	9f c0       	rjmp	.+318    	; 0xa66 <__pack_f+0x172>
     928:	82 30       	cpi	r24, 0x02	; 2
     92a:	21 f4       	brne	.+8      	; 0x934 <__pack_f+0x40>
     92c:	ee 24       	eor	r14, r14
     92e:	ff 24       	eor	r15, r15
     930:	87 01       	movw	r16, r14
     932:	05 c0       	rjmp	.+10     	; 0x93e <__pack_f+0x4a>
     934:	e1 14       	cp	r14, r1
     936:	f1 04       	cpc	r15, r1
     938:	01 05       	cpc	r16, r1
     93a:	11 05       	cpc	r17, r1
     93c:	19 f4       	brne	.+6      	; 0x944 <__pack_f+0x50>
     93e:	e0 e0       	ldi	r30, 0x00	; 0
     940:	f0 e0       	ldi	r31, 0x00	; 0
     942:	96 c0       	rjmp	.+300    	; 0xa70 <__pack_f+0x17c>
     944:	62 81       	ldd	r22, Z+2	; 0x02
     946:	73 81       	ldd	r23, Z+3	; 0x03
     948:	9f ef       	ldi	r25, 0xFF	; 255
     94a:	62 38       	cpi	r22, 0x82	; 130
     94c:	79 07       	cpc	r23, r25
     94e:	0c f0       	brlt	.+2      	; 0x952 <__pack_f+0x5e>
     950:	5b c0       	rjmp	.+182    	; 0xa08 <__pack_f+0x114>
     952:	22 e8       	ldi	r18, 0x82	; 130
     954:	3f ef       	ldi	r19, 0xFF	; 255
     956:	26 1b       	sub	r18, r22
     958:	37 0b       	sbc	r19, r23
     95a:	2a 31       	cpi	r18, 0x1A	; 26
     95c:	31 05       	cpc	r19, r1
     95e:	2c f0       	brlt	.+10     	; 0x96a <__pack_f+0x76>
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	40 e0       	ldi	r20, 0x00	; 0
     966:	50 e0       	ldi	r21, 0x00	; 0
     968:	2a c0       	rjmp	.+84     	; 0x9be <__pack_f+0xca>
     96a:	b8 01       	movw	r22, r16
     96c:	a7 01       	movw	r20, r14
     96e:	02 2e       	mov	r0, r18
     970:	04 c0       	rjmp	.+8      	; 0x97a <__pack_f+0x86>
     972:	76 95       	lsr	r23
     974:	67 95       	ror	r22
     976:	57 95       	ror	r21
     978:	47 95       	ror	r20
     97a:	0a 94       	dec	r0
     97c:	d2 f7       	brpl	.-12     	; 0x972 <__pack_f+0x7e>
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	a0 e0       	ldi	r26, 0x00	; 0
     984:	b0 e0       	ldi	r27, 0x00	; 0
     986:	04 c0       	rjmp	.+8      	; 0x990 <__pack_f+0x9c>
     988:	88 0f       	add	r24, r24
     98a:	99 1f       	adc	r25, r25
     98c:	aa 1f       	adc	r26, r26
     98e:	bb 1f       	adc	r27, r27
     990:	2a 95       	dec	r18
     992:	d2 f7       	brpl	.-12     	; 0x988 <__pack_f+0x94>
     994:	01 97       	sbiw	r24, 0x01	; 1
     996:	a1 09       	sbc	r26, r1
     998:	b1 09       	sbc	r27, r1
     99a:	8e 21       	and	r24, r14
     99c:	9f 21       	and	r25, r15
     99e:	a0 23       	and	r26, r16
     9a0:	b1 23       	and	r27, r17
     9a2:	00 97       	sbiw	r24, 0x00	; 0
     9a4:	a1 05       	cpc	r26, r1
     9a6:	b1 05       	cpc	r27, r1
     9a8:	21 f0       	breq	.+8      	; 0x9b2 <__pack_f+0xbe>
     9aa:	81 e0       	ldi	r24, 0x01	; 1
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	a0 e0       	ldi	r26, 0x00	; 0
     9b0:	b0 e0       	ldi	r27, 0x00	; 0
     9b2:	9a 01       	movw	r18, r20
     9b4:	ab 01       	movw	r20, r22
     9b6:	28 2b       	or	r18, r24
     9b8:	39 2b       	or	r19, r25
     9ba:	4a 2b       	or	r20, r26
     9bc:	5b 2b       	or	r21, r27
     9be:	da 01       	movw	r26, r20
     9c0:	c9 01       	movw	r24, r18
     9c2:	8f 77       	andi	r24, 0x7F	; 127
     9c4:	90 70       	andi	r25, 0x00	; 0
     9c6:	a0 70       	andi	r26, 0x00	; 0
     9c8:	b0 70       	andi	r27, 0x00	; 0
     9ca:	80 34       	cpi	r24, 0x40	; 64
     9cc:	91 05       	cpc	r25, r1
     9ce:	a1 05       	cpc	r26, r1
     9d0:	b1 05       	cpc	r27, r1
     9d2:	39 f4       	brne	.+14     	; 0x9e2 <__pack_f+0xee>
     9d4:	27 ff       	sbrs	r18, 7
     9d6:	09 c0       	rjmp	.+18     	; 0x9ea <__pack_f+0xf6>
     9d8:	20 5c       	subi	r18, 0xC0	; 192
     9da:	3f 4f       	sbci	r19, 0xFF	; 255
     9dc:	4f 4f       	sbci	r20, 0xFF	; 255
     9de:	5f 4f       	sbci	r21, 0xFF	; 255
     9e0:	04 c0       	rjmp	.+8      	; 0x9ea <__pack_f+0xf6>
     9e2:	21 5c       	subi	r18, 0xC1	; 193
     9e4:	3f 4f       	sbci	r19, 0xFF	; 255
     9e6:	4f 4f       	sbci	r20, 0xFF	; 255
     9e8:	5f 4f       	sbci	r21, 0xFF	; 255
     9ea:	e0 e0       	ldi	r30, 0x00	; 0
     9ec:	f0 e0       	ldi	r31, 0x00	; 0
     9ee:	20 30       	cpi	r18, 0x00	; 0
     9f0:	a0 e0       	ldi	r26, 0x00	; 0
     9f2:	3a 07       	cpc	r19, r26
     9f4:	a0 e0       	ldi	r26, 0x00	; 0
     9f6:	4a 07       	cpc	r20, r26
     9f8:	a0 e4       	ldi	r26, 0x40	; 64
     9fa:	5a 07       	cpc	r21, r26
     9fc:	10 f0       	brcs	.+4      	; 0xa02 <__pack_f+0x10e>
     9fe:	e1 e0       	ldi	r30, 0x01	; 1
     a00:	f0 e0       	ldi	r31, 0x00	; 0
     a02:	79 01       	movw	r14, r18
     a04:	8a 01       	movw	r16, r20
     a06:	27 c0       	rjmp	.+78     	; 0xa56 <__pack_f+0x162>
     a08:	60 38       	cpi	r22, 0x80	; 128
     a0a:	71 05       	cpc	r23, r1
     a0c:	64 f5       	brge	.+88     	; 0xa66 <__pack_f+0x172>
     a0e:	fb 01       	movw	r30, r22
     a10:	e1 58       	subi	r30, 0x81	; 129
     a12:	ff 4f       	sbci	r31, 0xFF	; 255
     a14:	d8 01       	movw	r26, r16
     a16:	c7 01       	movw	r24, r14
     a18:	8f 77       	andi	r24, 0x7F	; 127
     a1a:	90 70       	andi	r25, 0x00	; 0
     a1c:	a0 70       	andi	r26, 0x00	; 0
     a1e:	b0 70       	andi	r27, 0x00	; 0
     a20:	80 34       	cpi	r24, 0x40	; 64
     a22:	91 05       	cpc	r25, r1
     a24:	a1 05       	cpc	r26, r1
     a26:	b1 05       	cpc	r27, r1
     a28:	39 f4       	brne	.+14     	; 0xa38 <__pack_f+0x144>
     a2a:	e7 fe       	sbrs	r14, 7
     a2c:	0d c0       	rjmp	.+26     	; 0xa48 <__pack_f+0x154>
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	a0 e0       	ldi	r26, 0x00	; 0
     a34:	b0 e0       	ldi	r27, 0x00	; 0
     a36:	04 c0       	rjmp	.+8      	; 0xa40 <__pack_f+0x14c>
     a38:	8f e3       	ldi	r24, 0x3F	; 63
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	a0 e0       	ldi	r26, 0x00	; 0
     a3e:	b0 e0       	ldi	r27, 0x00	; 0
     a40:	e8 0e       	add	r14, r24
     a42:	f9 1e       	adc	r15, r25
     a44:	0a 1f       	adc	r16, r26
     a46:	1b 1f       	adc	r17, r27
     a48:	17 ff       	sbrs	r17, 7
     a4a:	05 c0       	rjmp	.+10     	; 0xa56 <__pack_f+0x162>
     a4c:	16 95       	lsr	r17
     a4e:	07 95       	ror	r16
     a50:	f7 94       	ror	r15
     a52:	e7 94       	ror	r14
     a54:	31 96       	adiw	r30, 0x01	; 1
     a56:	87 e0       	ldi	r24, 0x07	; 7
     a58:	16 95       	lsr	r17
     a5a:	07 95       	ror	r16
     a5c:	f7 94       	ror	r15
     a5e:	e7 94       	ror	r14
     a60:	8a 95       	dec	r24
     a62:	d1 f7       	brne	.-12     	; 0xa58 <__pack_f+0x164>
     a64:	05 c0       	rjmp	.+10     	; 0xa70 <__pack_f+0x17c>
     a66:	ee 24       	eor	r14, r14
     a68:	ff 24       	eor	r15, r15
     a6a:	87 01       	movw	r16, r14
     a6c:	ef ef       	ldi	r30, 0xFF	; 255
     a6e:	f0 e0       	ldi	r31, 0x00	; 0
     a70:	6e 2f       	mov	r22, r30
     a72:	67 95       	ror	r22
     a74:	66 27       	eor	r22, r22
     a76:	67 95       	ror	r22
     a78:	90 2f       	mov	r25, r16
     a7a:	9f 77       	andi	r25, 0x7F	; 127
     a7c:	d7 94       	ror	r13
     a7e:	dd 24       	eor	r13, r13
     a80:	d7 94       	ror	r13
     a82:	8e 2f       	mov	r24, r30
     a84:	86 95       	lsr	r24
     a86:	49 2f       	mov	r20, r25
     a88:	46 2b       	or	r20, r22
     a8a:	58 2f       	mov	r21, r24
     a8c:	5d 29       	or	r21, r13
     a8e:	b7 01       	movw	r22, r14
     a90:	ca 01       	movw	r24, r20
     a92:	1f 91       	pop	r17
     a94:	0f 91       	pop	r16
     a96:	ff 90       	pop	r15
     a98:	ef 90       	pop	r14
     a9a:	df 90       	pop	r13
     a9c:	08 95       	ret

00000a9e <__unpack_f>:
     a9e:	fc 01       	movw	r30, r24
     aa0:	db 01       	movw	r26, r22
     aa2:	40 81       	ld	r20, Z
     aa4:	51 81       	ldd	r21, Z+1	; 0x01
     aa6:	22 81       	ldd	r18, Z+2	; 0x02
     aa8:	62 2f       	mov	r22, r18
     aaa:	6f 77       	andi	r22, 0x7F	; 127
     aac:	70 e0       	ldi	r23, 0x00	; 0
     aae:	22 1f       	adc	r18, r18
     ab0:	22 27       	eor	r18, r18
     ab2:	22 1f       	adc	r18, r18
     ab4:	93 81       	ldd	r25, Z+3	; 0x03
     ab6:	89 2f       	mov	r24, r25
     ab8:	88 0f       	add	r24, r24
     aba:	82 2b       	or	r24, r18
     abc:	28 2f       	mov	r18, r24
     abe:	30 e0       	ldi	r19, 0x00	; 0
     ac0:	99 1f       	adc	r25, r25
     ac2:	99 27       	eor	r25, r25
     ac4:	99 1f       	adc	r25, r25
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	9c 93       	st	X, r25
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	21 15       	cp	r18, r1
     ace:	31 05       	cpc	r19, r1
     ad0:	a9 f5       	brne	.+106    	; 0xb3c <__unpack_f+0x9e>
     ad2:	41 15       	cp	r20, r1
     ad4:	51 05       	cpc	r21, r1
     ad6:	61 05       	cpc	r22, r1
     ad8:	71 05       	cpc	r23, r1
     ada:	11 f4       	brne	.+4      	; 0xae0 <__unpack_f+0x42>
     adc:	82 e0       	ldi	r24, 0x02	; 2
     ade:	37 c0       	rjmp	.+110    	; 0xb4e <__unpack_f+0xb0>
     ae0:	82 e8       	ldi	r24, 0x82	; 130
     ae2:	9f ef       	ldi	r25, 0xFF	; 255
     ae4:	13 96       	adiw	r26, 0x03	; 3
     ae6:	9c 93       	st	X, r25
     ae8:	8e 93       	st	-X, r24
     aea:	12 97       	sbiw	r26, 0x02	; 2
     aec:	9a 01       	movw	r18, r20
     aee:	ab 01       	movw	r20, r22
     af0:	67 e0       	ldi	r22, 0x07	; 7
     af2:	22 0f       	add	r18, r18
     af4:	33 1f       	adc	r19, r19
     af6:	44 1f       	adc	r20, r20
     af8:	55 1f       	adc	r21, r21
     afa:	6a 95       	dec	r22
     afc:	d1 f7       	brne	.-12     	; 0xaf2 <__unpack_f+0x54>
     afe:	83 e0       	ldi	r24, 0x03	; 3
     b00:	8c 93       	st	X, r24
     b02:	0d c0       	rjmp	.+26     	; 0xb1e <__unpack_f+0x80>
     b04:	22 0f       	add	r18, r18
     b06:	33 1f       	adc	r19, r19
     b08:	44 1f       	adc	r20, r20
     b0a:	55 1f       	adc	r21, r21
     b0c:	12 96       	adiw	r26, 0x02	; 2
     b0e:	8d 91       	ld	r24, X+
     b10:	9c 91       	ld	r25, X
     b12:	13 97       	sbiw	r26, 0x03	; 3
     b14:	01 97       	sbiw	r24, 0x01	; 1
     b16:	13 96       	adiw	r26, 0x03	; 3
     b18:	9c 93       	st	X, r25
     b1a:	8e 93       	st	-X, r24
     b1c:	12 97       	sbiw	r26, 0x02	; 2
     b1e:	20 30       	cpi	r18, 0x00	; 0
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	38 07       	cpc	r19, r24
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	48 07       	cpc	r20, r24
     b28:	80 e4       	ldi	r24, 0x40	; 64
     b2a:	58 07       	cpc	r21, r24
     b2c:	58 f3       	brcs	.-42     	; 0xb04 <__unpack_f+0x66>
     b2e:	14 96       	adiw	r26, 0x04	; 4
     b30:	2d 93       	st	X+, r18
     b32:	3d 93       	st	X+, r19
     b34:	4d 93       	st	X+, r20
     b36:	5c 93       	st	X, r21
     b38:	17 97       	sbiw	r26, 0x07	; 7
     b3a:	08 95       	ret
     b3c:	2f 3f       	cpi	r18, 0xFF	; 255
     b3e:	31 05       	cpc	r19, r1
     b40:	79 f4       	brne	.+30     	; 0xb60 <__unpack_f+0xc2>
     b42:	41 15       	cp	r20, r1
     b44:	51 05       	cpc	r21, r1
     b46:	61 05       	cpc	r22, r1
     b48:	71 05       	cpc	r23, r1
     b4a:	19 f4       	brne	.+6      	; 0xb52 <__unpack_f+0xb4>
     b4c:	84 e0       	ldi	r24, 0x04	; 4
     b4e:	8c 93       	st	X, r24
     b50:	08 95       	ret
     b52:	64 ff       	sbrs	r22, 4
     b54:	03 c0       	rjmp	.+6      	; 0xb5c <__unpack_f+0xbe>
     b56:	81 e0       	ldi	r24, 0x01	; 1
     b58:	8c 93       	st	X, r24
     b5a:	12 c0       	rjmp	.+36     	; 0xb80 <__unpack_f+0xe2>
     b5c:	1c 92       	st	X, r1
     b5e:	10 c0       	rjmp	.+32     	; 0xb80 <__unpack_f+0xe2>
     b60:	2f 57       	subi	r18, 0x7F	; 127
     b62:	30 40       	sbci	r19, 0x00	; 0
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	3c 93       	st	X, r19
     b68:	2e 93       	st	-X, r18
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	83 e0       	ldi	r24, 0x03	; 3
     b6e:	8c 93       	st	X, r24
     b70:	87 e0       	ldi	r24, 0x07	; 7
     b72:	44 0f       	add	r20, r20
     b74:	55 1f       	adc	r21, r21
     b76:	66 1f       	adc	r22, r22
     b78:	77 1f       	adc	r23, r23
     b7a:	8a 95       	dec	r24
     b7c:	d1 f7       	brne	.-12     	; 0xb72 <__unpack_f+0xd4>
     b7e:	70 64       	ori	r23, 0x40	; 64
     b80:	14 96       	adiw	r26, 0x04	; 4
     b82:	4d 93       	st	X+, r20
     b84:	5d 93       	st	X+, r21
     b86:	6d 93       	st	X+, r22
     b88:	7c 93       	st	X, r23
     b8a:	17 97       	sbiw	r26, 0x07	; 7
     b8c:	08 95       	ret

00000b8e <__fpcmp_parts_f>:
     b8e:	1f 93       	push	r17
     b90:	dc 01       	movw	r26, r24
     b92:	fb 01       	movw	r30, r22
     b94:	9c 91       	ld	r25, X
     b96:	92 30       	cpi	r25, 0x02	; 2
     b98:	08 f4       	brcc	.+2      	; 0xb9c <__fpcmp_parts_f+0xe>
     b9a:	47 c0       	rjmp	.+142    	; 0xc2a <__fpcmp_parts_f+0x9c>
     b9c:	80 81       	ld	r24, Z
     b9e:	82 30       	cpi	r24, 0x02	; 2
     ba0:	08 f4       	brcc	.+2      	; 0xba4 <__fpcmp_parts_f+0x16>
     ba2:	43 c0       	rjmp	.+134    	; 0xc2a <__fpcmp_parts_f+0x9c>
     ba4:	94 30       	cpi	r25, 0x04	; 4
     ba6:	51 f4       	brne	.+20     	; 0xbbc <__fpcmp_parts_f+0x2e>
     ba8:	11 96       	adiw	r26, 0x01	; 1
     baa:	1c 91       	ld	r17, X
     bac:	84 30       	cpi	r24, 0x04	; 4
     bae:	99 f5       	brne	.+102    	; 0xc16 <__fpcmp_parts_f+0x88>
     bb0:	81 81       	ldd	r24, Z+1	; 0x01
     bb2:	68 2f       	mov	r22, r24
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	61 1b       	sub	r22, r17
     bb8:	71 09       	sbc	r23, r1
     bba:	3f c0       	rjmp	.+126    	; 0xc3a <__fpcmp_parts_f+0xac>
     bbc:	84 30       	cpi	r24, 0x04	; 4
     bbe:	21 f0       	breq	.+8      	; 0xbc8 <__fpcmp_parts_f+0x3a>
     bc0:	92 30       	cpi	r25, 0x02	; 2
     bc2:	31 f4       	brne	.+12     	; 0xbd0 <__fpcmp_parts_f+0x42>
     bc4:	82 30       	cpi	r24, 0x02	; 2
     bc6:	b9 f1       	breq	.+110    	; 0xc36 <__fpcmp_parts_f+0xa8>
     bc8:	81 81       	ldd	r24, Z+1	; 0x01
     bca:	88 23       	and	r24, r24
     bcc:	89 f1       	breq	.+98     	; 0xc30 <__fpcmp_parts_f+0xa2>
     bce:	2d c0       	rjmp	.+90     	; 0xc2a <__fpcmp_parts_f+0x9c>
     bd0:	11 96       	adiw	r26, 0x01	; 1
     bd2:	1c 91       	ld	r17, X
     bd4:	11 97       	sbiw	r26, 0x01	; 1
     bd6:	82 30       	cpi	r24, 0x02	; 2
     bd8:	f1 f0       	breq	.+60     	; 0xc16 <__fpcmp_parts_f+0x88>
     bda:	81 81       	ldd	r24, Z+1	; 0x01
     bdc:	18 17       	cp	r17, r24
     bde:	d9 f4       	brne	.+54     	; 0xc16 <__fpcmp_parts_f+0x88>
     be0:	12 96       	adiw	r26, 0x02	; 2
     be2:	2d 91       	ld	r18, X+
     be4:	3c 91       	ld	r19, X
     be6:	13 97       	sbiw	r26, 0x03	; 3
     be8:	82 81       	ldd	r24, Z+2	; 0x02
     bea:	93 81       	ldd	r25, Z+3	; 0x03
     bec:	82 17       	cp	r24, r18
     bee:	93 07       	cpc	r25, r19
     bf0:	94 f0       	brlt	.+36     	; 0xc16 <__fpcmp_parts_f+0x88>
     bf2:	28 17       	cp	r18, r24
     bf4:	39 07       	cpc	r19, r25
     bf6:	bc f0       	brlt	.+46     	; 0xc26 <__fpcmp_parts_f+0x98>
     bf8:	14 96       	adiw	r26, 0x04	; 4
     bfa:	8d 91       	ld	r24, X+
     bfc:	9d 91       	ld	r25, X+
     bfe:	0d 90       	ld	r0, X+
     c00:	bc 91       	ld	r27, X
     c02:	a0 2d       	mov	r26, r0
     c04:	24 81       	ldd	r18, Z+4	; 0x04
     c06:	35 81       	ldd	r19, Z+5	; 0x05
     c08:	46 81       	ldd	r20, Z+6	; 0x06
     c0a:	57 81       	ldd	r21, Z+7	; 0x07
     c0c:	28 17       	cp	r18, r24
     c0e:	39 07       	cpc	r19, r25
     c10:	4a 07       	cpc	r20, r26
     c12:	5b 07       	cpc	r21, r27
     c14:	18 f4       	brcc	.+6      	; 0xc1c <__fpcmp_parts_f+0x8e>
     c16:	11 23       	and	r17, r17
     c18:	41 f0       	breq	.+16     	; 0xc2a <__fpcmp_parts_f+0x9c>
     c1a:	0a c0       	rjmp	.+20     	; 0xc30 <__fpcmp_parts_f+0xa2>
     c1c:	82 17       	cp	r24, r18
     c1e:	93 07       	cpc	r25, r19
     c20:	a4 07       	cpc	r26, r20
     c22:	b5 07       	cpc	r27, r21
     c24:	40 f4       	brcc	.+16     	; 0xc36 <__fpcmp_parts_f+0xa8>
     c26:	11 23       	and	r17, r17
     c28:	19 f0       	breq	.+6      	; 0xc30 <__fpcmp_parts_f+0xa2>
     c2a:	61 e0       	ldi	r22, 0x01	; 1
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	05 c0       	rjmp	.+10     	; 0xc3a <__fpcmp_parts_f+0xac>
     c30:	6f ef       	ldi	r22, 0xFF	; 255
     c32:	7f ef       	ldi	r23, 0xFF	; 255
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <__fpcmp_parts_f+0xac>
     c36:	60 e0       	ldi	r22, 0x00	; 0
     c38:	70 e0       	ldi	r23, 0x00	; 0
     c3a:	cb 01       	movw	r24, r22
     c3c:	1f 91       	pop	r17
     c3e:	08 95       	ret

00000c40 <DIO_VidSetPinDirection>:
#include "bit.h"
#include "DIO_Private.h"
#include "DIO_interface.h"

void DIO_VidSetPinDirection(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Direction)
{
     c40:	df 93       	push	r29
     c42:	cf 93       	push	r28
     c44:	cd b7       	in	r28, 0x3d	; 61
     c46:	de b7       	in	r29, 0x3e	; 62
     c48:	27 97       	sbiw	r28, 0x07	; 7
     c4a:	0f b6       	in	r0, 0x3f	; 63
     c4c:	f8 94       	cli
     c4e:	de bf       	out	0x3e, r29	; 62
     c50:	0f be       	out	0x3f, r0	; 63
     c52:	cd bf       	out	0x3d, r28	; 61
     c54:	8b 83       	std	Y+3, r24	; 0x03
     c56:	6c 83       	std	Y+4, r22	; 0x04
     c58:	4d 83       	std	Y+5, r20	; 0x05
    volatile u8 *ddr_reg;

    switch (Copy_u8Port) {
     c5a:	8b 81       	ldd	r24, Y+3	; 0x03
     c5c:	28 2f       	mov	r18, r24
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	3f 83       	std	Y+7, r19	; 0x07
     c62:	2e 83       	std	Y+6, r18	; 0x06
     c64:	8e 81       	ldd	r24, Y+6	; 0x06
     c66:	9f 81       	ldd	r25, Y+7	; 0x07
     c68:	81 30       	cpi	r24, 0x01	; 1
     c6a:	91 05       	cpc	r25, r1
     c6c:	d1 f0       	breq	.+52     	; 0xca2 <DIO_VidSetPinDirection+0x62>
     c6e:	2e 81       	ldd	r18, Y+6	; 0x06
     c70:	3f 81       	ldd	r19, Y+7	; 0x07
     c72:	22 30       	cpi	r18, 0x02	; 2
     c74:	31 05       	cpc	r19, r1
     c76:	2c f4       	brge	.+10     	; 0xc82 <DIO_VidSetPinDirection+0x42>
     c78:	8e 81       	ldd	r24, Y+6	; 0x06
     c7a:	9f 81       	ldd	r25, Y+7	; 0x07
     c7c:	00 97       	sbiw	r24, 0x00	; 0
     c7e:	61 f0       	breq	.+24     	; 0xc98 <DIO_VidSetPinDirection+0x58>
     c80:	49 c0       	rjmp	.+146    	; 0xd14 <DIO_VidSetPinDirection+0xd4>
     c82:	2e 81       	ldd	r18, Y+6	; 0x06
     c84:	3f 81       	ldd	r19, Y+7	; 0x07
     c86:	22 30       	cpi	r18, 0x02	; 2
     c88:	31 05       	cpc	r19, r1
     c8a:	81 f0       	breq	.+32     	; 0xcac <DIO_VidSetPinDirection+0x6c>
     c8c:	8e 81       	ldd	r24, Y+6	; 0x06
     c8e:	9f 81       	ldd	r25, Y+7	; 0x07
     c90:	83 30       	cpi	r24, 0x03	; 3
     c92:	91 05       	cpc	r25, r1
     c94:	81 f0       	breq	.+32     	; 0xcb6 <DIO_VidSetPinDirection+0x76>
     c96:	3e c0       	rjmp	.+124    	; 0xd14 <DIO_VidSetPinDirection+0xd4>
        case Port_A:
            ddr_reg = &DDRA;
     c98:	8a e3       	ldi	r24, 0x3A	; 58
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	9a 83       	std	Y+2, r25	; 0x02
     c9e:	89 83       	std	Y+1, r24	; 0x01
     ca0:	0e c0       	rjmp	.+28     	; 0xcbe <DIO_VidSetPinDirection+0x7e>
            break;
        case Port_B:
            ddr_reg = &DDRB;
     ca2:	87 e3       	ldi	r24, 0x37	; 55
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	9a 83       	std	Y+2, r25	; 0x02
     ca8:	89 83       	std	Y+1, r24	; 0x01
     caa:	09 c0       	rjmp	.+18     	; 0xcbe <DIO_VidSetPinDirection+0x7e>
            break;
        case Port_C:
            ddr_reg = &DDRC;
     cac:	84 e3       	ldi	r24, 0x34	; 52
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	9a 83       	std	Y+2, r25	; 0x02
     cb2:	89 83       	std	Y+1, r24	; 0x01
     cb4:	04 c0       	rjmp	.+8      	; 0xcbe <DIO_VidSetPinDirection+0x7e>
            break;
        case Port_D:
            ddr_reg = &DDRD;
     cb6:	81 e3       	ldi	r24, 0x31	; 49
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	9a 83       	std	Y+2, r25	; 0x02
     cbc:	89 83       	std	Y+1, r24	; 0x01
            break;
        default:
            return;
    }

    if (Copy_u8Direction == Input) {
     cbe:	8d 81       	ldd	r24, Y+5	; 0x05
     cc0:	88 23       	and	r24, r24
     cc2:	a9 f4       	brne	.+42     	; 0xcee <DIO_VidSetPinDirection+0xae>
    	CLEARBIT(*ddr_reg, Copy_u8Pin);
     cc4:	e9 81       	ldd	r30, Y+1	; 0x01
     cc6:	fa 81       	ldd	r31, Y+2	; 0x02
     cc8:	80 81       	ld	r24, Z
     cca:	48 2f       	mov	r20, r24
     ccc:	8c 81       	ldd	r24, Y+4	; 0x04
     cce:	28 2f       	mov	r18, r24
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	81 e0       	ldi	r24, 0x01	; 1
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	02 2e       	mov	r0, r18
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <DIO_VidSetPinDirection+0x9e>
     cda:	88 0f       	add	r24, r24
     cdc:	99 1f       	adc	r25, r25
     cde:	0a 94       	dec	r0
     ce0:	e2 f7       	brpl	.-8      	; 0xcda <DIO_VidSetPinDirection+0x9a>
     ce2:	80 95       	com	r24
     ce4:	84 23       	and	r24, r20
     ce6:	e9 81       	ldd	r30, Y+1	; 0x01
     ce8:	fa 81       	ldd	r31, Y+2	; 0x02
     cea:	80 83       	st	Z, r24
     cec:	13 c0       	rjmp	.+38     	; 0xd14 <DIO_VidSetPinDirection+0xd4>
    } else {
    	SETBIT(*ddr_reg, Copy_u8Pin);
     cee:	e9 81       	ldd	r30, Y+1	; 0x01
     cf0:	fa 81       	ldd	r31, Y+2	; 0x02
     cf2:	80 81       	ld	r24, Z
     cf4:	48 2f       	mov	r20, r24
     cf6:	8c 81       	ldd	r24, Y+4	; 0x04
     cf8:	28 2f       	mov	r18, r24
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	02 2e       	mov	r0, r18
     d02:	02 c0       	rjmp	.+4      	; 0xd08 <DIO_VidSetPinDirection+0xc8>
     d04:	88 0f       	add	r24, r24
     d06:	99 1f       	adc	r25, r25
     d08:	0a 94       	dec	r0
     d0a:	e2 f7       	brpl	.-8      	; 0xd04 <DIO_VidSetPinDirection+0xc4>
     d0c:	84 2b       	or	r24, r20
     d0e:	e9 81       	ldd	r30, Y+1	; 0x01
     d10:	fa 81       	ldd	r31, Y+2	; 0x02
     d12:	80 83       	st	Z, r24
    }
}
     d14:	27 96       	adiw	r28, 0x07	; 7
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	cf 91       	pop	r28
     d22:	df 91       	pop	r29
     d24:	08 95       	ret

00000d26 <DIO_VidSetPinValue>:


void DIO_VidSetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value)
{
     d26:	df 93       	push	r29
     d28:	cf 93       	push	r28
     d2a:	cd b7       	in	r28, 0x3d	; 61
     d2c:	de b7       	in	r29, 0x3e	; 62
     d2e:	27 97       	sbiw	r28, 0x07	; 7
     d30:	0f b6       	in	r0, 0x3f	; 63
     d32:	f8 94       	cli
     d34:	de bf       	out	0x3e, r29	; 62
     d36:	0f be       	out	0x3f, r0	; 63
     d38:	cd bf       	out	0x3d, r28	; 61
     d3a:	8b 83       	std	Y+3, r24	; 0x03
     d3c:	6c 83       	std	Y+4, r22	; 0x04
     d3e:	4d 83       	std	Y+5, r20	; 0x05
    volatile u8 *port_reg;

    switch (Copy_u8Port) {
     d40:	8b 81       	ldd	r24, Y+3	; 0x03
     d42:	28 2f       	mov	r18, r24
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	3f 83       	std	Y+7, r19	; 0x07
     d48:	2e 83       	std	Y+6, r18	; 0x06
     d4a:	8e 81       	ldd	r24, Y+6	; 0x06
     d4c:	9f 81       	ldd	r25, Y+7	; 0x07
     d4e:	81 30       	cpi	r24, 0x01	; 1
     d50:	91 05       	cpc	r25, r1
     d52:	d1 f0       	breq	.+52     	; 0xd88 <DIO_VidSetPinValue+0x62>
     d54:	2e 81       	ldd	r18, Y+6	; 0x06
     d56:	3f 81       	ldd	r19, Y+7	; 0x07
     d58:	22 30       	cpi	r18, 0x02	; 2
     d5a:	31 05       	cpc	r19, r1
     d5c:	2c f4       	brge	.+10     	; 0xd68 <DIO_VidSetPinValue+0x42>
     d5e:	8e 81       	ldd	r24, Y+6	; 0x06
     d60:	9f 81       	ldd	r25, Y+7	; 0x07
     d62:	00 97       	sbiw	r24, 0x00	; 0
     d64:	61 f0       	breq	.+24     	; 0xd7e <DIO_VidSetPinValue+0x58>
     d66:	49 c0       	rjmp	.+146    	; 0xdfa <DIO_VidSetPinValue+0xd4>
     d68:	2e 81       	ldd	r18, Y+6	; 0x06
     d6a:	3f 81       	ldd	r19, Y+7	; 0x07
     d6c:	22 30       	cpi	r18, 0x02	; 2
     d6e:	31 05       	cpc	r19, r1
     d70:	81 f0       	breq	.+32     	; 0xd92 <DIO_VidSetPinValue+0x6c>
     d72:	8e 81       	ldd	r24, Y+6	; 0x06
     d74:	9f 81       	ldd	r25, Y+7	; 0x07
     d76:	83 30       	cpi	r24, 0x03	; 3
     d78:	91 05       	cpc	r25, r1
     d7a:	81 f0       	breq	.+32     	; 0xd9c <DIO_VidSetPinValue+0x76>
     d7c:	3e c0       	rjmp	.+124    	; 0xdfa <DIO_VidSetPinValue+0xd4>
        case Port_A:
            port_reg = &PORTA;
     d7e:	8b e3       	ldi	r24, 0x3B	; 59
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	9a 83       	std	Y+2, r25	; 0x02
     d84:	89 83       	std	Y+1, r24	; 0x01
     d86:	0e c0       	rjmp	.+28     	; 0xda4 <DIO_VidSetPinValue+0x7e>
            break;
        case Port_B:
            port_reg = &PORTB;
     d88:	88 e3       	ldi	r24, 0x38	; 56
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	9a 83       	std	Y+2, r25	; 0x02
     d8e:	89 83       	std	Y+1, r24	; 0x01
     d90:	09 c0       	rjmp	.+18     	; 0xda4 <DIO_VidSetPinValue+0x7e>
            break;
        case Port_C:
            port_reg = &PORTC;
     d92:	85 e3       	ldi	r24, 0x35	; 53
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	9a 83       	std	Y+2, r25	; 0x02
     d98:	89 83       	std	Y+1, r24	; 0x01
     d9a:	04 c0       	rjmp	.+8      	; 0xda4 <DIO_VidSetPinValue+0x7e>
            break;
        case Port_D:
            port_reg = &PORTD;
     d9c:	82 e3       	ldi	r24, 0x32	; 50
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	9a 83       	std	Y+2, r25	; 0x02
     da2:	89 83       	std	Y+1, r24	; 0x01
            break;
        default:
            return;
    }

    if (Copy_u8Value == Pin_High) {
     da4:	8d 81       	ldd	r24, Y+5	; 0x05
     da6:	81 30       	cpi	r24, 0x01	; 1
     da8:	a1 f4       	brne	.+40     	; 0xdd2 <DIO_VidSetPinValue+0xac>
        SETBIT(*port_reg, Copy_u8Pin);
     daa:	e9 81       	ldd	r30, Y+1	; 0x01
     dac:	fa 81       	ldd	r31, Y+2	; 0x02
     dae:	80 81       	ld	r24, Z
     db0:	48 2f       	mov	r20, r24
     db2:	8c 81       	ldd	r24, Y+4	; 0x04
     db4:	28 2f       	mov	r18, r24
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	81 e0       	ldi	r24, 0x01	; 1
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	02 2e       	mov	r0, r18
     dbe:	02 c0       	rjmp	.+4      	; 0xdc4 <DIO_VidSetPinValue+0x9e>
     dc0:	88 0f       	add	r24, r24
     dc2:	99 1f       	adc	r25, r25
     dc4:	0a 94       	dec	r0
     dc6:	e2 f7       	brpl	.-8      	; 0xdc0 <DIO_VidSetPinValue+0x9a>
     dc8:	84 2b       	or	r24, r20
     dca:	e9 81       	ldd	r30, Y+1	; 0x01
     dcc:	fa 81       	ldd	r31, Y+2	; 0x02
     dce:	80 83       	st	Z, r24
     dd0:	14 c0       	rjmp	.+40     	; 0xdfa <DIO_VidSetPinValue+0xd4>
    } else {
        CLEARBIT(*port_reg, Copy_u8Pin);
     dd2:	e9 81       	ldd	r30, Y+1	; 0x01
     dd4:	fa 81       	ldd	r31, Y+2	; 0x02
     dd6:	80 81       	ld	r24, Z
     dd8:	48 2f       	mov	r20, r24
     dda:	8c 81       	ldd	r24, Y+4	; 0x04
     ddc:	28 2f       	mov	r18, r24
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	81 e0       	ldi	r24, 0x01	; 1
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	02 2e       	mov	r0, r18
     de6:	02 c0       	rjmp	.+4      	; 0xdec <DIO_VidSetPinValue+0xc6>
     de8:	88 0f       	add	r24, r24
     dea:	99 1f       	adc	r25, r25
     dec:	0a 94       	dec	r0
     dee:	e2 f7       	brpl	.-8      	; 0xde8 <DIO_VidSetPinValue+0xc2>
     df0:	80 95       	com	r24
     df2:	84 23       	and	r24, r20
     df4:	e9 81       	ldd	r30, Y+1	; 0x01
     df6:	fa 81       	ldd	r31, Y+2	; 0x02
     df8:	80 83       	st	Z, r24
    }
}
     dfa:	27 96       	adiw	r28, 0x07	; 7
     dfc:	0f b6       	in	r0, 0x3f	; 63
     dfe:	f8 94       	cli
     e00:	de bf       	out	0x3e, r29	; 62
     e02:	0f be       	out	0x3f, r0	; 63
     e04:	cd bf       	out	0x3d, r28	; 61
     e06:	cf 91       	pop	r28
     e08:	df 91       	pop	r29
     e0a:	08 95       	ret

00000e0c <DIO_VidGetPinValue>:

void DIO_VidGetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8 * pu8Data)
{
     e0c:	df 93       	push	r29
     e0e:	cf 93       	push	r28
     e10:	cd b7       	in	r28, 0x3d	; 61
     e12:	de b7       	in	r29, 0x3e	; 62
     e14:	28 97       	sbiw	r28, 0x08	; 8
     e16:	0f b6       	in	r0, 0x3f	; 63
     e18:	f8 94       	cli
     e1a:	de bf       	out	0x3e, r29	; 62
     e1c:	0f be       	out	0x3f, r0	; 63
     e1e:	cd bf       	out	0x3d, r28	; 61
     e20:	8b 83       	std	Y+3, r24	; 0x03
     e22:	6c 83       	std	Y+4, r22	; 0x04
     e24:	5e 83       	std	Y+6, r21	; 0x06
     e26:	4d 83       	std	Y+5, r20	; 0x05
    volatile u8 *pin_reg;

    switch (Copy_u8Port) {
     e28:	8b 81       	ldd	r24, Y+3	; 0x03
     e2a:	28 2f       	mov	r18, r24
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	38 87       	std	Y+8, r19	; 0x08
     e30:	2f 83       	std	Y+7, r18	; 0x07
     e32:	4f 81       	ldd	r20, Y+7	; 0x07
     e34:	58 85       	ldd	r21, Y+8	; 0x08
     e36:	41 30       	cpi	r20, 0x01	; 1
     e38:	51 05       	cpc	r21, r1
     e3a:	d9 f0       	breq	.+54     	; 0xe72 <DIO_VidGetPinValue+0x66>
     e3c:	8f 81       	ldd	r24, Y+7	; 0x07
     e3e:	98 85       	ldd	r25, Y+8	; 0x08
     e40:	82 30       	cpi	r24, 0x02	; 2
     e42:	91 05       	cpc	r25, r1
     e44:	34 f4       	brge	.+12     	; 0xe52 <DIO_VidGetPinValue+0x46>
     e46:	2f 81       	ldd	r18, Y+7	; 0x07
     e48:	38 85       	ldd	r19, Y+8	; 0x08
     e4a:	21 15       	cp	r18, r1
     e4c:	31 05       	cpc	r19, r1
     e4e:	61 f0       	breq	.+24     	; 0xe68 <DIO_VidGetPinValue+0x5c>
     e50:	31 c0       	rjmp	.+98     	; 0xeb4 <DIO_VidGetPinValue+0xa8>
     e52:	4f 81       	ldd	r20, Y+7	; 0x07
     e54:	58 85       	ldd	r21, Y+8	; 0x08
     e56:	42 30       	cpi	r20, 0x02	; 2
     e58:	51 05       	cpc	r21, r1
     e5a:	81 f0       	breq	.+32     	; 0xe7c <DIO_VidGetPinValue+0x70>
     e5c:	8f 81       	ldd	r24, Y+7	; 0x07
     e5e:	98 85       	ldd	r25, Y+8	; 0x08
     e60:	83 30       	cpi	r24, 0x03	; 3
     e62:	91 05       	cpc	r25, r1
     e64:	81 f0       	breq	.+32     	; 0xe86 <DIO_VidGetPinValue+0x7a>
     e66:	26 c0       	rjmp	.+76     	; 0xeb4 <DIO_VidGetPinValue+0xa8>
        case Port_A:
            pin_reg = &PINA;
     e68:	89 e3       	ldi	r24, 0x39	; 57
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	9a 83       	std	Y+2, r25	; 0x02
     e6e:	89 83       	std	Y+1, r24	; 0x01
     e70:	0e c0       	rjmp	.+28     	; 0xe8e <DIO_VidGetPinValue+0x82>
            break;
        case Port_B:
            pin_reg = &PINB;
     e72:	86 e3       	ldi	r24, 0x36	; 54
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	9a 83       	std	Y+2, r25	; 0x02
     e78:	89 83       	std	Y+1, r24	; 0x01
     e7a:	09 c0       	rjmp	.+18     	; 0xe8e <DIO_VidGetPinValue+0x82>
            break;
        case Port_C:
            pin_reg = &PINC;
     e7c:	83 e3       	ldi	r24, 0x33	; 51
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	9a 83       	std	Y+2, r25	; 0x02
     e82:	89 83       	std	Y+1, r24	; 0x01
     e84:	04 c0       	rjmp	.+8      	; 0xe8e <DIO_VidGetPinValue+0x82>
            break;
        case Port_D:
            pin_reg = &PIND;
     e86:	80 e3       	ldi	r24, 0x30	; 48
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	9a 83       	std	Y+2, r25	; 0x02
     e8c:	89 83       	std	Y+1, r24	; 0x01
            break;
        default:
            return;
    }

    *pu8Data = GET_BIT(*pin_reg, Copy_u8Pin);
     e8e:	e9 81       	ldd	r30, Y+1	; 0x01
     e90:	fa 81       	ldd	r31, Y+2	; 0x02
     e92:	80 81       	ld	r24, Z
     e94:	28 2f       	mov	r18, r24
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	8c 81       	ldd	r24, Y+4	; 0x04
     e9a:	88 2f       	mov	r24, r24
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	a9 01       	movw	r20, r18
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <DIO_VidGetPinValue+0x9a>
     ea2:	55 95       	asr	r21
     ea4:	47 95       	ror	r20
     ea6:	8a 95       	dec	r24
     ea8:	e2 f7       	brpl	.-8      	; 0xea2 <DIO_VidGetPinValue+0x96>
     eaa:	ca 01       	movw	r24, r20
     eac:	81 70       	andi	r24, 0x01	; 1
     eae:	ed 81       	ldd	r30, Y+5	; 0x05
     eb0:	fe 81       	ldd	r31, Y+6	; 0x06
     eb2:	80 83       	st	Z, r24
}
     eb4:	28 96       	adiw	r28, 0x08	; 8
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	f8 94       	cli
     eba:	de bf       	out	0x3e, r29	; 62
     ebc:	0f be       	out	0x3f, r0	; 63
     ebe:	cd bf       	out	0x3d, r28	; 61
     ec0:	cf 91       	pop	r28
     ec2:	df 91       	pop	r29
     ec4:	08 95       	ret

00000ec6 <DIO_VidSetPortDirection>:

void DIO_VidSetPortDirection(u8 Copy_u8Port , u8 Copy_u8Direction)
{
     ec6:	df 93       	push	r29
     ec8:	cf 93       	push	r28
     eca:	00 d0       	rcall	.+0      	; 0xecc <DIO_VidSetPortDirection+0x6>
     ecc:	00 d0       	rcall	.+0      	; 0xece <DIO_VidSetPortDirection+0x8>
     ece:	00 d0       	rcall	.+0      	; 0xed0 <DIO_VidSetPortDirection+0xa>
     ed0:	cd b7       	in	r28, 0x3d	; 61
     ed2:	de b7       	in	r29, 0x3e	; 62
     ed4:	8b 83       	std	Y+3, r24	; 0x03
     ed6:	6c 83       	std	Y+4, r22	; 0x04
	    volatile u8 *ddr_reg;

	    switch (Copy_u8Port) {
     ed8:	8b 81       	ldd	r24, Y+3	; 0x03
     eda:	28 2f       	mov	r18, r24
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	3e 83       	std	Y+6, r19	; 0x06
     ee0:	2d 83       	std	Y+5, r18	; 0x05
     ee2:	8d 81       	ldd	r24, Y+5	; 0x05
     ee4:	9e 81       	ldd	r25, Y+6	; 0x06
     ee6:	81 30       	cpi	r24, 0x01	; 1
     ee8:	91 05       	cpc	r25, r1
     eea:	d1 f0       	breq	.+52     	; 0xf20 <DIO_VidSetPortDirection+0x5a>
     eec:	2d 81       	ldd	r18, Y+5	; 0x05
     eee:	3e 81       	ldd	r19, Y+6	; 0x06
     ef0:	22 30       	cpi	r18, 0x02	; 2
     ef2:	31 05       	cpc	r19, r1
     ef4:	2c f4       	brge	.+10     	; 0xf00 <DIO_VidSetPortDirection+0x3a>
     ef6:	8d 81       	ldd	r24, Y+5	; 0x05
     ef8:	9e 81       	ldd	r25, Y+6	; 0x06
     efa:	00 97       	sbiw	r24, 0x00	; 0
     efc:	61 f0       	breq	.+24     	; 0xf16 <DIO_VidSetPortDirection+0x50>
     efe:	29 c0       	rjmp	.+82     	; 0xf52 <DIO_VidSetPortDirection+0x8c>
     f00:	2d 81       	ldd	r18, Y+5	; 0x05
     f02:	3e 81       	ldd	r19, Y+6	; 0x06
     f04:	22 30       	cpi	r18, 0x02	; 2
     f06:	31 05       	cpc	r19, r1
     f08:	81 f0       	breq	.+32     	; 0xf2a <DIO_VidSetPortDirection+0x64>
     f0a:	8d 81       	ldd	r24, Y+5	; 0x05
     f0c:	9e 81       	ldd	r25, Y+6	; 0x06
     f0e:	83 30       	cpi	r24, 0x03	; 3
     f10:	91 05       	cpc	r25, r1
     f12:	81 f0       	breq	.+32     	; 0xf34 <DIO_VidSetPortDirection+0x6e>
     f14:	1e c0       	rjmp	.+60     	; 0xf52 <DIO_VidSetPortDirection+0x8c>
	        case Port_A:
	            ddr_reg = &DDRA;
     f16:	8a e3       	ldi	r24, 0x3A	; 58
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	9a 83       	std	Y+2, r25	; 0x02
     f1c:	89 83       	std	Y+1, r24	; 0x01
     f1e:	0e c0       	rjmp	.+28     	; 0xf3c <DIO_VidSetPortDirection+0x76>
	            break;
	        case Port_B:
	            ddr_reg = &DDRB;
     f20:	87 e3       	ldi	r24, 0x37	; 55
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	9a 83       	std	Y+2, r25	; 0x02
     f26:	89 83       	std	Y+1, r24	; 0x01
     f28:	09 c0       	rjmp	.+18     	; 0xf3c <DIO_VidSetPortDirection+0x76>
	            break;
	        case Port_C:
	            ddr_reg = &DDRC;
     f2a:	84 e3       	ldi	r24, 0x34	; 52
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	9a 83       	std	Y+2, r25	; 0x02
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	04 c0       	rjmp	.+8      	; 0xf3c <DIO_VidSetPortDirection+0x76>
	            break;
	        case Port_D:
	            ddr_reg = &DDRD;
     f34:	81 e3       	ldi	r24, 0x31	; 49
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	9a 83       	std	Y+2, r25	; 0x02
     f3a:	89 83       	std	Y+1, r24	; 0x01
	            break;
	        default:
	            return;
	    }

	    if (Copy_u8Direction == Input) {
     f3c:	8c 81       	ldd	r24, Y+4	; 0x04
     f3e:	88 23       	and	r24, r24
     f40:	21 f4       	brne	.+8      	; 0xf4a <DIO_VidSetPortDirection+0x84>
	        *ddr_reg = 0x00;
     f42:	e9 81       	ldd	r30, Y+1	; 0x01
     f44:	fa 81       	ldd	r31, Y+2	; 0x02
     f46:	10 82       	st	Z, r1
     f48:	04 c0       	rjmp	.+8      	; 0xf52 <DIO_VidSetPortDirection+0x8c>
	    } else {
	        *ddr_reg = 0xff;
     f4a:	e9 81       	ldd	r30, Y+1	; 0x01
     f4c:	fa 81       	ldd	r31, Y+2	; 0x02
     f4e:	8f ef       	ldi	r24, 0xFF	; 255
     f50:	80 83       	st	Z, r24
	    }
}
     f52:	26 96       	adiw	r28, 0x06	; 6
     f54:	0f b6       	in	r0, 0x3f	; 63
     f56:	f8 94       	cli
     f58:	de bf       	out	0x3e, r29	; 62
     f5a:	0f be       	out	0x3f, r0	; 63
     f5c:	cd bf       	out	0x3d, r28	; 61
     f5e:	cf 91       	pop	r28
     f60:	df 91       	pop	r29
     f62:	08 95       	ret

00000f64 <DIO_VidSetPortValue>:

void DIO_VidSetPortValue(u8 Copy_u8Port , u8 Copy_u8Value)
{
     f64:	df 93       	push	r29
     f66:	cf 93       	push	r28
     f68:	00 d0       	rcall	.+0      	; 0xf6a <DIO_VidSetPortValue+0x6>
     f6a:	00 d0       	rcall	.+0      	; 0xf6c <DIO_VidSetPortValue+0x8>
     f6c:	cd b7       	in	r28, 0x3d	; 61
     f6e:	de b7       	in	r29, 0x3e	; 62
     f70:	89 83       	std	Y+1, r24	; 0x01
     f72:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8Port) {
     f74:	89 81       	ldd	r24, Y+1	; 0x01
     f76:	28 2f       	mov	r18, r24
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	3c 83       	std	Y+4, r19	; 0x04
     f7c:	2b 83       	std	Y+3, r18	; 0x03
     f7e:	8b 81       	ldd	r24, Y+3	; 0x03
     f80:	9c 81       	ldd	r25, Y+4	; 0x04
     f82:	81 30       	cpi	r24, 0x01	; 1
     f84:	91 05       	cpc	r25, r1
     f86:	d1 f0       	breq	.+52     	; 0xfbc <DIO_VidSetPortValue+0x58>
     f88:	2b 81       	ldd	r18, Y+3	; 0x03
     f8a:	3c 81       	ldd	r19, Y+4	; 0x04
     f8c:	22 30       	cpi	r18, 0x02	; 2
     f8e:	31 05       	cpc	r19, r1
     f90:	2c f4       	brge	.+10     	; 0xf9c <DIO_VidSetPortValue+0x38>
     f92:	8b 81       	ldd	r24, Y+3	; 0x03
     f94:	9c 81       	ldd	r25, Y+4	; 0x04
     f96:	00 97       	sbiw	r24, 0x00	; 0
     f98:	61 f0       	breq	.+24     	; 0xfb2 <DIO_VidSetPortValue+0x4e>
     f9a:	1e c0       	rjmp	.+60     	; 0xfd8 <DIO_VidSetPortValue+0x74>
     f9c:	2b 81       	ldd	r18, Y+3	; 0x03
     f9e:	3c 81       	ldd	r19, Y+4	; 0x04
     fa0:	22 30       	cpi	r18, 0x02	; 2
     fa2:	31 05       	cpc	r19, r1
     fa4:	81 f0       	breq	.+32     	; 0xfc6 <DIO_VidSetPortValue+0x62>
     fa6:	8b 81       	ldd	r24, Y+3	; 0x03
     fa8:	9c 81       	ldd	r25, Y+4	; 0x04
     faa:	83 30       	cpi	r24, 0x03	; 3
     fac:	91 05       	cpc	r25, r1
     fae:	81 f0       	breq	.+32     	; 0xfd0 <DIO_VidSetPortValue+0x6c>
     fb0:	13 c0       	rjmp	.+38     	; 0xfd8 <DIO_VidSetPortValue+0x74>
	        case Port_A:
	            PORTA = Copy_u8Value;
     fb2:	eb e3       	ldi	r30, 0x3B	; 59
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	8a 81       	ldd	r24, Y+2	; 0x02
     fb8:	80 83       	st	Z, r24
     fba:	0e c0       	rjmp	.+28     	; 0xfd8 <DIO_VidSetPortValue+0x74>
	            break;
	        case Port_B:
	            PORTB = Copy_u8Value;
     fbc:	e8 e3       	ldi	r30, 0x38	; 56
     fbe:	f0 e0       	ldi	r31, 0x00	; 0
     fc0:	8a 81       	ldd	r24, Y+2	; 0x02
     fc2:	80 83       	st	Z, r24
     fc4:	09 c0       	rjmp	.+18     	; 0xfd8 <DIO_VidSetPortValue+0x74>
	            break;
	        case Port_C:
	            PORTC = Copy_u8Value;
     fc6:	e5 e3       	ldi	r30, 0x35	; 53
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	8a 81       	ldd	r24, Y+2	; 0x02
     fcc:	80 83       	st	Z, r24
     fce:	04 c0       	rjmp	.+8      	; 0xfd8 <DIO_VidSetPortValue+0x74>
	            break;
	        case Port_D:
	            PORTD = Copy_u8Value;
     fd0:	e2 e3       	ldi	r30, 0x32	; 50
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	8a 81       	ldd	r24, Y+2	; 0x02
     fd6:	80 83       	st	Z, r24
	            break;
	        default:
	            return;
	    }
}
     fd8:	0f 90       	pop	r0
     fda:	0f 90       	pop	r0
     fdc:	0f 90       	pop	r0
     fde:	0f 90       	pop	r0
     fe0:	cf 91       	pop	r28
     fe2:	df 91       	pop	r29
     fe4:	08 95       	ret

00000fe6 <DIO_VidGetPortValue>:


void DIO_VidGetPortValue(u8 Copy_u8Port , u8 * pu8Data)
{
     fe6:	df 93       	push	r29
     fe8:	cf 93       	push	r28
     fea:	00 d0       	rcall	.+0      	; 0xfec <DIO_VidGetPortValue+0x6>
     fec:	00 d0       	rcall	.+0      	; 0xfee <DIO_VidGetPortValue+0x8>
     fee:	0f 92       	push	r0
     ff0:	cd b7       	in	r28, 0x3d	; 61
     ff2:	de b7       	in	r29, 0x3e	; 62
     ff4:	89 83       	std	Y+1, r24	; 0x01
     ff6:	7b 83       	std	Y+3, r23	; 0x03
     ff8:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
     ffa:	89 81       	ldd	r24, Y+1	; 0x01
     ffc:	28 2f       	mov	r18, r24
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	3d 83       	std	Y+5, r19	; 0x05
    1002:	2c 83       	std	Y+4, r18	; 0x04
    1004:	8c 81       	ldd	r24, Y+4	; 0x04
    1006:	9d 81       	ldd	r25, Y+5	; 0x05
    1008:	81 30       	cpi	r24, 0x01	; 1
    100a:	91 05       	cpc	r25, r1
    100c:	e1 f0       	breq	.+56     	; 0x1046 <DIO_VidGetPortValue+0x60>
    100e:	2c 81       	ldd	r18, Y+4	; 0x04
    1010:	3d 81       	ldd	r19, Y+5	; 0x05
    1012:	22 30       	cpi	r18, 0x02	; 2
    1014:	31 05       	cpc	r19, r1
    1016:	2c f4       	brge	.+10     	; 0x1022 <DIO_VidGetPortValue+0x3c>
    1018:	8c 81       	ldd	r24, Y+4	; 0x04
    101a:	9d 81       	ldd	r25, Y+5	; 0x05
    101c:	00 97       	sbiw	r24, 0x00	; 0
    101e:	61 f0       	breq	.+24     	; 0x1038 <DIO_VidGetPortValue+0x52>
    1020:	26 c0       	rjmp	.+76     	; 0x106e <DIO_VidGetPortValue+0x88>
    1022:	2c 81       	ldd	r18, Y+4	; 0x04
    1024:	3d 81       	ldd	r19, Y+5	; 0x05
    1026:	22 30       	cpi	r18, 0x02	; 2
    1028:	31 05       	cpc	r19, r1
    102a:	a1 f0       	breq	.+40     	; 0x1054 <DIO_VidGetPortValue+0x6e>
    102c:	8c 81       	ldd	r24, Y+4	; 0x04
    102e:	9d 81       	ldd	r25, Y+5	; 0x05
    1030:	83 30       	cpi	r24, 0x03	; 3
    1032:	91 05       	cpc	r25, r1
    1034:	b1 f0       	breq	.+44     	; 0x1062 <DIO_VidGetPortValue+0x7c>
    1036:	1b c0       	rjmp	.+54     	; 0x106e <DIO_VidGetPortValue+0x88>
	{
		case Port_A : 
			*pu8Data = PINA;
    1038:	e9 e3       	ldi	r30, 0x39	; 57
    103a:	f0 e0       	ldi	r31, 0x00	; 0
    103c:	80 81       	ld	r24, Z
    103e:	ea 81       	ldd	r30, Y+2	; 0x02
    1040:	fb 81       	ldd	r31, Y+3	; 0x03
    1042:	80 83       	st	Z, r24
    1044:	14 c0       	rjmp	.+40     	; 0x106e <DIO_VidGetPortValue+0x88>
			break ;

		case Port_B : 
			*pu8Data = PINB;
    1046:	e6 e3       	ldi	r30, 0x36	; 54
    1048:	f0 e0       	ldi	r31, 0x00	; 0
    104a:	80 81       	ld	r24, Z
    104c:	ea 81       	ldd	r30, Y+2	; 0x02
    104e:	fb 81       	ldd	r31, Y+3	; 0x03
    1050:	80 83       	st	Z, r24
    1052:	0d c0       	rjmp	.+26     	; 0x106e <DIO_VidGetPortValue+0x88>
			break ;

		case Port_C : 
			*pu8Data = PINC;
    1054:	e3 e3       	ldi	r30, 0x33	; 51
    1056:	f0 e0       	ldi	r31, 0x00	; 0
    1058:	80 81       	ld	r24, Z
    105a:	ea 81       	ldd	r30, Y+2	; 0x02
    105c:	fb 81       	ldd	r31, Y+3	; 0x03
    105e:	80 83       	st	Z, r24
    1060:	06 c0       	rjmp	.+12     	; 0x106e <DIO_VidGetPortValue+0x88>
			break ;

		case Port_D : 
			*pu8Data = PIND;
    1062:	e0 e3       	ldi	r30, 0x30	; 48
    1064:	f0 e0       	ldi	r31, 0x00	; 0
    1066:	80 81       	ld	r24, Z
    1068:	ea 81       	ldd	r30, Y+2	; 0x02
    106a:	fb 81       	ldd	r31, Y+3	; 0x03
    106c:	80 83       	st	Z, r24
			break ;
	}
}
    106e:	0f 90       	pop	r0
    1070:	0f 90       	pop	r0
    1072:	0f 90       	pop	r0
    1074:	0f 90       	pop	r0
    1076:	0f 90       	pop	r0
    1078:	cf 91       	pop	r28
    107a:	df 91       	pop	r29
    107c:	08 95       	ret

0000107e <LCD_VidSendCommand>:
#include <stdlib.h>
#include <util/delay.h>

int LOC=0;
//SEND COMMAN FUNCTION
void LCD_VidSendCommand( u8 Copy_u8Command){
    107e:	df 93       	push	r29
    1080:	cf 93       	push	r28
    1082:	cd b7       	in	r28, 0x3d	; 61
    1084:	de b7       	in	r29, 0x3e	; 62
    1086:	6e 97       	sbiw	r28, 0x1e	; 30
    1088:	0f b6       	in	r0, 0x3f	; 63
    108a:	f8 94       	cli
    108c:	de bf       	out	0x3e, r29	; 62
    108e:	0f be       	out	0x3f, r0	; 63
    1090:	cd bf       	out	0x3d, r28	; 61
    1092:	8e 8f       	std	Y+30, r24	; 0x1e

	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,Pin_Low);
    1094:	80 e0       	ldi	r24, 0x00	; 0
    1096:	61 e0       	ldi	r22, 0x01	; 1
    1098:	40 e0       	ldi	r20, 0x00	; 0
    109a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_Low);

#elif LCD_MODE == 4

	/* SEND 4 MSBs */
	u8 x = Copy_u8Command;
    109e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    10a0:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN0, GET_BIT(Copy_u8Command, 4));
    10a2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    10a4:	82 95       	swap	r24
    10a6:	8f 70       	andi	r24, 0x0F	; 15
    10a8:	98 2f       	mov	r25, r24
    10aa:	91 70       	andi	r25, 0x01	; 1
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	63 e0       	ldi	r22, 0x03	; 3
    10b0:	49 2f       	mov	r20, r25
    10b2:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Command = x;
    10b6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10b8:	8e 8f       	std	Y+30, r24	; 0x1e
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN1, GET_BIT(Copy_u8Command, 5));
    10ba:	8e 8d       	ldd	r24, Y+30	; 0x1e
    10bc:	82 95       	swap	r24
    10be:	86 95       	lsr	r24
    10c0:	87 70       	andi	r24, 0x07	; 7
    10c2:	98 2f       	mov	r25, r24
    10c4:	91 70       	andi	r25, 0x01	; 1
    10c6:	80 e0       	ldi	r24, 0x00	; 0
    10c8:	64 e0       	ldi	r22, 0x04	; 4
    10ca:	49 2f       	mov	r20, r25
    10cc:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Command = x;
    10d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10d2:	8e 8f       	std	Y+30, r24	; 0x1e
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN2, GET_BIT(Copy_u8Command, 6));
    10d4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    10d6:	82 95       	swap	r24
    10d8:	86 95       	lsr	r24
    10da:	86 95       	lsr	r24
    10dc:	83 70       	andi	r24, 0x03	; 3
    10de:	98 2f       	mov	r25, r24
    10e0:	91 70       	andi	r25, 0x01	; 1
    10e2:	80 e0       	ldi	r24, 0x00	; 0
    10e4:	65 e0       	ldi	r22, 0x05	; 5
    10e6:	49 2f       	mov	r20, r25
    10e8:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Command = x;
    10ec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10ee:	8e 8f       	std	Y+30, r24	; 0x1e
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN3, GET_BIT(Copy_u8Command, 7));
    10f0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    10f2:	98 2f       	mov	r25, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	99 27       	eor	r25, r25
    10f8:	99 1f       	adc	r25, r25
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	66 e0       	ldi	r22, 0x06	; 6
    10fe:	49 2f       	mov	r20, r25
    1100:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

	//E HIGH  -->  ENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_High);
    1104:	80 e0       	ldi	r24, 0x00	; 0
    1106:	62 e0       	ldi	r22, 0x02	; 2
    1108:	41 e0       	ldi	r20, 0x01	; 1
    110a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
    110e:	80 e0       	ldi	r24, 0x00	; 0
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	a0 e0       	ldi	r26, 0x00	; 0
    1114:	b0 e4       	ldi	r27, 0x40	; 64
    1116:	89 8f       	std	Y+25, r24	; 0x19
    1118:	9a 8f       	std	Y+26, r25	; 0x1a
    111a:	ab 8f       	std	Y+27, r26	; 0x1b
    111c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    111e:	69 8d       	ldd	r22, Y+25	; 0x19
    1120:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1122:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1124:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1126:	20 e0       	ldi	r18, 0x00	; 0
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	4a e7       	ldi	r20, 0x7A	; 122
    112c:	55 e4       	ldi	r21, 0x45	; 69
    112e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1132:	dc 01       	movw	r26, r24
    1134:	cb 01       	movw	r24, r22
    1136:	8d 8b       	std	Y+21, r24	; 0x15
    1138:	9e 8b       	std	Y+22, r25	; 0x16
    113a:	af 8b       	std	Y+23, r26	; 0x17
    113c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    113e:	6d 89       	ldd	r22, Y+21	; 0x15
    1140:	7e 89       	ldd	r23, Y+22	; 0x16
    1142:	8f 89       	ldd	r24, Y+23	; 0x17
    1144:	98 8d       	ldd	r25, Y+24	; 0x18
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	40 e8       	ldi	r20, 0x80	; 128
    114c:	5f e3       	ldi	r21, 0x3F	; 63
    114e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    1152:	88 23       	and	r24, r24
    1154:	2c f4       	brge	.+10     	; 0x1160 <LCD_VidSendCommand+0xe2>
		__ticks = 1;
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	9c 8b       	std	Y+20, r25	; 0x14
    115c:	8b 8b       	std	Y+19, r24	; 0x13
    115e:	3f c0       	rjmp	.+126    	; 0x11de <LCD_VidSendCommand+0x160>
	else if (__tmp > 65535)
    1160:	6d 89       	ldd	r22, Y+21	; 0x15
    1162:	7e 89       	ldd	r23, Y+22	; 0x16
    1164:	8f 89       	ldd	r24, Y+23	; 0x17
    1166:	98 8d       	ldd	r25, Y+24	; 0x18
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	3f ef       	ldi	r19, 0xFF	; 255
    116c:	4f e7       	ldi	r20, 0x7F	; 127
    116e:	57 e4       	ldi	r21, 0x47	; 71
    1170:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    1174:	18 16       	cp	r1, r24
    1176:	4c f5       	brge	.+82     	; 0x11ca <LCD_VidSendCommand+0x14c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1178:	69 8d       	ldd	r22, Y+25	; 0x19
    117a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    117c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    117e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	40 e2       	ldi	r20, 0x20	; 32
    1186:	51 e4       	ldi	r21, 0x41	; 65
    1188:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    118c:	dc 01       	movw	r26, r24
    118e:	cb 01       	movw	r24, r22
    1190:	bc 01       	movw	r22, r24
    1192:	cd 01       	movw	r24, r26
    1194:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1198:	dc 01       	movw	r26, r24
    119a:	cb 01       	movw	r24, r22
    119c:	9c 8b       	std	Y+20, r25	; 0x14
    119e:	8b 8b       	std	Y+19, r24	; 0x13
    11a0:	0f c0       	rjmp	.+30     	; 0x11c0 <LCD_VidSendCommand+0x142>
    11a2:	80 e9       	ldi	r24, 0x90	; 144
    11a4:	91 e0       	ldi	r25, 0x01	; 1
    11a6:	9a 8b       	std	Y+18, r25	; 0x12
    11a8:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11aa:	89 89       	ldd	r24, Y+17	; 0x11
    11ac:	9a 89       	ldd	r25, Y+18	; 0x12
    11ae:	01 97       	sbiw	r24, 0x01	; 1
    11b0:	f1 f7       	brne	.-4      	; 0x11ae <LCD_VidSendCommand+0x130>
    11b2:	9a 8b       	std	Y+18, r25	; 0x12
    11b4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11b6:	8b 89       	ldd	r24, Y+19	; 0x13
    11b8:	9c 89       	ldd	r25, Y+20	; 0x14
    11ba:	01 97       	sbiw	r24, 0x01	; 1
    11bc:	9c 8b       	std	Y+20, r25	; 0x14
    11be:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11c0:	8b 89       	ldd	r24, Y+19	; 0x13
    11c2:	9c 89       	ldd	r25, Y+20	; 0x14
    11c4:	00 97       	sbiw	r24, 0x00	; 0
    11c6:	69 f7       	brne	.-38     	; 0x11a2 <LCD_VidSendCommand+0x124>
    11c8:	14 c0       	rjmp	.+40     	; 0x11f2 <LCD_VidSendCommand+0x174>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11ca:	6d 89       	ldd	r22, Y+21	; 0x15
    11cc:	7e 89       	ldd	r23, Y+22	; 0x16
    11ce:	8f 89       	ldd	r24, Y+23	; 0x17
    11d0:	98 8d       	ldd	r25, Y+24	; 0x18
    11d2:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	9c 8b       	std	Y+20, r25	; 0x14
    11dc:	8b 8b       	std	Y+19, r24	; 0x13
    11de:	8b 89       	ldd	r24, Y+19	; 0x13
    11e0:	9c 89       	ldd	r25, Y+20	; 0x14
    11e2:	98 8b       	std	Y+16, r25	; 0x10
    11e4:	8f 87       	std	Y+15, r24	; 0x0f
    11e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    11e8:	98 89       	ldd	r25, Y+16	; 0x10
    11ea:	01 97       	sbiw	r24, 0x01	; 1
    11ec:	f1 f7       	brne	.-4      	; 0x11ea <LCD_VidSendCommand+0x16c>
    11ee:	98 8b       	std	Y+16, r25	; 0x10
    11f0:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(2);

	//E LOW  -->  UNENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_Low);
    11f2:	80 e0       	ldi	r24, 0x00	; 0
    11f4:	62 e0       	ldi	r22, 0x02	; 2
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

	                //--------------------------//

	/* SEND 4 LSBs */
	Copy_u8Command = x;
    11fc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    11fe:	8e 8f       	std	Y+30, r24	; 0x1e
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN0, GET_BIT(Copy_u8Command, 0));
    1200:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1202:	98 2f       	mov	r25, r24
    1204:	91 70       	andi	r25, 0x01	; 1
    1206:	80 e0       	ldi	r24, 0x00	; 0
    1208:	63 e0       	ldi	r22, 0x03	; 3
    120a:	49 2f       	mov	r20, r25
    120c:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Command = x;
    1210:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1212:	8e 8f       	std	Y+30, r24	; 0x1e
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN1, GET_BIT(Copy_u8Command, 1));
    1214:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1216:	86 95       	lsr	r24
    1218:	98 2f       	mov	r25, r24
    121a:	91 70       	andi	r25, 0x01	; 1
    121c:	80 e0       	ldi	r24, 0x00	; 0
    121e:	64 e0       	ldi	r22, 0x04	; 4
    1220:	49 2f       	mov	r20, r25
    1222:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Command = x;
    1226:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1228:	8e 8f       	std	Y+30, r24	; 0x1e
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN2, GET_BIT(Copy_u8Command, 2));
    122a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    122c:	86 95       	lsr	r24
    122e:	86 95       	lsr	r24
    1230:	98 2f       	mov	r25, r24
    1232:	91 70       	andi	r25, 0x01	; 1
    1234:	80 e0       	ldi	r24, 0x00	; 0
    1236:	65 e0       	ldi	r22, 0x05	; 5
    1238:	49 2f       	mov	r20, r25
    123a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Command = x;
    123e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1240:	8e 8f       	std	Y+30, r24	; 0x1e
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN3, GET_BIT(Copy_u8Command, 3));
    1242:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1244:	86 95       	lsr	r24
    1246:	86 95       	lsr	r24
    1248:	86 95       	lsr	r24
    124a:	98 2f       	mov	r25, r24
    124c:	91 70       	andi	r25, 0x01	; 1
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	66 e0       	ldi	r22, 0x06	; 6
    1252:	49 2f       	mov	r20, r25
    1254:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>


	//E HIGH  -->  ENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_High);
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	62 e0       	ldi	r22, 0x02	; 2
    125c:	41 e0       	ldi	r20, 0x01	; 1
    125e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
    1262:	80 e0       	ldi	r24, 0x00	; 0
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	a0 e0       	ldi	r26, 0x00	; 0
    1268:	b0 e4       	ldi	r27, 0x40	; 64
    126a:	8b 87       	std	Y+11, r24	; 0x0b
    126c:	9c 87       	std	Y+12, r25	; 0x0c
    126e:	ad 87       	std	Y+13, r26	; 0x0d
    1270:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1272:	6b 85       	ldd	r22, Y+11	; 0x0b
    1274:	7c 85       	ldd	r23, Y+12	; 0x0c
    1276:	8d 85       	ldd	r24, Y+13	; 0x0d
    1278:	9e 85       	ldd	r25, Y+14	; 0x0e
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	4a e7       	ldi	r20, 0x7A	; 122
    1280:	55 e4       	ldi	r21, 0x45	; 69
    1282:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1286:	dc 01       	movw	r26, r24
    1288:	cb 01       	movw	r24, r22
    128a:	8f 83       	std	Y+7, r24	; 0x07
    128c:	98 87       	std	Y+8, r25	; 0x08
    128e:	a9 87       	std	Y+9, r26	; 0x09
    1290:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1292:	6f 81       	ldd	r22, Y+7	; 0x07
    1294:	78 85       	ldd	r23, Y+8	; 0x08
    1296:	89 85       	ldd	r24, Y+9	; 0x09
    1298:	9a 85       	ldd	r25, Y+10	; 0x0a
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	40 e8       	ldi	r20, 0x80	; 128
    12a0:	5f e3       	ldi	r21, 0x3F	; 63
    12a2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    12a6:	88 23       	and	r24, r24
    12a8:	2c f4       	brge	.+10     	; 0x12b4 <LCD_VidSendCommand+0x236>
		__ticks = 1;
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	9e 83       	std	Y+6, r25	; 0x06
    12b0:	8d 83       	std	Y+5, r24	; 0x05
    12b2:	3f c0       	rjmp	.+126    	; 0x1332 <LCD_VidSendCommand+0x2b4>
	else if (__tmp > 65535)
    12b4:	6f 81       	ldd	r22, Y+7	; 0x07
    12b6:	78 85       	ldd	r23, Y+8	; 0x08
    12b8:	89 85       	ldd	r24, Y+9	; 0x09
    12ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    12bc:	20 e0       	ldi	r18, 0x00	; 0
    12be:	3f ef       	ldi	r19, 0xFF	; 255
    12c0:	4f e7       	ldi	r20, 0x7F	; 127
    12c2:	57 e4       	ldi	r21, 0x47	; 71
    12c4:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    12c8:	18 16       	cp	r1, r24
    12ca:	4c f5       	brge	.+82     	; 0x131e <LCD_VidSendCommand+0x2a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    12ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    12d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    12d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    12d4:	20 e0       	ldi	r18, 0x00	; 0
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	40 e2       	ldi	r20, 0x20	; 32
    12da:	51 e4       	ldi	r21, 0x41	; 65
    12dc:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    12e0:	dc 01       	movw	r26, r24
    12e2:	cb 01       	movw	r24, r22
    12e4:	bc 01       	movw	r22, r24
    12e6:	cd 01       	movw	r24, r26
    12e8:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    12ec:	dc 01       	movw	r26, r24
    12ee:	cb 01       	movw	r24, r22
    12f0:	9e 83       	std	Y+6, r25	; 0x06
    12f2:	8d 83       	std	Y+5, r24	; 0x05
    12f4:	0f c0       	rjmp	.+30     	; 0x1314 <LCD_VidSendCommand+0x296>
    12f6:	80 e9       	ldi	r24, 0x90	; 144
    12f8:	91 e0       	ldi	r25, 0x01	; 1
    12fa:	9c 83       	std	Y+4, r25	; 0x04
    12fc:	8b 83       	std	Y+3, r24	; 0x03
    12fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1300:	9c 81       	ldd	r25, Y+4	; 0x04
    1302:	01 97       	sbiw	r24, 0x01	; 1
    1304:	f1 f7       	brne	.-4      	; 0x1302 <LCD_VidSendCommand+0x284>
    1306:	9c 83       	std	Y+4, r25	; 0x04
    1308:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    130a:	8d 81       	ldd	r24, Y+5	; 0x05
    130c:	9e 81       	ldd	r25, Y+6	; 0x06
    130e:	01 97       	sbiw	r24, 0x01	; 1
    1310:	9e 83       	std	Y+6, r25	; 0x06
    1312:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1314:	8d 81       	ldd	r24, Y+5	; 0x05
    1316:	9e 81       	ldd	r25, Y+6	; 0x06
    1318:	00 97       	sbiw	r24, 0x00	; 0
    131a:	69 f7       	brne	.-38     	; 0x12f6 <LCD_VidSendCommand+0x278>
    131c:	14 c0       	rjmp	.+40     	; 0x1346 <LCD_VidSendCommand+0x2c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    131e:	6f 81       	ldd	r22, Y+7	; 0x07
    1320:	78 85       	ldd	r23, Y+8	; 0x08
    1322:	89 85       	ldd	r24, Y+9	; 0x09
    1324:	9a 85       	ldd	r25, Y+10	; 0x0a
    1326:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    132a:	dc 01       	movw	r26, r24
    132c:	cb 01       	movw	r24, r22
    132e:	9e 83       	std	Y+6, r25	; 0x06
    1330:	8d 83       	std	Y+5, r24	; 0x05
    1332:	8d 81       	ldd	r24, Y+5	; 0x05
    1334:	9e 81       	ldd	r25, Y+6	; 0x06
    1336:	9a 83       	std	Y+2, r25	; 0x02
    1338:	89 83       	std	Y+1, r24	; 0x01
    133a:	89 81       	ldd	r24, Y+1	; 0x01
    133c:	9a 81       	ldd	r25, Y+2	; 0x02
    133e:	01 97       	sbiw	r24, 0x01	; 1
    1340:	f1 f7       	brne	.-4      	; 0x133e <LCD_VidSendCommand+0x2c0>
    1342:	9a 83       	std	Y+2, r25	; 0x02
    1344:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2);

	//E LOW  -->  UNENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_Low);
    1346:	80 e0       	ldi	r24, 0x00	; 0
    1348:	62 e0       	ldi	r22, 0x02	; 2
    134a:	40 e0       	ldi	r20, 0x00	; 0
    134c:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

#endif

}
    1350:	6e 96       	adiw	r28, 0x1e	; 30
    1352:	0f b6       	in	r0, 0x3f	; 63
    1354:	f8 94       	cli
    1356:	de bf       	out	0x3e, r29	; 62
    1358:	0f be       	out	0x3f, r0	; 63
    135a:	cd bf       	out	0x3d, r28	; 61
    135c:	cf 91       	pop	r28
    135e:	df 91       	pop	r29
    1360:	08 95       	ret

00001362 <LCD_VidSendData>:


//SEND DATA FUNCTION
void LCD_VidSendData( u8 Copy_u8Data){
    1362:	df 93       	push	r29
    1364:	cf 93       	push	r28
    1366:	cd b7       	in	r28, 0x3d	; 61
    1368:	de b7       	in	r29, 0x3e	; 62
    136a:	ac 97       	sbiw	r28, 0x2c	; 44
    136c:	0f b6       	in	r0, 0x3f	; 63
    136e:	f8 94       	cli
    1370:	de bf       	out	0x3e, r29	; 62
    1372:	0f be       	out	0x3f, r0	; 63
    1374:	cd bf       	out	0x3d, r28	; 61
    1376:	8c a7       	std	Y+44, r24	; 0x2c
	//E LOW  -->  UNENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_Low);

#elif LCD_MODE == 4

	if(LOC == 16)
    1378:	80 91 88 00 	lds	r24, 0x0088
    137c:	90 91 89 00 	lds	r25, 0x0089
    1380:	80 31       	cpi	r24, 0x10	; 16
    1382:	91 05       	cpc	r25, r1
    1384:	21 f4       	brne	.+8      	; 0x138e <LCD_VidSendData+0x2c>
		LCD_VidSendCommand(LCD_FORCE_START_LOCATION|LCD_SEGMENT_1_OF_ROW_1);
    1386:	80 ec       	ldi	r24, 0xC0	; 192
    1388:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
    138c:	83 c0       	rjmp	.+262    	; 0x1494 <LCD_VidSendData+0x132>
	else if(LOC == 32){
    138e:	80 91 88 00 	lds	r24, 0x0088
    1392:	90 91 89 00 	lds	r25, 0x0089
    1396:	80 32       	cpi	r24, 0x20	; 32
    1398:	91 05       	cpc	r25, r1
    139a:	09 f0       	breq	.+2      	; 0x139e <LCD_VidSendData+0x3c>
    139c:	7b c0       	rjmp	.+246    	; 0x1494 <LCD_VidSendData+0x132>
    139e:	80 e0       	ldi	r24, 0x00	; 0
    13a0:	90 e4       	ldi	r25, 0x40	; 64
    13a2:	ac e1       	ldi	r26, 0x1C	; 28
    13a4:	b6 e4       	ldi	r27, 0x46	; 70
    13a6:	8f a3       	std	Y+39, r24	; 0x27
    13a8:	98 a7       	std	Y+40, r25	; 0x28
    13aa:	a9 a7       	std	Y+41, r26	; 0x29
    13ac:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13ae:	6f a1       	ldd	r22, Y+39	; 0x27
    13b0:	78 a5       	ldd	r23, Y+40	; 0x28
    13b2:	89 a5       	ldd	r24, Y+41	; 0x29
    13b4:	9a a5       	ldd	r25, Y+42	; 0x2a
    13b6:	20 e0       	ldi	r18, 0x00	; 0
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	4a e7       	ldi	r20, 0x7A	; 122
    13bc:	55 e4       	ldi	r21, 0x45	; 69
    13be:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    13c2:	dc 01       	movw	r26, r24
    13c4:	cb 01       	movw	r24, r22
    13c6:	8b a3       	std	Y+35, r24	; 0x23
    13c8:	9c a3       	std	Y+36, r25	; 0x24
    13ca:	ad a3       	std	Y+37, r26	; 0x25
    13cc:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    13ce:	6b a1       	ldd	r22, Y+35	; 0x23
    13d0:	7c a1       	ldd	r23, Y+36	; 0x24
    13d2:	8d a1       	ldd	r24, Y+37	; 0x25
    13d4:	9e a1       	ldd	r25, Y+38	; 0x26
    13d6:	20 e0       	ldi	r18, 0x00	; 0
    13d8:	30 e0       	ldi	r19, 0x00	; 0
    13da:	40 e8       	ldi	r20, 0x80	; 128
    13dc:	5f e3       	ldi	r21, 0x3F	; 63
    13de:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    13e2:	88 23       	and	r24, r24
    13e4:	2c f4       	brge	.+10     	; 0x13f0 <LCD_VidSendData+0x8e>
		__ticks = 1;
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	9a a3       	std	Y+34, r25	; 0x22
    13ec:	89 a3       	std	Y+33, r24	; 0x21
    13ee:	3f c0       	rjmp	.+126    	; 0x146e <LCD_VidSendData+0x10c>
	else if (__tmp > 65535)
    13f0:	6b a1       	ldd	r22, Y+35	; 0x23
    13f2:	7c a1       	ldd	r23, Y+36	; 0x24
    13f4:	8d a1       	ldd	r24, Y+37	; 0x25
    13f6:	9e a1       	ldd	r25, Y+38	; 0x26
    13f8:	20 e0       	ldi	r18, 0x00	; 0
    13fa:	3f ef       	ldi	r19, 0xFF	; 255
    13fc:	4f e7       	ldi	r20, 0x7F	; 127
    13fe:	57 e4       	ldi	r21, 0x47	; 71
    1400:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    1404:	18 16       	cp	r1, r24
    1406:	4c f5       	brge	.+82     	; 0x145a <LCD_VidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1408:	6f a1       	ldd	r22, Y+39	; 0x27
    140a:	78 a5       	ldd	r23, Y+40	; 0x28
    140c:	89 a5       	ldd	r24, Y+41	; 0x29
    140e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1410:	20 e0       	ldi	r18, 0x00	; 0
    1412:	30 e0       	ldi	r19, 0x00	; 0
    1414:	40 e2       	ldi	r20, 0x20	; 32
    1416:	51 e4       	ldi	r21, 0x41	; 65
    1418:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    141c:	dc 01       	movw	r26, r24
    141e:	cb 01       	movw	r24, r22
    1420:	bc 01       	movw	r22, r24
    1422:	cd 01       	movw	r24, r26
    1424:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1428:	dc 01       	movw	r26, r24
    142a:	cb 01       	movw	r24, r22
    142c:	9a a3       	std	Y+34, r25	; 0x22
    142e:	89 a3       	std	Y+33, r24	; 0x21
    1430:	0f c0       	rjmp	.+30     	; 0x1450 <LCD_VidSendData+0xee>
    1432:	80 e9       	ldi	r24, 0x90	; 144
    1434:	91 e0       	ldi	r25, 0x01	; 1
    1436:	98 a3       	std	Y+32, r25	; 0x20
    1438:	8f 8f       	std	Y+31, r24	; 0x1f
    143a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    143c:	98 a1       	ldd	r25, Y+32	; 0x20
    143e:	01 97       	sbiw	r24, 0x01	; 1
    1440:	f1 f7       	brne	.-4      	; 0x143e <LCD_VidSendData+0xdc>
    1442:	98 a3       	std	Y+32, r25	; 0x20
    1444:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1446:	89 a1       	ldd	r24, Y+33	; 0x21
    1448:	9a a1       	ldd	r25, Y+34	; 0x22
    144a:	01 97       	sbiw	r24, 0x01	; 1
    144c:	9a a3       	std	Y+34, r25	; 0x22
    144e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1450:	89 a1       	ldd	r24, Y+33	; 0x21
    1452:	9a a1       	ldd	r25, Y+34	; 0x22
    1454:	00 97       	sbiw	r24, 0x00	; 0
    1456:	69 f7       	brne	.-38     	; 0x1432 <LCD_VidSendData+0xd0>
    1458:	14 c0       	rjmp	.+40     	; 0x1482 <LCD_VidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    145a:	6b a1       	ldd	r22, Y+35	; 0x23
    145c:	7c a1       	ldd	r23, Y+36	; 0x24
    145e:	8d a1       	ldd	r24, Y+37	; 0x25
    1460:	9e a1       	ldd	r25, Y+38	; 0x26
    1462:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1466:	dc 01       	movw	r26, r24
    1468:	cb 01       	movw	r24, r22
    146a:	9a a3       	std	Y+34, r25	; 0x22
    146c:	89 a3       	std	Y+33, r24	; 0x21
    146e:	89 a1       	ldd	r24, Y+33	; 0x21
    1470:	9a a1       	ldd	r25, Y+34	; 0x22
    1472:	9e 8f       	std	Y+30, r25	; 0x1e
    1474:	8d 8f       	std	Y+29, r24	; 0x1d
    1476:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1478:	9e 8d       	ldd	r25, Y+30	; 0x1e
    147a:	01 97       	sbiw	r24, 0x01	; 1
    147c:	f1 f7       	brne	.-4      	; 0x147a <LCD_VidSendData+0x118>
    147e:	9e 8f       	std	Y+30, r25	; 0x1e
    1480:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(10000);
		LCD_VidSendCommand(LCD_CLEAR);
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
		LOC = -1;
    1488:	8f ef       	ldi	r24, 0xFF	; 255
    148a:	9f ef       	ldi	r25, 0xFF	; 255
    148c:	90 93 89 00 	sts	0x0089, r25
    1490:	80 93 88 00 	sts	0x0088, r24
	}
	LOC++;
    1494:	80 91 88 00 	lds	r24, 0x0088
    1498:	90 91 89 00 	lds	r25, 0x0089
    149c:	01 96       	adiw	r24, 0x01	; 1
    149e:	90 93 89 00 	sts	0x0089, r25
    14a2:	80 93 88 00 	sts	0x0088, r24

	//RS LOW  -->  SEND DATA
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,Pin_High);
    14a6:	80 e0       	ldi	r24, 0x00	; 0
    14a8:	61 e0       	ldi	r22, 0x01	; 1
    14aa:	41 e0       	ldi	r20, 0x01	; 1
    14ac:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

	/* SEND 4 MSBs */
	u8 x = Copy_u8Data;
    14b0:	8c a5       	ldd	r24, Y+44	; 0x2c
    14b2:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN0, GET_BIT(Copy_u8Data, 4));
    14b4:	8c a5       	ldd	r24, Y+44	; 0x2c
    14b6:	82 95       	swap	r24
    14b8:	8f 70       	andi	r24, 0x0F	; 15
    14ba:	98 2f       	mov	r25, r24
    14bc:	91 70       	andi	r25, 0x01	; 1
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	63 e0       	ldi	r22, 0x03	; 3
    14c2:	49 2f       	mov	r20, r25
    14c4:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Data = x;
    14c8:	8b a5       	ldd	r24, Y+43	; 0x2b
    14ca:	8c a7       	std	Y+44, r24	; 0x2c
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN1, GET_BIT(Copy_u8Data, 5));
    14cc:	8c a5       	ldd	r24, Y+44	; 0x2c
    14ce:	82 95       	swap	r24
    14d0:	86 95       	lsr	r24
    14d2:	87 70       	andi	r24, 0x07	; 7
    14d4:	98 2f       	mov	r25, r24
    14d6:	91 70       	andi	r25, 0x01	; 1
    14d8:	80 e0       	ldi	r24, 0x00	; 0
    14da:	64 e0       	ldi	r22, 0x04	; 4
    14dc:	49 2f       	mov	r20, r25
    14de:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Data = x;
    14e2:	8b a5       	ldd	r24, Y+43	; 0x2b
    14e4:	8c a7       	std	Y+44, r24	; 0x2c
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN2, GET_BIT(Copy_u8Data, 6));
    14e6:	8c a5       	ldd	r24, Y+44	; 0x2c
    14e8:	82 95       	swap	r24
    14ea:	86 95       	lsr	r24
    14ec:	86 95       	lsr	r24
    14ee:	83 70       	andi	r24, 0x03	; 3
    14f0:	98 2f       	mov	r25, r24
    14f2:	91 70       	andi	r25, 0x01	; 1
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	65 e0       	ldi	r22, 0x05	; 5
    14f8:	49 2f       	mov	r20, r25
    14fa:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Data = x;
    14fe:	8b a5       	ldd	r24, Y+43	; 0x2b
    1500:	8c a7       	std	Y+44, r24	; 0x2c
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN3, GET_BIT(Copy_u8Data, 7));
    1502:	8c a5       	ldd	r24, Y+44	; 0x2c
    1504:	98 2f       	mov	r25, r24
    1506:	99 1f       	adc	r25, r25
    1508:	99 27       	eor	r25, r25
    150a:	99 1f       	adc	r25, r25
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	66 e0       	ldi	r22, 0x06	; 6
    1510:	49 2f       	mov	r20, r25
    1512:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

	//E HIGH  -->  ENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_High);
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	62 e0       	ldi	r22, 0x02	; 2
    151a:	41 e0       	ldi	r20, 0x01	; 1
    151c:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
    1520:	80 e0       	ldi	r24, 0x00	; 0
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	a0 e0       	ldi	r26, 0x00	; 0
    1526:	b0 e4       	ldi	r27, 0x40	; 64
    1528:	89 8f       	std	Y+25, r24	; 0x19
    152a:	9a 8f       	std	Y+26, r25	; 0x1a
    152c:	ab 8f       	std	Y+27, r26	; 0x1b
    152e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1530:	69 8d       	ldd	r22, Y+25	; 0x19
    1532:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1534:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1536:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1538:	20 e0       	ldi	r18, 0x00	; 0
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	4a e7       	ldi	r20, 0x7A	; 122
    153e:	55 e4       	ldi	r21, 0x45	; 69
    1540:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1544:	dc 01       	movw	r26, r24
    1546:	cb 01       	movw	r24, r22
    1548:	8d 8b       	std	Y+21, r24	; 0x15
    154a:	9e 8b       	std	Y+22, r25	; 0x16
    154c:	af 8b       	std	Y+23, r26	; 0x17
    154e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1550:	6d 89       	ldd	r22, Y+21	; 0x15
    1552:	7e 89       	ldd	r23, Y+22	; 0x16
    1554:	8f 89       	ldd	r24, Y+23	; 0x17
    1556:	98 8d       	ldd	r25, Y+24	; 0x18
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	40 e8       	ldi	r20, 0x80	; 128
    155e:	5f e3       	ldi	r21, 0x3F	; 63
    1560:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    1564:	88 23       	and	r24, r24
    1566:	2c f4       	brge	.+10     	; 0x1572 <LCD_VidSendData+0x210>
		__ticks = 1;
    1568:	81 e0       	ldi	r24, 0x01	; 1
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	9c 8b       	std	Y+20, r25	; 0x14
    156e:	8b 8b       	std	Y+19, r24	; 0x13
    1570:	3f c0       	rjmp	.+126    	; 0x15f0 <LCD_VidSendData+0x28e>
	else if (__tmp > 65535)
    1572:	6d 89       	ldd	r22, Y+21	; 0x15
    1574:	7e 89       	ldd	r23, Y+22	; 0x16
    1576:	8f 89       	ldd	r24, Y+23	; 0x17
    1578:	98 8d       	ldd	r25, Y+24	; 0x18
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	3f ef       	ldi	r19, 0xFF	; 255
    157e:	4f e7       	ldi	r20, 0x7F	; 127
    1580:	57 e4       	ldi	r21, 0x47	; 71
    1582:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    1586:	18 16       	cp	r1, r24
    1588:	4c f5       	brge	.+82     	; 0x15dc <LCD_VidSendData+0x27a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    158a:	69 8d       	ldd	r22, Y+25	; 0x19
    158c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    158e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1590:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1592:	20 e0       	ldi	r18, 0x00	; 0
    1594:	30 e0       	ldi	r19, 0x00	; 0
    1596:	40 e2       	ldi	r20, 0x20	; 32
    1598:	51 e4       	ldi	r21, 0x41	; 65
    159a:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    159e:	dc 01       	movw	r26, r24
    15a0:	cb 01       	movw	r24, r22
    15a2:	bc 01       	movw	r22, r24
    15a4:	cd 01       	movw	r24, r26
    15a6:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    15aa:	dc 01       	movw	r26, r24
    15ac:	cb 01       	movw	r24, r22
    15ae:	9c 8b       	std	Y+20, r25	; 0x14
    15b0:	8b 8b       	std	Y+19, r24	; 0x13
    15b2:	0f c0       	rjmp	.+30     	; 0x15d2 <LCD_VidSendData+0x270>
    15b4:	80 e9       	ldi	r24, 0x90	; 144
    15b6:	91 e0       	ldi	r25, 0x01	; 1
    15b8:	9a 8b       	std	Y+18, r25	; 0x12
    15ba:	89 8b       	std	Y+17, r24	; 0x11
    15bc:	89 89       	ldd	r24, Y+17	; 0x11
    15be:	9a 89       	ldd	r25, Y+18	; 0x12
    15c0:	01 97       	sbiw	r24, 0x01	; 1
    15c2:	f1 f7       	brne	.-4      	; 0x15c0 <LCD_VidSendData+0x25e>
    15c4:	9a 8b       	std	Y+18, r25	; 0x12
    15c6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15c8:	8b 89       	ldd	r24, Y+19	; 0x13
    15ca:	9c 89       	ldd	r25, Y+20	; 0x14
    15cc:	01 97       	sbiw	r24, 0x01	; 1
    15ce:	9c 8b       	std	Y+20, r25	; 0x14
    15d0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15d2:	8b 89       	ldd	r24, Y+19	; 0x13
    15d4:	9c 89       	ldd	r25, Y+20	; 0x14
    15d6:	00 97       	sbiw	r24, 0x00	; 0
    15d8:	69 f7       	brne	.-38     	; 0x15b4 <LCD_VidSendData+0x252>
    15da:	14 c0       	rjmp	.+40     	; 0x1604 <LCD_VidSendData+0x2a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15dc:	6d 89       	ldd	r22, Y+21	; 0x15
    15de:	7e 89       	ldd	r23, Y+22	; 0x16
    15e0:	8f 89       	ldd	r24, Y+23	; 0x17
    15e2:	98 8d       	ldd	r25, Y+24	; 0x18
    15e4:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    15e8:	dc 01       	movw	r26, r24
    15ea:	cb 01       	movw	r24, r22
    15ec:	9c 8b       	std	Y+20, r25	; 0x14
    15ee:	8b 8b       	std	Y+19, r24	; 0x13
    15f0:	8b 89       	ldd	r24, Y+19	; 0x13
    15f2:	9c 89       	ldd	r25, Y+20	; 0x14
    15f4:	98 8b       	std	Y+16, r25	; 0x10
    15f6:	8f 87       	std	Y+15, r24	; 0x0f
    15f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    15fa:	98 89       	ldd	r25, Y+16	; 0x10
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	f1 f7       	brne	.-4      	; 0x15fc <LCD_VidSendData+0x29a>
    1600:	98 8b       	std	Y+16, r25	; 0x10
    1602:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(2);

	//E LOW  -->  UNENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_Low);
    1604:	80 e0       	ldi	r24, 0x00	; 0
    1606:	62 e0       	ldi	r22, 0x02	; 2
    1608:	40 e0       	ldi	r20, 0x00	; 0
    160a:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

	                //--------------------------//

	/* SEND 4 LSBs */
	Copy_u8Data = x;
    160e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1610:	8c a7       	std	Y+44, r24	; 0x2c
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN0, GET_BIT(Copy_u8Data, 0));
    1612:	8c a5       	ldd	r24, Y+44	; 0x2c
    1614:	98 2f       	mov	r25, r24
    1616:	91 70       	andi	r25, 0x01	; 1
    1618:	80 e0       	ldi	r24, 0x00	; 0
    161a:	63 e0       	ldi	r22, 0x03	; 3
    161c:	49 2f       	mov	r20, r25
    161e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Data = x;
    1622:	8b a5       	ldd	r24, Y+43	; 0x2b
    1624:	8c a7       	std	Y+44, r24	; 0x2c
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN1, GET_BIT(Copy_u8Data, 1));
    1626:	8c a5       	ldd	r24, Y+44	; 0x2c
    1628:	86 95       	lsr	r24
    162a:	98 2f       	mov	r25, r24
    162c:	91 70       	andi	r25, 0x01	; 1
    162e:	80 e0       	ldi	r24, 0x00	; 0
    1630:	64 e0       	ldi	r22, 0x04	; 4
    1632:	49 2f       	mov	r20, r25
    1634:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Data = x;
    1638:	8b a5       	ldd	r24, Y+43	; 0x2b
    163a:	8c a7       	std	Y+44, r24	; 0x2c
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN2, GET_BIT(Copy_u8Data, 2));
    163c:	8c a5       	ldd	r24, Y+44	; 0x2c
    163e:	86 95       	lsr	r24
    1640:	86 95       	lsr	r24
    1642:	98 2f       	mov	r25, r24
    1644:	91 70       	andi	r25, 0x01	; 1
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	65 e0       	ldi	r22, 0x05	; 5
    164a:	49 2f       	mov	r20, r25
    164c:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
	Copy_u8Data = x;
    1650:	8b a5       	ldd	r24, Y+43	; 0x2b
    1652:	8c a7       	std	Y+44, r24	; 0x2c
	DIO_VidSetPinValue(LCD_DATA_PORT, LCD_DATA_PIN3, GET_BIT(Copy_u8Data, 3));
    1654:	8c a5       	ldd	r24, Y+44	; 0x2c
    1656:	86 95       	lsr	r24
    1658:	86 95       	lsr	r24
    165a:	86 95       	lsr	r24
    165c:	98 2f       	mov	r25, r24
    165e:	91 70       	andi	r25, 0x01	; 1
    1660:	80 e0       	ldi	r24, 0x00	; 0
    1662:	66 e0       	ldi	r22, 0x06	; 6
    1664:	49 2f       	mov	r20, r25
    1666:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

	//E HIGH  -->  ENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_High);
    166a:	80 e0       	ldi	r24, 0x00	; 0
    166c:	62 e0       	ldi	r22, 0x02	; 2
    166e:	41 e0       	ldi	r20, 0x01	; 1
    1670:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>
    1674:	80 e0       	ldi	r24, 0x00	; 0
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	a0 e0       	ldi	r26, 0x00	; 0
    167a:	b0 e4       	ldi	r27, 0x40	; 64
    167c:	8b 87       	std	Y+11, r24	; 0x0b
    167e:	9c 87       	std	Y+12, r25	; 0x0c
    1680:	ad 87       	std	Y+13, r26	; 0x0d
    1682:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1684:	6b 85       	ldd	r22, Y+11	; 0x0b
    1686:	7c 85       	ldd	r23, Y+12	; 0x0c
    1688:	8d 85       	ldd	r24, Y+13	; 0x0d
    168a:	9e 85       	ldd	r25, Y+14	; 0x0e
    168c:	20 e0       	ldi	r18, 0x00	; 0
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	4a e7       	ldi	r20, 0x7A	; 122
    1692:	55 e4       	ldi	r21, 0x45	; 69
    1694:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1698:	dc 01       	movw	r26, r24
    169a:	cb 01       	movw	r24, r22
    169c:	8f 83       	std	Y+7, r24	; 0x07
    169e:	98 87       	std	Y+8, r25	; 0x08
    16a0:	a9 87       	std	Y+9, r26	; 0x09
    16a2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    16a4:	6f 81       	ldd	r22, Y+7	; 0x07
    16a6:	78 85       	ldd	r23, Y+8	; 0x08
    16a8:	89 85       	ldd	r24, Y+9	; 0x09
    16aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ac:	20 e0       	ldi	r18, 0x00	; 0
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	40 e8       	ldi	r20, 0x80	; 128
    16b2:	5f e3       	ldi	r21, 0x3F	; 63
    16b4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    16b8:	88 23       	and	r24, r24
    16ba:	2c f4       	brge	.+10     	; 0x16c6 <LCD_VidSendData+0x364>
		__ticks = 1;
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	9e 83       	std	Y+6, r25	; 0x06
    16c2:	8d 83       	std	Y+5, r24	; 0x05
    16c4:	3f c0       	rjmp	.+126    	; 0x1744 <LCD_VidSendData+0x3e2>
	else if (__tmp > 65535)
    16c6:	6f 81       	ldd	r22, Y+7	; 0x07
    16c8:	78 85       	ldd	r23, Y+8	; 0x08
    16ca:	89 85       	ldd	r24, Y+9	; 0x09
    16cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	3f ef       	ldi	r19, 0xFF	; 255
    16d2:	4f e7       	ldi	r20, 0x7F	; 127
    16d4:	57 e4       	ldi	r21, 0x47	; 71
    16d6:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    16da:	18 16       	cp	r1, r24
    16dc:	4c f5       	brge	.+82     	; 0x1730 <LCD_VidSendData+0x3ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16de:	6b 85       	ldd	r22, Y+11	; 0x0b
    16e0:	7c 85       	ldd	r23, Y+12	; 0x0c
    16e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    16e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	40 e2       	ldi	r20, 0x20	; 32
    16ec:	51 e4       	ldi	r21, 0x41	; 65
    16ee:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    16f2:	dc 01       	movw	r26, r24
    16f4:	cb 01       	movw	r24, r22
    16f6:	bc 01       	movw	r22, r24
    16f8:	cd 01       	movw	r24, r26
    16fa:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    16fe:	dc 01       	movw	r26, r24
    1700:	cb 01       	movw	r24, r22
    1702:	9e 83       	std	Y+6, r25	; 0x06
    1704:	8d 83       	std	Y+5, r24	; 0x05
    1706:	0f c0       	rjmp	.+30     	; 0x1726 <LCD_VidSendData+0x3c4>
    1708:	80 e9       	ldi	r24, 0x90	; 144
    170a:	91 e0       	ldi	r25, 0x01	; 1
    170c:	9c 83       	std	Y+4, r25	; 0x04
    170e:	8b 83       	std	Y+3, r24	; 0x03
    1710:	8b 81       	ldd	r24, Y+3	; 0x03
    1712:	9c 81       	ldd	r25, Y+4	; 0x04
    1714:	01 97       	sbiw	r24, 0x01	; 1
    1716:	f1 f7       	brne	.-4      	; 0x1714 <LCD_VidSendData+0x3b2>
    1718:	9c 83       	std	Y+4, r25	; 0x04
    171a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    171c:	8d 81       	ldd	r24, Y+5	; 0x05
    171e:	9e 81       	ldd	r25, Y+6	; 0x06
    1720:	01 97       	sbiw	r24, 0x01	; 1
    1722:	9e 83       	std	Y+6, r25	; 0x06
    1724:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1726:	8d 81       	ldd	r24, Y+5	; 0x05
    1728:	9e 81       	ldd	r25, Y+6	; 0x06
    172a:	00 97       	sbiw	r24, 0x00	; 0
    172c:	69 f7       	brne	.-38     	; 0x1708 <LCD_VidSendData+0x3a6>
    172e:	14 c0       	rjmp	.+40     	; 0x1758 <LCD_VidSendData+0x3f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1730:	6f 81       	ldd	r22, Y+7	; 0x07
    1732:	78 85       	ldd	r23, Y+8	; 0x08
    1734:	89 85       	ldd	r24, Y+9	; 0x09
    1736:	9a 85       	ldd	r25, Y+10	; 0x0a
    1738:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    173c:	dc 01       	movw	r26, r24
    173e:	cb 01       	movw	r24, r22
    1740:	9e 83       	std	Y+6, r25	; 0x06
    1742:	8d 83       	std	Y+5, r24	; 0x05
    1744:	8d 81       	ldd	r24, Y+5	; 0x05
    1746:	9e 81       	ldd	r25, Y+6	; 0x06
    1748:	9a 83       	std	Y+2, r25	; 0x02
    174a:	89 83       	std	Y+1, r24	; 0x01
    174c:	89 81       	ldd	r24, Y+1	; 0x01
    174e:	9a 81       	ldd	r25, Y+2	; 0x02
    1750:	01 97       	sbiw	r24, 0x01	; 1
    1752:	f1 f7       	brne	.-4      	; 0x1750 <LCD_VidSendData+0x3ee>
    1754:	9a 83       	std	Y+2, r25	; 0x02
    1756:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2);

	//E LOW  -->  UNENABLE
	DIO_VidSetPinValue(LCD_CTRL_PORT,LCD_E_PIN,Pin_Low);
    1758:	80 e0       	ldi	r24, 0x00	; 0
    175a:	62 e0       	ldi	r22, 0x02	; 2
    175c:	40 e0       	ldi	r20, 0x00	; 0
    175e:	0e 94 93 06 	call	0xd26	; 0xd26 <DIO_VidSetPinValue>

#endif

}
    1762:	ac 96       	adiw	r28, 0x2c	; 44
    1764:	0f b6       	in	r0, 0x3f	; 63
    1766:	f8 94       	cli
    1768:	de bf       	out	0x3e, r29	; 62
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	cd bf       	out	0x3d, r28	; 61
    176e:	cf 91       	pop	r28
    1770:	df 91       	pop	r29
    1772:	08 95       	ret

00001774 <LCD_VidInit>:


//INITIALIZATION FUNCTION
void LCD_VidInit(){
    1774:	df 93       	push	r29
    1776:	cf 93       	push	r28
    1778:	cd b7       	in	r28, 0x3d	; 61
    177a:	de b7       	in	r29, 0x3e	; 62
    177c:	aa 97       	sbiw	r28, 0x2a	; 42
    177e:	0f b6       	in	r0, 0x3f	; 63
    1780:	f8 94       	cli
    1782:	de bf       	out	0x3e, r29	; 62
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	cd bf       	out	0x3d, r28	; 61

	//SET PIN RS DIRECTION TO BE OUTPUT
	DIO_VidSetPinDirection(LCD_CTRL_PORT,LCD_RS_PIN,Output);
    1788:	80 e0       	ldi	r24, 0x00	; 0
    178a:	61 e0       	ldi	r22, 0x01	; 1
    178c:	41 e0       	ldi	r20, 0x01	; 1
    178e:	0e 94 20 06 	call	0xc40	; 0xc40 <DIO_VidSetPinDirection>

	//SET PIN E DIRECTION TO BE OUTPUT
	DIO_VidSetPinDirection(LCD_CTRL_PORT,LCD_E_PIN,Output);
    1792:	80 e0       	ldi	r24, 0x00	; 0
    1794:	62 e0       	ldi	r22, 0x02	; 2
    1796:	41 e0       	ldi	r20, 0x01	; 1
    1798:	0e 94 20 06 	call	0xc40	; 0xc40 <DIO_VidSetPinDirection>
	LCD_VidSendCommand(LCD_CLEAR);

#elif LCD_MODE == 4

	//SET MSBs OF PORT A DIRECTION TO BE OUTPUT
	DIO_VidSetPinDirection(LCD_DATA_PORT, LCD_DATA_PIN0, Output);
    179c:	80 e0       	ldi	r24, 0x00	; 0
    179e:	63 e0       	ldi	r22, 0x03	; 3
    17a0:	41 e0       	ldi	r20, 0x01	; 1
    17a2:	0e 94 20 06 	call	0xc40	; 0xc40 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_DATA_PORT, LCD_DATA_PIN1, Output);
    17a6:	80 e0       	ldi	r24, 0x00	; 0
    17a8:	64 e0       	ldi	r22, 0x04	; 4
    17aa:	41 e0       	ldi	r20, 0x01	; 1
    17ac:	0e 94 20 06 	call	0xc40	; 0xc40 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_DATA_PORT, LCD_DATA_PIN2, Output);
    17b0:	80 e0       	ldi	r24, 0x00	; 0
    17b2:	65 e0       	ldi	r22, 0x05	; 5
    17b4:	41 e0       	ldi	r20, 0x01	; 1
    17b6:	0e 94 20 06 	call	0xc40	; 0xc40 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_DATA_PORT, LCD_DATA_PIN3, Output);
    17ba:	80 e0       	ldi	r24, 0x00	; 0
    17bc:	66 e0       	ldi	r22, 0x06	; 6
    17be:	41 e0       	ldi	r20, 0x01	; 1
    17c0:	0e 94 20 06 	call	0xc40	; 0xc40 <DIO_VidSetPinDirection>
    17c4:	80 e0       	ldi	r24, 0x00	; 0
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	a0 e2       	ldi	r26, 0x20	; 32
    17ca:	b2 e4       	ldi	r27, 0x42	; 66
    17cc:	8f a3       	std	Y+39, r24	; 0x27
    17ce:	98 a7       	std	Y+40, r25	; 0x28
    17d0:	a9 a7       	std	Y+41, r26	; 0x29
    17d2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17d4:	6f a1       	ldd	r22, Y+39	; 0x27
    17d6:	78 a5       	ldd	r23, Y+40	; 0x28
    17d8:	89 a5       	ldd	r24, Y+41	; 0x29
    17da:	9a a5       	ldd	r25, Y+42	; 0x2a
    17dc:	20 e0       	ldi	r18, 0x00	; 0
    17de:	30 e0       	ldi	r19, 0x00	; 0
    17e0:	4a e7       	ldi	r20, 0x7A	; 122
    17e2:	55 e4       	ldi	r21, 0x45	; 69
    17e4:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    17e8:	dc 01       	movw	r26, r24
    17ea:	cb 01       	movw	r24, r22
    17ec:	8b a3       	std	Y+35, r24	; 0x23
    17ee:	9c a3       	std	Y+36, r25	; 0x24
    17f0:	ad a3       	std	Y+37, r26	; 0x25
    17f2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    17f4:	6b a1       	ldd	r22, Y+35	; 0x23
    17f6:	7c a1       	ldd	r23, Y+36	; 0x24
    17f8:	8d a1       	ldd	r24, Y+37	; 0x25
    17fa:	9e a1       	ldd	r25, Y+38	; 0x26
    17fc:	20 e0       	ldi	r18, 0x00	; 0
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	40 e8       	ldi	r20, 0x80	; 128
    1802:	5f e3       	ldi	r21, 0x3F	; 63
    1804:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    1808:	88 23       	and	r24, r24
    180a:	2c f4       	brge	.+10     	; 0x1816 <LCD_VidInit+0xa2>
		__ticks = 1;
    180c:	81 e0       	ldi	r24, 0x01	; 1
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	9a a3       	std	Y+34, r25	; 0x22
    1812:	89 a3       	std	Y+33, r24	; 0x21
    1814:	3f c0       	rjmp	.+126    	; 0x1894 <LCD_VidInit+0x120>
	else if (__tmp > 65535)
    1816:	6b a1       	ldd	r22, Y+35	; 0x23
    1818:	7c a1       	ldd	r23, Y+36	; 0x24
    181a:	8d a1       	ldd	r24, Y+37	; 0x25
    181c:	9e a1       	ldd	r25, Y+38	; 0x26
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	3f ef       	ldi	r19, 0xFF	; 255
    1822:	4f e7       	ldi	r20, 0x7F	; 127
    1824:	57 e4       	ldi	r21, 0x47	; 71
    1826:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    182a:	18 16       	cp	r1, r24
    182c:	4c f5       	brge	.+82     	; 0x1880 <LCD_VidInit+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    182e:	6f a1       	ldd	r22, Y+39	; 0x27
    1830:	78 a5       	ldd	r23, Y+40	; 0x28
    1832:	89 a5       	ldd	r24, Y+41	; 0x29
    1834:	9a a5       	ldd	r25, Y+42	; 0x2a
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	30 e0       	ldi	r19, 0x00	; 0
    183a:	40 e2       	ldi	r20, 0x20	; 32
    183c:	51 e4       	ldi	r21, 0x41	; 65
    183e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1842:	dc 01       	movw	r26, r24
    1844:	cb 01       	movw	r24, r22
    1846:	bc 01       	movw	r22, r24
    1848:	cd 01       	movw	r24, r26
    184a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    184e:	dc 01       	movw	r26, r24
    1850:	cb 01       	movw	r24, r22
    1852:	9a a3       	std	Y+34, r25	; 0x22
    1854:	89 a3       	std	Y+33, r24	; 0x21
    1856:	0f c0       	rjmp	.+30     	; 0x1876 <LCD_VidInit+0x102>
    1858:	80 e9       	ldi	r24, 0x90	; 144
    185a:	91 e0       	ldi	r25, 0x01	; 1
    185c:	98 a3       	std	Y+32, r25	; 0x20
    185e:	8f 8f       	std	Y+31, r24	; 0x1f
    1860:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1862:	98 a1       	ldd	r25, Y+32	; 0x20
    1864:	01 97       	sbiw	r24, 0x01	; 1
    1866:	f1 f7       	brne	.-4      	; 0x1864 <LCD_VidInit+0xf0>
    1868:	98 a3       	std	Y+32, r25	; 0x20
    186a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    186c:	89 a1       	ldd	r24, Y+33	; 0x21
    186e:	9a a1       	ldd	r25, Y+34	; 0x22
    1870:	01 97       	sbiw	r24, 0x01	; 1
    1872:	9a a3       	std	Y+34, r25	; 0x22
    1874:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1876:	89 a1       	ldd	r24, Y+33	; 0x21
    1878:	9a a1       	ldd	r25, Y+34	; 0x22
    187a:	00 97       	sbiw	r24, 0x00	; 0
    187c:	69 f7       	brne	.-38     	; 0x1858 <LCD_VidInit+0xe4>
    187e:	14 c0       	rjmp	.+40     	; 0x18a8 <LCD_VidInit+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1880:	6b a1       	ldd	r22, Y+35	; 0x23
    1882:	7c a1       	ldd	r23, Y+36	; 0x24
    1884:	8d a1       	ldd	r24, Y+37	; 0x25
    1886:	9e a1       	ldd	r25, Y+38	; 0x26
    1888:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    188c:	dc 01       	movw	r26, r24
    188e:	cb 01       	movw	r24, r22
    1890:	9a a3       	std	Y+34, r25	; 0x22
    1892:	89 a3       	std	Y+33, r24	; 0x21
    1894:	89 a1       	ldd	r24, Y+33	; 0x21
    1896:	9a a1       	ldd	r25, Y+34	; 0x22
    1898:	9e 8f       	std	Y+30, r25	; 0x1e
    189a:	8d 8f       	std	Y+29, r24	; 0x1d
    189c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    189e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    18a0:	01 97       	sbiw	r24, 0x01	; 1
    18a2:	f1 f7       	brne	.-4      	; 0x18a0 <LCD_VidInit+0x12c>
    18a4:	9e 8f       	std	Y+30, r25	; 0x1e
    18a6:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(40);

	//FUNCTION SET COMMAND: 4bot mode
	LCD_VidSendCommand(LCD_FOUR_BIT_MODE_S1);
    18a8:	83 e3       	ldi	r24, 0x33	; 51
    18aa:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
	LCD_VidSendCommand(LCD_FOUR_BIT_MODE_S2);
    18ae:	82 e3       	ldi	r24, 0x32	; 50
    18b0:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>

	//FUNCTION SET COMMAND: 4bit mode 2 LINES, 5*8 FONT SIZE
	LCD_VidSendCommand(LCD_FOUR_BIT_MODE_TWO_LINES);
    18b4:	88 e2       	ldi	r24, 0x28	; 40
    18b6:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
    18ba:	80 e0       	ldi	r24, 0x00	; 0
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	a0 e2       	ldi	r26, 0x20	; 32
    18c0:	b2 e4       	ldi	r27, 0x42	; 66
    18c2:	89 8f       	std	Y+25, r24	; 0x19
    18c4:	9a 8f       	std	Y+26, r25	; 0x1a
    18c6:	ab 8f       	std	Y+27, r26	; 0x1b
    18c8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18ca:	69 8d       	ldd	r22, Y+25	; 0x19
    18cc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18ce:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18d0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18d2:	20 e0       	ldi	r18, 0x00	; 0
    18d4:	30 e0       	ldi	r19, 0x00	; 0
    18d6:	4a e7       	ldi	r20, 0x7A	; 122
    18d8:	55 e4       	ldi	r21, 0x45	; 69
    18da:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    18de:	dc 01       	movw	r26, r24
    18e0:	cb 01       	movw	r24, r22
    18e2:	8d 8b       	std	Y+21, r24	; 0x15
    18e4:	9e 8b       	std	Y+22, r25	; 0x16
    18e6:	af 8b       	std	Y+23, r26	; 0x17
    18e8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    18ea:	6d 89       	ldd	r22, Y+21	; 0x15
    18ec:	7e 89       	ldd	r23, Y+22	; 0x16
    18ee:	8f 89       	ldd	r24, Y+23	; 0x17
    18f0:	98 8d       	ldd	r25, Y+24	; 0x18
    18f2:	20 e0       	ldi	r18, 0x00	; 0
    18f4:	30 e0       	ldi	r19, 0x00	; 0
    18f6:	40 e8       	ldi	r20, 0x80	; 128
    18f8:	5f e3       	ldi	r21, 0x3F	; 63
    18fa:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    18fe:	88 23       	and	r24, r24
    1900:	2c f4       	brge	.+10     	; 0x190c <LCD_VidInit+0x198>
		__ticks = 1;
    1902:	81 e0       	ldi	r24, 0x01	; 1
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	9c 8b       	std	Y+20, r25	; 0x14
    1908:	8b 8b       	std	Y+19, r24	; 0x13
    190a:	3f c0       	rjmp	.+126    	; 0x198a <LCD_VidInit+0x216>
	else if (__tmp > 65535)
    190c:	6d 89       	ldd	r22, Y+21	; 0x15
    190e:	7e 89       	ldd	r23, Y+22	; 0x16
    1910:	8f 89       	ldd	r24, Y+23	; 0x17
    1912:	98 8d       	ldd	r25, Y+24	; 0x18
    1914:	20 e0       	ldi	r18, 0x00	; 0
    1916:	3f ef       	ldi	r19, 0xFF	; 255
    1918:	4f e7       	ldi	r20, 0x7F	; 127
    191a:	57 e4       	ldi	r21, 0x47	; 71
    191c:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    1920:	18 16       	cp	r1, r24
    1922:	4c f5       	brge	.+82     	; 0x1976 <LCD_VidInit+0x202>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1924:	69 8d       	ldd	r22, Y+25	; 0x19
    1926:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1928:	8b 8d       	ldd	r24, Y+27	; 0x1b
    192a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	40 e2       	ldi	r20, 0x20	; 32
    1932:	51 e4       	ldi	r21, 0x41	; 65
    1934:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1938:	dc 01       	movw	r26, r24
    193a:	cb 01       	movw	r24, r22
    193c:	bc 01       	movw	r22, r24
    193e:	cd 01       	movw	r24, r26
    1940:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	9c 8b       	std	Y+20, r25	; 0x14
    194a:	8b 8b       	std	Y+19, r24	; 0x13
    194c:	0f c0       	rjmp	.+30     	; 0x196c <LCD_VidInit+0x1f8>
    194e:	80 e9       	ldi	r24, 0x90	; 144
    1950:	91 e0       	ldi	r25, 0x01	; 1
    1952:	9a 8b       	std	Y+18, r25	; 0x12
    1954:	89 8b       	std	Y+17, r24	; 0x11
    1956:	89 89       	ldd	r24, Y+17	; 0x11
    1958:	9a 89       	ldd	r25, Y+18	; 0x12
    195a:	01 97       	sbiw	r24, 0x01	; 1
    195c:	f1 f7       	brne	.-4      	; 0x195a <LCD_VidInit+0x1e6>
    195e:	9a 8b       	std	Y+18, r25	; 0x12
    1960:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1962:	8b 89       	ldd	r24, Y+19	; 0x13
    1964:	9c 89       	ldd	r25, Y+20	; 0x14
    1966:	01 97       	sbiw	r24, 0x01	; 1
    1968:	9c 8b       	std	Y+20, r25	; 0x14
    196a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    196c:	8b 89       	ldd	r24, Y+19	; 0x13
    196e:	9c 89       	ldd	r25, Y+20	; 0x14
    1970:	00 97       	sbiw	r24, 0x00	; 0
    1972:	69 f7       	brne	.-38     	; 0x194e <LCD_VidInit+0x1da>
    1974:	14 c0       	rjmp	.+40     	; 0x199e <LCD_VidInit+0x22a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1976:	6d 89       	ldd	r22, Y+21	; 0x15
    1978:	7e 89       	ldd	r23, Y+22	; 0x16
    197a:	8f 89       	ldd	r24, Y+23	; 0x17
    197c:	98 8d       	ldd	r25, Y+24	; 0x18
    197e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1982:	dc 01       	movw	r26, r24
    1984:	cb 01       	movw	r24, r22
    1986:	9c 8b       	std	Y+20, r25	; 0x14
    1988:	8b 8b       	std	Y+19, r24	; 0x13
    198a:	8b 89       	ldd	r24, Y+19	; 0x13
    198c:	9c 89       	ldd	r25, Y+20	; 0x14
    198e:	98 8b       	std	Y+16, r25	; 0x10
    1990:	8f 87       	std	Y+15, r24	; 0x0f
    1992:	8f 85       	ldd	r24, Y+15	; 0x0f
    1994:	98 89       	ldd	r25, Y+16	; 0x10
    1996:	01 97       	sbiw	r24, 0x01	; 1
    1998:	f1 f7       	brne	.-4      	; 0x1996 <LCD_VidInit+0x222>
    199a:	98 8b       	std	Y+16, r25	; 0x10
    199c:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(40);
	//DISPLAY ON OFF CONTROL: DISPLAY ENABLE, DISPLAY CURSOR, ON BLINK CURSOR
	LCD_VidSendCommand(LCD_CURSOR_OFF_BLINK);
    199e:	8d e0       	ldi	r24, 0x0D	; 13
    19a0:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
    19a4:	80 e0       	ldi	r24, 0x00	; 0
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	a0 e2       	ldi	r26, 0x20	; 32
    19aa:	b2 e4       	ldi	r27, 0x42	; 66
    19ac:	8b 87       	std	Y+11, r24	; 0x0b
    19ae:	9c 87       	std	Y+12, r25	; 0x0c
    19b0:	ad 87       	std	Y+13, r26	; 0x0d
    19b2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19b4:	6b 85       	ldd	r22, Y+11	; 0x0b
    19b6:	7c 85       	ldd	r23, Y+12	; 0x0c
    19b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    19ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    19bc:	20 e0       	ldi	r18, 0x00	; 0
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	4a e7       	ldi	r20, 0x7A	; 122
    19c2:	55 e4       	ldi	r21, 0x45	; 69
    19c4:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    19c8:	dc 01       	movw	r26, r24
    19ca:	cb 01       	movw	r24, r22
    19cc:	8f 83       	std	Y+7, r24	; 0x07
    19ce:	98 87       	std	Y+8, r25	; 0x08
    19d0:	a9 87       	std	Y+9, r26	; 0x09
    19d2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    19d4:	6f 81       	ldd	r22, Y+7	; 0x07
    19d6:	78 85       	ldd	r23, Y+8	; 0x08
    19d8:	89 85       	ldd	r24, Y+9	; 0x09
    19da:	9a 85       	ldd	r25, Y+10	; 0x0a
    19dc:	20 e0       	ldi	r18, 0x00	; 0
    19de:	30 e0       	ldi	r19, 0x00	; 0
    19e0:	40 e8       	ldi	r20, 0x80	; 128
    19e2:	5f e3       	ldi	r21, 0x3F	; 63
    19e4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    19e8:	88 23       	and	r24, r24
    19ea:	2c f4       	brge	.+10     	; 0x19f6 <LCD_VidInit+0x282>
		__ticks = 1;
    19ec:	81 e0       	ldi	r24, 0x01	; 1
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	9e 83       	std	Y+6, r25	; 0x06
    19f2:	8d 83       	std	Y+5, r24	; 0x05
    19f4:	3f c0       	rjmp	.+126    	; 0x1a74 <LCD_VidInit+0x300>
	else if (__tmp > 65535)
    19f6:	6f 81       	ldd	r22, Y+7	; 0x07
    19f8:	78 85       	ldd	r23, Y+8	; 0x08
    19fa:	89 85       	ldd	r24, Y+9	; 0x09
    19fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    19fe:	20 e0       	ldi	r18, 0x00	; 0
    1a00:	3f ef       	ldi	r19, 0xFF	; 255
    1a02:	4f e7       	ldi	r20, 0x7F	; 127
    1a04:	57 e4       	ldi	r21, 0x47	; 71
    1a06:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    1a0a:	18 16       	cp	r1, r24
    1a0c:	4c f5       	brge	.+82     	; 0x1a60 <LCD_VidInit+0x2ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a0e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a10:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a12:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a14:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a16:	20 e0       	ldi	r18, 0x00	; 0
    1a18:	30 e0       	ldi	r19, 0x00	; 0
    1a1a:	40 e2       	ldi	r20, 0x20	; 32
    1a1c:	51 e4       	ldi	r21, 0x41	; 65
    1a1e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1a22:	dc 01       	movw	r26, r24
    1a24:	cb 01       	movw	r24, r22
    1a26:	bc 01       	movw	r22, r24
    1a28:	cd 01       	movw	r24, r26
    1a2a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1a2e:	dc 01       	movw	r26, r24
    1a30:	cb 01       	movw	r24, r22
    1a32:	9e 83       	std	Y+6, r25	; 0x06
    1a34:	8d 83       	std	Y+5, r24	; 0x05
    1a36:	0f c0       	rjmp	.+30     	; 0x1a56 <LCD_VidInit+0x2e2>
    1a38:	80 e9       	ldi	r24, 0x90	; 144
    1a3a:	91 e0       	ldi	r25, 0x01	; 1
    1a3c:	9c 83       	std	Y+4, r25	; 0x04
    1a3e:	8b 83       	std	Y+3, r24	; 0x03
    1a40:	8b 81       	ldd	r24, Y+3	; 0x03
    1a42:	9c 81       	ldd	r25, Y+4	; 0x04
    1a44:	01 97       	sbiw	r24, 0x01	; 1
    1a46:	f1 f7       	brne	.-4      	; 0x1a44 <LCD_VidInit+0x2d0>
    1a48:	9c 83       	std	Y+4, r25	; 0x04
    1a4a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a4e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a50:	01 97       	sbiw	r24, 0x01	; 1
    1a52:	9e 83       	std	Y+6, r25	; 0x06
    1a54:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a56:	8d 81       	ldd	r24, Y+5	; 0x05
    1a58:	9e 81       	ldd	r25, Y+6	; 0x06
    1a5a:	00 97       	sbiw	r24, 0x00	; 0
    1a5c:	69 f7       	brne	.-38     	; 0x1a38 <LCD_VidInit+0x2c4>
    1a5e:	14 c0       	rjmp	.+40     	; 0x1a88 <LCD_VidInit+0x314>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a60:	6f 81       	ldd	r22, Y+7	; 0x07
    1a62:	78 85       	ldd	r23, Y+8	; 0x08
    1a64:	89 85       	ldd	r24, Y+9	; 0x09
    1a66:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a68:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1a6c:	dc 01       	movw	r26, r24
    1a6e:	cb 01       	movw	r24, r22
    1a70:	9e 83       	std	Y+6, r25	; 0x06
    1a72:	8d 83       	std	Y+5, r24	; 0x05
    1a74:	8d 81       	ldd	r24, Y+5	; 0x05
    1a76:	9e 81       	ldd	r25, Y+6	; 0x06
    1a78:	9a 83       	std	Y+2, r25	; 0x02
    1a7a:	89 83       	std	Y+1, r24	; 0x01
    1a7c:	89 81       	ldd	r24, Y+1	; 0x01
    1a7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1a80:	01 97       	sbiw	r24, 0x01	; 1
    1a82:	f1 f7       	brne	.-4      	; 0x1a80 <LCD_VidInit+0x30c>
    1a84:	9a 83       	std	Y+2, r25	; 0x02
    1a86:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(40);
	//CLEAR DISPLAY
	LCD_VidSendCommand(LCD_CLEAR);
    1a88:	81 e0       	ldi	r24, 0x01	; 1
    1a8a:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>

#endif
}
    1a8e:	aa 96       	adiw	r28, 0x2a	; 42
    1a90:	0f b6       	in	r0, 0x3f	; 63
    1a92:	f8 94       	cli
    1a94:	de bf       	out	0x3e, r29	; 62
    1a96:	0f be       	out	0x3f, r0	; 63
    1a98:	cd bf       	out	0x3d, r28	; 61
    1a9a:	cf 91       	pop	r28
    1a9c:	df 91       	pop	r29
    1a9e:	08 95       	ret

00001aa0 <LCD_VidSendString>:

//SEND STRING FUNCTION
void LCD_VidSendString(char *Copy_u8Data){
    1aa0:	df 93       	push	r29
    1aa2:	cf 93       	push	r28
    1aa4:	00 d0       	rcall	.+0      	; 0x1aa6 <LCD_VidSendString+0x6>
    1aa6:	00 d0       	rcall	.+0      	; 0x1aa8 <LCD_VidSendString+0x8>
    1aa8:	cd b7       	in	r28, 0x3d	; 61
    1aaa:	de b7       	in	r29, 0x3e	; 62
    1aac:	9c 83       	std	Y+4, r25	; 0x04
    1aae:	8b 83       	std	Y+3, r24	; 0x03
	int Iterator = 0;
    1ab0:	1a 82       	std	Y+2, r1	; 0x02
    1ab2:	19 82       	std	Y+1, r1	; 0x01
    1ab4:	0f c0       	rjmp	.+30     	; 0x1ad4 <LCD_VidSendString+0x34>
	while(Copy_u8Data[Iterator] != '\0'){
		LCD_VidSendData(Copy_u8Data[Iterator]);
    1ab6:	29 81       	ldd	r18, Y+1	; 0x01
    1ab8:	3a 81       	ldd	r19, Y+2	; 0x02
    1aba:	8b 81       	ldd	r24, Y+3	; 0x03
    1abc:	9c 81       	ldd	r25, Y+4	; 0x04
    1abe:	fc 01       	movw	r30, r24
    1ac0:	e2 0f       	add	r30, r18
    1ac2:	f3 1f       	adc	r31, r19
    1ac4:	80 81       	ld	r24, Z
    1ac6:	0e 94 b1 09 	call	0x1362	; 0x1362 <LCD_VidSendData>
		Iterator++;
    1aca:	89 81       	ldd	r24, Y+1	; 0x01
    1acc:	9a 81       	ldd	r25, Y+2	; 0x02
    1ace:	01 96       	adiw	r24, 0x01	; 1
    1ad0:	9a 83       	std	Y+2, r25	; 0x02
    1ad2:	89 83       	std	Y+1, r24	; 0x01
}

//SEND STRING FUNCTION
void LCD_VidSendString(char *Copy_u8Data){
	int Iterator = 0;
	while(Copy_u8Data[Iterator] != '\0'){
    1ad4:	29 81       	ldd	r18, Y+1	; 0x01
    1ad6:	3a 81       	ldd	r19, Y+2	; 0x02
    1ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    1ada:	9c 81       	ldd	r25, Y+4	; 0x04
    1adc:	fc 01       	movw	r30, r24
    1ade:	e2 0f       	add	r30, r18
    1ae0:	f3 1f       	adc	r31, r19
    1ae2:	80 81       	ld	r24, Z
    1ae4:	88 23       	and	r24, r24
    1ae6:	39 f7       	brne	.-50     	; 0x1ab6 <LCD_VidSendString+0x16>
		LCD_VidSendData(Copy_u8Data[Iterator]);
		Iterator++;
	}
}
    1ae8:	0f 90       	pop	r0
    1aea:	0f 90       	pop	r0
    1aec:	0f 90       	pop	r0
    1aee:	0f 90       	pop	r0
    1af0:	cf 91       	pop	r28
    1af2:	df 91       	pop	r29
    1af4:	08 95       	ret

00001af6 <LCD_VidSetPosition>:

//SET POSITION FUNCTION
void LCD_VidSetPosition(u8 Copy_u8Row, u8 Copy_u8Columm){
    1af6:	df 93       	push	r29
    1af8:	cf 93       	push	r28
    1afa:	00 d0       	rcall	.+0      	; 0x1afc <LCD_VidSetPosition+0x6>
    1afc:	cd b7       	in	r28, 0x3d	; 61
    1afe:	de b7       	in	r29, 0x3e	; 62
    1b00:	89 83       	std	Y+1, r24	; 0x01
    1b02:	6a 83       	std	Y+2, r22	; 0x02

	if(Copy_u8Row == LCD_ROW1){
    1b04:	89 81       	ldd	r24, Y+1	; 0x01
    1b06:	88 23       	and	r24, r24
    1b08:	61 f4       	brne	.+24     	; 0x1b22 <LCD_VidSetPosition+0x2c>
		LOC = Copy_u8Columm;
    1b0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b0c:	88 2f       	mov	r24, r24
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	90 93 89 00 	sts	0x0089, r25
    1b14:	80 93 88 00 	sts	0x0088, r24
		LCD_VidSendCommand(LCD_FORCE_START_LOCATION|Copy_u8Columm);
    1b18:	8a 81       	ldd	r24, Y+2	; 0x02
    1b1a:	80 68       	ori	r24, 0x80	; 128
    1b1c:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
    1b20:	0f c0       	rjmp	.+30     	; 0x1b40 <LCD_VidSetPosition+0x4a>
	}
	else if(Copy_u8Row == LCD_ROW2){
    1b22:	89 81       	ldd	r24, Y+1	; 0x01
    1b24:	81 30       	cpi	r24, 0x01	; 1
    1b26:	61 f4       	brne	.+24     	; 0x1b40 <LCD_VidSetPosition+0x4a>
		LOC = 16+Copy_u8Columm;
    1b28:	8a 81       	ldd	r24, Y+2	; 0x02
    1b2a:	88 2f       	mov	r24, r24
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	40 96       	adiw	r24, 0x10	; 16
    1b30:	90 93 89 00 	sts	0x0089, r25
    1b34:	80 93 88 00 	sts	0x0088, r24
		LCD_VidSendCommand(LCD_FORCE_START_LOCATION|LCD_SEGMENT_1_OF_ROW_1|Copy_u8Columm);
    1b38:	8a 81       	ldd	r24, Y+2	; 0x02
    1b3a:	80 6c       	ori	r24, 0xC0	; 192
    1b3c:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
	}
}
    1b40:	0f 90       	pop	r0
    1b42:	0f 90       	pop	r0
    1b44:	cf 91       	pop	r28
    1b46:	df 91       	pop	r29
    1b48:	08 95       	ret

00001b4a <LCD_VidSendfloat>:

//SEND NUMBER FUNCTION
void LCD_VidSendfloat(f32 Copy_u8Data){
    1b4a:	0f 93       	push	r16
    1b4c:	1f 93       	push	r17
    1b4e:	df 93       	push	r29
    1b50:	cf 93       	push	r28
    1b52:	cd b7       	in	r28, 0x3d	; 61
    1b54:	de b7       	in	r29, 0x3e	; 62
    1b56:	6c 97       	sbiw	r28, 0x1c	; 28
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	69 8f       	std	Y+25, r22	; 0x19
    1b64:	7a 8f       	std	Y+26, r23	; 0x1a
    1b66:	8b 8f       	std	Y+27, r24	; 0x1b
    1b68:	9c 8f       	std	Y+28, r25	; 0x1c
	char floatStr[20];  // Adjust the size as needed
	int n = Copy_u8Data;
    1b6a:	69 8d       	ldd	r22, Y+25	; 0x19
    1b6c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b6e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b70:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b72:	0e 94 26 04 	call	0x84c	; 0x84c <__fixsfsi>
    1b76:	dc 01       	movw	r26, r24
    1b78:	cb 01       	movw	r24, r22
    1b7a:	9c 83       	std	Y+4, r25	; 0x04
    1b7c:	8b 83       	std	Y+3, r24	; 0x03
	int digit = 1;
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	9a 83       	std	Y+2, r25	; 0x02
    1b84:	89 83       	std	Y+1, r24	; 0x01
    1b86:	0f c0       	rjmp	.+30     	; 0x1ba6 <LCD_VidSendfloat+0x5c>
	while(n!=0)
	   {
	       n=n/10;
    1b88:	8b 81       	ldd	r24, Y+3	; 0x03
    1b8a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b8c:	2a e0       	ldi	r18, 0x0A	; 10
    1b8e:	30 e0       	ldi	r19, 0x00	; 0
    1b90:	b9 01       	movw	r22, r18
    1b92:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__divmodhi4>
    1b96:	cb 01       	movw	r24, r22
    1b98:	9c 83       	std	Y+4, r25	; 0x04
    1b9a:	8b 83       	std	Y+3, r24	; 0x03
	       digit++;
    1b9c:	89 81       	ldd	r24, Y+1	; 0x01
    1b9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1ba0:	01 96       	adiw	r24, 0x01	; 1
    1ba2:	9a 83       	std	Y+2, r25	; 0x02
    1ba4:	89 83       	std	Y+1, r24	; 0x01
//SEND NUMBER FUNCTION
void LCD_VidSendfloat(f32 Copy_u8Data){
	char floatStr[20];  // Adjust the size as needed
	int n = Copy_u8Data;
	int digit = 1;
	while(n!=0)
    1ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ba8:	9c 81       	ldd	r25, Y+4	; 0x04
    1baa:	00 97       	sbiw	r24, 0x00	; 0
    1bac:	69 f7       	brne	.-38     	; 0x1b88 <LCD_VidSendfloat+0x3e>
	   {
	       n=n/10;
	       digit++;
	   }
	dtostrf(Copy_u8Data, digit+2,2, floatStr);
    1bae:	89 81       	ldd	r24, Y+1	; 0x01
    1bb0:	8e 5f       	subi	r24, 0xFE	; 254
    1bb2:	28 2f       	mov	r18, r24
    1bb4:	89 8d       	ldd	r24, Y+25	; 0x19
    1bb6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1bb8:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1bba:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1bbc:	fe 01       	movw	r30, r28
    1bbe:	35 96       	adiw	r30, 0x05	; 5
    1bc0:	bc 01       	movw	r22, r24
    1bc2:	cd 01       	movw	r24, r26
    1bc4:	42 2f       	mov	r20, r18
    1bc6:	22 e0       	ldi	r18, 0x02	; 2
    1bc8:	8f 01       	movw	r16, r30
    1bca:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <dtostrf>
	LCD_VidSendString(floatStr);
    1bce:	ce 01       	movw	r24, r28
    1bd0:	05 96       	adiw	r24, 0x05	; 5
    1bd2:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <LCD_VidSendString>
}
    1bd6:	6c 96       	adiw	r28, 0x1c	; 28
    1bd8:	0f b6       	in	r0, 0x3f	; 63
    1bda:	f8 94       	cli
    1bdc:	de bf       	out	0x3e, r29	; 62
    1bde:	0f be       	out	0x3f, r0	; 63
    1be0:	cd bf       	out	0x3d, r28	; 61
    1be2:	cf 91       	pop	r28
    1be4:	df 91       	pop	r29
    1be6:	1f 91       	pop	r17
    1be8:	0f 91       	pop	r16
    1bea:	08 95       	ret

00001bec <LCD_VidSendint>:

void LCD_VidSendint(int Copy_u8Data){
    1bec:	df 93       	push	r29
    1bee:	cf 93       	push	r28
    1bf0:	cd b7       	in	r28, 0x3d	; 61
    1bf2:	de b7       	in	r29, 0x3e	; 62
    1bf4:	66 97       	sbiw	r28, 0x16	; 22
    1bf6:	0f b6       	in	r0, 0x3f	; 63
    1bf8:	f8 94       	cli
    1bfa:	de bf       	out	0x3e, r29	; 62
    1bfc:	0f be       	out	0x3f, r0	; 63
    1bfe:	cd bf       	out	0x3d, r28	; 61
    1c00:	9e 8b       	std	Y+22, r25	; 0x16
    1c02:	8d 8b       	std	Y+21, r24	; 0x15
	char intstr[20];  // Adjust the size as needed
	sprintf(intstr,"%d",Copy_u8Data);
    1c04:	00 d0       	rcall	.+0      	; 0x1c06 <LCD_VidSendint+0x1a>
    1c06:	00 d0       	rcall	.+0      	; 0x1c08 <LCD_VidSendint+0x1c>
    1c08:	00 d0       	rcall	.+0      	; 0x1c0a <LCD_VidSendint+0x1e>
    1c0a:	ed b7       	in	r30, 0x3d	; 61
    1c0c:	fe b7       	in	r31, 0x3e	; 62
    1c0e:	31 96       	adiw	r30, 0x01	; 1
    1c10:	ce 01       	movw	r24, r28
    1c12:	01 96       	adiw	r24, 0x01	; 1
    1c14:	91 83       	std	Z+1, r25	; 0x01
    1c16:	80 83       	st	Z, r24
    1c18:	80 e6       	ldi	r24, 0x60	; 96
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	93 83       	std	Z+3, r25	; 0x03
    1c1e:	82 83       	std	Z+2, r24	; 0x02
    1c20:	8d 89       	ldd	r24, Y+21	; 0x15
    1c22:	9e 89       	ldd	r25, Y+22	; 0x16
    1c24:	95 83       	std	Z+5, r25	; 0x05
    1c26:	84 83       	std	Z+4, r24	; 0x04
    1c28:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <sprintf>
    1c2c:	8d b7       	in	r24, 0x3d	; 61
    1c2e:	9e b7       	in	r25, 0x3e	; 62
    1c30:	06 96       	adiw	r24, 0x06	; 6
    1c32:	0f b6       	in	r0, 0x3f	; 63
    1c34:	f8 94       	cli
    1c36:	9e bf       	out	0x3e, r25	; 62
    1c38:	0f be       	out	0x3f, r0	; 63
    1c3a:	8d bf       	out	0x3d, r24	; 61
	LCD_VidSendString(intstr);
    1c3c:	ce 01       	movw	r24, r28
    1c3e:	01 96       	adiw	r24, 0x01	; 1
    1c40:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <LCD_VidSendString>
}
    1c44:	66 96       	adiw	r28, 0x16	; 22
    1c46:	0f b6       	in	r0, 0x3f	; 63
    1c48:	f8 94       	cli
    1c4a:	de bf       	out	0x3e, r29	; 62
    1c4c:	0f be       	out	0x3f, r0	; 63
    1c4e:	cd bf       	out	0x3d, r28	; 61
    1c50:	cf 91       	pop	r28
    1c52:	df 91       	pop	r29
    1c54:	08 95       	ret

00001c56 <LCD_VidClear>:

void LCD_VidClear()
{
    1c56:	df 93       	push	r29
    1c58:	cf 93       	push	r28
    1c5a:	cd b7       	in	r28, 0x3d	; 61
    1c5c:	de b7       	in	r29, 0x3e	; 62
    1c5e:	2e 97       	sbiw	r28, 0x0e	; 14
    1c60:	0f b6       	in	r0, 0x3f	; 63
    1c62:	f8 94       	cli
    1c64:	de bf       	out	0x3e, r29	; 62
    1c66:	0f be       	out	0x3f, r0	; 63
    1c68:	cd bf       	out	0x3d, r28	; 61
	LOC =0;
    1c6a:	10 92 89 00 	sts	0x0089, r1
    1c6e:	10 92 88 00 	sts	0x0088, r1
	LCD_VidSendCommand(LCD_CLEAR);		/* Clear display */
    1c72:	81 e0       	ldi	r24, 0x01	; 1
    1c74:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	a0 e0       	ldi	r26, 0x00	; 0
    1c7e:	b0 e4       	ldi	r27, 0x40	; 64
    1c80:	8b 87       	std	Y+11, r24	; 0x0b
    1c82:	9c 87       	std	Y+12, r25	; 0x0c
    1c84:	ad 87       	std	Y+13, r26	; 0x0d
    1c86:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c88:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c8a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c8c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c8e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c90:	20 e0       	ldi	r18, 0x00	; 0
    1c92:	30 e0       	ldi	r19, 0x00	; 0
    1c94:	4a e7       	ldi	r20, 0x7A	; 122
    1c96:	55 e4       	ldi	r21, 0x45	; 69
    1c98:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1c9c:	dc 01       	movw	r26, r24
    1c9e:	cb 01       	movw	r24, r22
    1ca0:	8f 83       	std	Y+7, r24	; 0x07
    1ca2:	98 87       	std	Y+8, r25	; 0x08
    1ca4:	a9 87       	std	Y+9, r26	; 0x09
    1ca6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ca8:	6f 81       	ldd	r22, Y+7	; 0x07
    1caa:	78 85       	ldd	r23, Y+8	; 0x08
    1cac:	89 85       	ldd	r24, Y+9	; 0x09
    1cae:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cb0:	20 e0       	ldi	r18, 0x00	; 0
    1cb2:	30 e0       	ldi	r19, 0x00	; 0
    1cb4:	40 e8       	ldi	r20, 0x80	; 128
    1cb6:	5f e3       	ldi	r21, 0x3F	; 63
    1cb8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    1cbc:	88 23       	and	r24, r24
    1cbe:	2c f4       	brge	.+10     	; 0x1cca <LCD_VidClear+0x74>
		__ticks = 1;
    1cc0:	81 e0       	ldi	r24, 0x01	; 1
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	9e 83       	std	Y+6, r25	; 0x06
    1cc6:	8d 83       	std	Y+5, r24	; 0x05
    1cc8:	3f c0       	rjmp	.+126    	; 0x1d48 <LCD_VidClear+0xf2>
	else if (__tmp > 65535)
    1cca:	6f 81       	ldd	r22, Y+7	; 0x07
    1ccc:	78 85       	ldd	r23, Y+8	; 0x08
    1cce:	89 85       	ldd	r24, Y+9	; 0x09
    1cd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cd2:	20 e0       	ldi	r18, 0x00	; 0
    1cd4:	3f ef       	ldi	r19, 0xFF	; 255
    1cd6:	4f e7       	ldi	r20, 0x7F	; 127
    1cd8:	57 e4       	ldi	r21, 0x47	; 71
    1cda:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    1cde:	18 16       	cp	r1, r24
    1ce0:	4c f5       	brge	.+82     	; 0x1d34 <LCD_VidClear+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ce2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ce4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ce6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ce8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cea:	20 e0       	ldi	r18, 0x00	; 0
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	40 e2       	ldi	r20, 0x20	; 32
    1cf0:	51 e4       	ldi	r21, 0x41	; 65
    1cf2:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1cf6:	dc 01       	movw	r26, r24
    1cf8:	cb 01       	movw	r24, r22
    1cfa:	bc 01       	movw	r22, r24
    1cfc:	cd 01       	movw	r24, r26
    1cfe:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1d02:	dc 01       	movw	r26, r24
    1d04:	cb 01       	movw	r24, r22
    1d06:	9e 83       	std	Y+6, r25	; 0x06
    1d08:	8d 83       	std	Y+5, r24	; 0x05
    1d0a:	0f c0       	rjmp	.+30     	; 0x1d2a <LCD_VidClear+0xd4>
    1d0c:	80 e9       	ldi	r24, 0x90	; 144
    1d0e:	91 e0       	ldi	r25, 0x01	; 1
    1d10:	9c 83       	std	Y+4, r25	; 0x04
    1d12:	8b 83       	std	Y+3, r24	; 0x03
    1d14:	8b 81       	ldd	r24, Y+3	; 0x03
    1d16:	9c 81       	ldd	r25, Y+4	; 0x04
    1d18:	01 97       	sbiw	r24, 0x01	; 1
    1d1a:	f1 f7       	brne	.-4      	; 0x1d18 <LCD_VidClear+0xc2>
    1d1c:	9c 83       	std	Y+4, r25	; 0x04
    1d1e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d20:	8d 81       	ldd	r24, Y+5	; 0x05
    1d22:	9e 81       	ldd	r25, Y+6	; 0x06
    1d24:	01 97       	sbiw	r24, 0x01	; 1
    1d26:	9e 83       	std	Y+6, r25	; 0x06
    1d28:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d2a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d2c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d2e:	00 97       	sbiw	r24, 0x00	; 0
    1d30:	69 f7       	brne	.-38     	; 0x1d0c <LCD_VidClear+0xb6>
    1d32:	14 c0       	rjmp	.+40     	; 0x1d5c <LCD_VidClear+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d34:	6f 81       	ldd	r22, Y+7	; 0x07
    1d36:	78 85       	ldd	r23, Y+8	; 0x08
    1d38:	89 85       	ldd	r24, Y+9	; 0x09
    1d3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d3c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1d40:	dc 01       	movw	r26, r24
    1d42:	cb 01       	movw	r24, r22
    1d44:	9e 83       	std	Y+6, r25	; 0x06
    1d46:	8d 83       	std	Y+5, r24	; 0x05
    1d48:	8d 81       	ldd	r24, Y+5	; 0x05
    1d4a:	9e 81       	ldd	r25, Y+6	; 0x06
    1d4c:	9a 83       	std	Y+2, r25	; 0x02
    1d4e:	89 83       	std	Y+1, r24	; 0x01
    1d50:	89 81       	ldd	r24, Y+1	; 0x01
    1d52:	9a 81       	ldd	r25, Y+2	; 0x02
    1d54:	01 97       	sbiw	r24, 0x01	; 1
    1d56:	f1 f7       	brne	.-4      	; 0x1d54 <LCD_VidClear+0xfe>
    1d58:	9a 83       	std	Y+2, r25	; 0x02
    1d5a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	LCD_VidSendCommand(LCD_FORCE_START_LOCATION);		/* Cursor at home position */
    1d5c:	80 e8       	ldi	r24, 0x80	; 128
    1d5e:	0e 94 3f 08 	call	0x107e	; 0x107e <LCD_VidSendCommand>
}
    1d62:	2e 96       	adiw	r28, 0x0e	; 14
    1d64:	0f b6       	in	r0, 0x3f	; 63
    1d66:	f8 94       	cli
    1d68:	de bf       	out	0x3e, r29	; 62
    1d6a:	0f be       	out	0x3f, r0	; 63
    1d6c:	cd bf       	out	0x3d, r28	; 61
    1d6e:	cf 91       	pop	r28
    1d70:	df 91       	pop	r29
    1d72:	08 95       	ret

00001d74 <main>:
#include "LCD_config.h"
#include "LCD_interface.h"
#include <util/delay.h>

int main()
{
    1d74:	df 93       	push	r29
    1d76:	cf 93       	push	r28
    1d78:	cd b7       	in	r28, 0x3d	; 61
    1d7a:	de b7       	in	r29, 0x3e	; 62
    1d7c:	aa 97       	sbiw	r28, 0x2a	; 42
    1d7e:	0f b6       	in	r0, 0x3f	; 63
    1d80:	f8 94       	cli
    1d82:	de bf       	out	0x3e, r29	; 62
    1d84:	0f be       	out	0x3f, r0	; 63
    1d86:	cd bf       	out	0x3d, r28	; 61
	char name[] = "Hi, I'm Abdullah Eid";
    1d88:	ce 01       	movw	r24, r28
    1d8a:	41 96       	adiw	r24, 0x11	; 17
    1d8c:	9f a3       	std	Y+39, r25	; 0x27
    1d8e:	8e a3       	std	Y+38, r24	; 0x26
    1d90:	ea e6       	ldi	r30, 0x6A	; 106
    1d92:	f0 e0       	ldi	r31, 0x00	; 0
    1d94:	f9 a7       	std	Y+41, r31	; 0x29
    1d96:	e8 a7       	std	Y+40, r30	; 0x28
    1d98:	f5 e1       	ldi	r31, 0x15	; 21
    1d9a:	fa a7       	std	Y+42, r31	; 0x2a
    1d9c:	e8 a5       	ldd	r30, Y+40	; 0x28
    1d9e:	f9 a5       	ldd	r31, Y+41	; 0x29
    1da0:	00 80       	ld	r0, Z
    1da2:	88 a5       	ldd	r24, Y+40	; 0x28
    1da4:	99 a5       	ldd	r25, Y+41	; 0x29
    1da6:	01 96       	adiw	r24, 0x01	; 1
    1da8:	99 a7       	std	Y+41, r25	; 0x29
    1daa:	88 a7       	std	Y+40, r24	; 0x28
    1dac:	ee a1       	ldd	r30, Y+38	; 0x26
    1dae:	ff a1       	ldd	r31, Y+39	; 0x27
    1db0:	00 82       	st	Z, r0
    1db2:	8e a1       	ldd	r24, Y+38	; 0x26
    1db4:	9f a1       	ldd	r25, Y+39	; 0x27
    1db6:	01 96       	adiw	r24, 0x01	; 1
    1db8:	9f a3       	std	Y+39, r25	; 0x27
    1dba:	8e a3       	std	Y+38, r24	; 0x26
    1dbc:	9a a5       	ldd	r25, Y+42	; 0x2a
    1dbe:	91 50       	subi	r25, 0x01	; 1
    1dc0:	9a a7       	std	Y+42, r25	; 0x2a
    1dc2:	ea a5       	ldd	r30, Y+42	; 0x2a
    1dc4:	ee 23       	and	r30, r30
    1dc6:	51 f7       	brne	.-44     	; 0x1d9c <main+0x28>
	LCD_VidInit();
    1dc8:	0e 94 ba 0b 	call	0x1774	; 0x1774 <LCD_VidInit>
	LCD_VidSendString(name);
    1dcc:	ce 01       	movw	r24, r28
    1dce:	41 96       	adiw	r24, 0x11	; 17
    1dd0:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <LCD_VidSendString>
    1dd4:	80 e0       	ldi	r24, 0x00	; 0
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	aa ef       	ldi	r26, 0xFA	; 250
    1dda:	b4 e4       	ldi	r27, 0x44	; 68
    1ddc:	8b 87       	std	Y+11, r24	; 0x0b
    1dde:	9c 87       	std	Y+12, r25	; 0x0c
    1de0:	ad 87       	std	Y+13, r26	; 0x0d
    1de2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1de4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1de6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1de8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dea:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dec:	20 e0       	ldi	r18, 0x00	; 0
    1dee:	30 e0       	ldi	r19, 0x00	; 0
    1df0:	4a e7       	ldi	r20, 0x7A	; 122
    1df2:	55 e4       	ldi	r21, 0x45	; 69
    1df4:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1df8:	dc 01       	movw	r26, r24
    1dfa:	cb 01       	movw	r24, r22
    1dfc:	8f 83       	std	Y+7, r24	; 0x07
    1dfe:	98 87       	std	Y+8, r25	; 0x08
    1e00:	a9 87       	std	Y+9, r26	; 0x09
    1e02:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1e04:	6f 81       	ldd	r22, Y+7	; 0x07
    1e06:	78 85       	ldd	r23, Y+8	; 0x08
    1e08:	89 85       	ldd	r24, Y+9	; 0x09
    1e0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e0c:	20 e0       	ldi	r18, 0x00	; 0
    1e0e:	30 e0       	ldi	r19, 0x00	; 0
    1e10:	40 e8       	ldi	r20, 0x80	; 128
    1e12:	5f e3       	ldi	r21, 0x3F	; 63
    1e14:	0e 94 f6 03 	call	0x7ec	; 0x7ec <__ltsf2>
    1e18:	88 23       	and	r24, r24
    1e1a:	2c f4       	brge	.+10     	; 0x1e26 <main+0xb2>
		__ticks = 1;
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	9e 83       	std	Y+6, r25	; 0x06
    1e22:	8d 83       	std	Y+5, r24	; 0x05
    1e24:	3f c0       	rjmp	.+126    	; 0x1ea4 <main+0x130>
	else if (__tmp > 65535)
    1e26:	6f 81       	ldd	r22, Y+7	; 0x07
    1e28:	78 85       	ldd	r23, Y+8	; 0x08
    1e2a:	89 85       	ldd	r24, Y+9	; 0x09
    1e2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e2e:	20 e0       	ldi	r18, 0x00	; 0
    1e30:	3f ef       	ldi	r19, 0xFF	; 255
    1e32:	4f e7       	ldi	r20, 0x7F	; 127
    1e34:	57 e4       	ldi	r21, 0x47	; 71
    1e36:	0e 94 96 03 	call	0x72c	; 0x72c <__gtsf2>
    1e3a:	18 16       	cp	r1, r24
    1e3c:	4c f5       	brge	.+82     	; 0x1e90 <main+0x11c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e3e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e40:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e42:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e44:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e46:	20 e0       	ldi	r18, 0x00	; 0
    1e48:	30 e0       	ldi	r19, 0x00	; 0
    1e4a:	40 e2       	ldi	r20, 0x20	; 32
    1e4c:	51 e4       	ldi	r21, 0x41	; 65
    1e4e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1e52:	dc 01       	movw	r26, r24
    1e54:	cb 01       	movw	r24, r22
    1e56:	bc 01       	movw	r22, r24
    1e58:	cd 01       	movw	r24, r26
    1e5a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1e5e:	dc 01       	movw	r26, r24
    1e60:	cb 01       	movw	r24, r22
    1e62:	9e 83       	std	Y+6, r25	; 0x06
    1e64:	8d 83       	std	Y+5, r24	; 0x05
    1e66:	0f c0       	rjmp	.+30     	; 0x1e86 <main+0x112>
    1e68:	80 e9       	ldi	r24, 0x90	; 144
    1e6a:	91 e0       	ldi	r25, 0x01	; 1
    1e6c:	9c 83       	std	Y+4, r25	; 0x04
    1e6e:	8b 83       	std	Y+3, r24	; 0x03
    1e70:	8b 81       	ldd	r24, Y+3	; 0x03
    1e72:	9c 81       	ldd	r25, Y+4	; 0x04
    1e74:	01 97       	sbiw	r24, 0x01	; 1
    1e76:	f1 f7       	brne	.-4      	; 0x1e74 <main+0x100>
    1e78:	9c 83       	std	Y+4, r25	; 0x04
    1e7a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1e7e:	9e 81       	ldd	r25, Y+6	; 0x06
    1e80:	01 97       	sbiw	r24, 0x01	; 1
    1e82:	9e 83       	std	Y+6, r25	; 0x06
    1e84:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e86:	8d 81       	ldd	r24, Y+5	; 0x05
    1e88:	9e 81       	ldd	r25, Y+6	; 0x06
    1e8a:	00 97       	sbiw	r24, 0x00	; 0
    1e8c:	69 f7       	brne	.-38     	; 0x1e68 <main+0xf4>
    1e8e:	14 c0       	rjmp	.+40     	; 0x1eb8 <main+0x144>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e90:	6f 81       	ldd	r22, Y+7	; 0x07
    1e92:	78 85       	ldd	r23, Y+8	; 0x08
    1e94:	89 85       	ldd	r24, Y+9	; 0x09
    1e96:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e98:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1e9c:	dc 01       	movw	r26, r24
    1e9e:	cb 01       	movw	r24, r22
    1ea0:	9e 83       	std	Y+6, r25	; 0x06
    1ea2:	8d 83       	std	Y+5, r24	; 0x05
    1ea4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ea6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ea8:	9a 83       	std	Y+2, r25	; 0x02
    1eaa:	89 83       	std	Y+1, r24	; 0x01
    1eac:	89 81       	ldd	r24, Y+1	; 0x01
    1eae:	9a 81       	ldd	r25, Y+2	; 0x02
    1eb0:	01 97       	sbiw	r24, 0x01	; 1
    1eb2:	f1 f7       	brne	.-4      	; 0x1eb0 <main+0x13c>
    1eb4:	9a 83       	std	Y+2, r25	; 0x02
    1eb6:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(2000);
	LCD_VidClear();
    1eb8:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <LCD_VidClear>
	LCD_VidSendString("Age : ");
    1ebc:	83 e6       	ldi	r24, 0x63	; 99
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <LCD_VidSendString>
	int x = 20;
    1ec4:	84 e1       	ldi	r24, 0x14	; 20
    1ec6:	90 e0       	ldi	r25, 0x00	; 0
    1ec8:	98 8b       	std	Y+16, r25	; 0x10
    1eca:	8f 87       	std	Y+15, r24	; 0x0f
	LCD_VidSendint(x);
    1ecc:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ece:	98 89       	ldd	r25, Y+16	; 0x10
    1ed0:	0e 94 f6 0d 	call	0x1bec	; 0x1bec <LCD_VidSendint>
    1ed4:	80 e0       	ldi	r24, 0x00	; 0
    1ed6:	90 e0       	ldi	r25, 0x00	; 0



}
    1ed8:	aa 96       	adiw	r28, 0x2a	; 42
    1eda:	0f b6       	in	r0, 0x3f	; 63
    1edc:	f8 94       	cli
    1ede:	de bf       	out	0x3e, r29	; 62
    1ee0:	0f be       	out	0x3f, r0	; 63
    1ee2:	cd bf       	out	0x3d, r28	; 61
    1ee4:	cf 91       	pop	r28
    1ee6:	df 91       	pop	r29
    1ee8:	08 95       	ret

00001eea <__divmodhi4>:
    1eea:	97 fb       	bst	r25, 7
    1eec:	09 2e       	mov	r0, r25
    1eee:	07 26       	eor	r0, r23
    1ef0:	0a d0       	rcall	.+20     	; 0x1f06 <__divmodhi4_neg1>
    1ef2:	77 fd       	sbrc	r23, 7
    1ef4:	04 d0       	rcall	.+8      	; 0x1efe <__divmodhi4_neg2>
    1ef6:	0c d0       	rcall	.+24     	; 0x1f10 <__udivmodhi4>
    1ef8:	06 d0       	rcall	.+12     	; 0x1f06 <__divmodhi4_neg1>
    1efa:	00 20       	and	r0, r0
    1efc:	1a f4       	brpl	.+6      	; 0x1f04 <__divmodhi4_exit>

00001efe <__divmodhi4_neg2>:
    1efe:	70 95       	com	r23
    1f00:	61 95       	neg	r22
    1f02:	7f 4f       	sbci	r23, 0xFF	; 255

00001f04 <__divmodhi4_exit>:
    1f04:	08 95       	ret

00001f06 <__divmodhi4_neg1>:
    1f06:	f6 f7       	brtc	.-4      	; 0x1f04 <__divmodhi4_exit>
    1f08:	90 95       	com	r25
    1f0a:	81 95       	neg	r24
    1f0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f0e:	08 95       	ret

00001f10 <__udivmodhi4>:
    1f10:	aa 1b       	sub	r26, r26
    1f12:	bb 1b       	sub	r27, r27
    1f14:	51 e1       	ldi	r21, 0x11	; 17
    1f16:	07 c0       	rjmp	.+14     	; 0x1f26 <__udivmodhi4_ep>

00001f18 <__udivmodhi4_loop>:
    1f18:	aa 1f       	adc	r26, r26
    1f1a:	bb 1f       	adc	r27, r27
    1f1c:	a6 17       	cp	r26, r22
    1f1e:	b7 07       	cpc	r27, r23
    1f20:	10 f0       	brcs	.+4      	; 0x1f26 <__udivmodhi4_ep>
    1f22:	a6 1b       	sub	r26, r22
    1f24:	b7 0b       	sbc	r27, r23

00001f26 <__udivmodhi4_ep>:
    1f26:	88 1f       	adc	r24, r24
    1f28:	99 1f       	adc	r25, r25
    1f2a:	5a 95       	dec	r21
    1f2c:	a9 f7       	brne	.-22     	; 0x1f18 <__udivmodhi4_loop>
    1f2e:	80 95       	com	r24
    1f30:	90 95       	com	r25
    1f32:	bc 01       	movw	r22, r24
    1f34:	cd 01       	movw	r24, r26
    1f36:	08 95       	ret

00001f38 <__prologue_saves__>:
    1f38:	2f 92       	push	r2
    1f3a:	3f 92       	push	r3
    1f3c:	4f 92       	push	r4
    1f3e:	5f 92       	push	r5
    1f40:	6f 92       	push	r6
    1f42:	7f 92       	push	r7
    1f44:	8f 92       	push	r8
    1f46:	9f 92       	push	r9
    1f48:	af 92       	push	r10
    1f4a:	bf 92       	push	r11
    1f4c:	cf 92       	push	r12
    1f4e:	df 92       	push	r13
    1f50:	ef 92       	push	r14
    1f52:	ff 92       	push	r15
    1f54:	0f 93       	push	r16
    1f56:	1f 93       	push	r17
    1f58:	cf 93       	push	r28
    1f5a:	df 93       	push	r29
    1f5c:	cd b7       	in	r28, 0x3d	; 61
    1f5e:	de b7       	in	r29, 0x3e	; 62
    1f60:	ca 1b       	sub	r28, r26
    1f62:	db 0b       	sbc	r29, r27
    1f64:	0f b6       	in	r0, 0x3f	; 63
    1f66:	f8 94       	cli
    1f68:	de bf       	out	0x3e, r29	; 62
    1f6a:	0f be       	out	0x3f, r0	; 63
    1f6c:	cd bf       	out	0x3d, r28	; 61
    1f6e:	09 94       	ijmp

00001f70 <__epilogue_restores__>:
    1f70:	2a 88       	ldd	r2, Y+18	; 0x12
    1f72:	39 88       	ldd	r3, Y+17	; 0x11
    1f74:	48 88       	ldd	r4, Y+16	; 0x10
    1f76:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f78:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f7a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f7c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f7e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f80:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f82:	b9 84       	ldd	r11, Y+9	; 0x09
    1f84:	c8 84       	ldd	r12, Y+8	; 0x08
    1f86:	df 80       	ldd	r13, Y+7	; 0x07
    1f88:	ee 80       	ldd	r14, Y+6	; 0x06
    1f8a:	fd 80       	ldd	r15, Y+5	; 0x05
    1f8c:	0c 81       	ldd	r16, Y+4	; 0x04
    1f8e:	1b 81       	ldd	r17, Y+3	; 0x03
    1f90:	aa 81       	ldd	r26, Y+2	; 0x02
    1f92:	b9 81       	ldd	r27, Y+1	; 0x01
    1f94:	ce 0f       	add	r28, r30
    1f96:	d1 1d       	adc	r29, r1
    1f98:	0f b6       	in	r0, 0x3f	; 63
    1f9a:	f8 94       	cli
    1f9c:	de bf       	out	0x3e, r29	; 62
    1f9e:	0f be       	out	0x3f, r0	; 63
    1fa0:	cd bf       	out	0x3d, r28	; 61
    1fa2:	ed 01       	movw	r28, r26
    1fa4:	08 95       	ret

00001fa6 <dtostrf>:
    1fa6:	ef 92       	push	r14
    1fa8:	ff 92       	push	r15
    1faa:	0f 93       	push	r16
    1fac:	1f 93       	push	r17
    1fae:	f2 2f       	mov	r31, r18
    1fb0:	f0 2e       	mov	r15, r16
    1fb2:	47 fd       	sbrc	r20, 7
    1fb4:	02 c0       	rjmp	.+4      	; 0x1fba <dtostrf+0x14>
    1fb6:	e4 e0       	ldi	r30, 0x04	; 4
    1fb8:	01 c0       	rjmp	.+2      	; 0x1fbc <dtostrf+0x16>
    1fba:	e4 e1       	ldi	r30, 0x14	; 20
    1fbc:	24 2f       	mov	r18, r20
    1fbe:	33 27       	eor	r19, r19
    1fc0:	27 fd       	sbrc	r18, 7
    1fc2:	30 95       	com	r19
    1fc4:	37 ff       	sbrs	r19, 7
    1fc6:	03 c0       	rjmp	.+6      	; 0x1fce <dtostrf+0x28>
    1fc8:	30 95       	com	r19
    1fca:	21 95       	neg	r18
    1fcc:	3f 4f       	sbci	r19, 0xFF	; 255
    1fce:	4f 2d       	mov	r20, r15
    1fd0:	51 2f       	mov	r21, r17
    1fd2:	0f 2f       	mov	r16, r31
    1fd4:	ee 2e       	mov	r14, r30
    1fd6:	0e 94 f5 11 	call	0x23ea	; 0x23ea <dtoa_prf>
    1fda:	8f 2d       	mov	r24, r15
    1fdc:	91 2f       	mov	r25, r17
    1fde:	1f 91       	pop	r17
    1fe0:	0f 91       	pop	r16
    1fe2:	ff 90       	pop	r15
    1fe4:	ef 90       	pop	r14
    1fe6:	08 95       	ret

00001fe8 <sprintf>:
    1fe8:	ae e0       	ldi	r26, 0x0E	; 14
    1fea:	b0 e0       	ldi	r27, 0x00	; 0
    1fec:	ea ef       	ldi	r30, 0xFA	; 250
    1fee:	ff e0       	ldi	r31, 0x0F	; 15
    1ff0:	0c 94 aa 0f 	jmp	0x1f54	; 0x1f54 <__prologue_saves__+0x1c>
    1ff4:	0d 89       	ldd	r16, Y+21	; 0x15
    1ff6:	1e 89       	ldd	r17, Y+22	; 0x16
    1ff8:	86 e0       	ldi	r24, 0x06	; 6
    1ffa:	8c 83       	std	Y+4, r24	; 0x04
    1ffc:	1a 83       	std	Y+2, r17	; 0x02
    1ffe:	09 83       	std	Y+1, r16	; 0x01
    2000:	8f ef       	ldi	r24, 0xFF	; 255
    2002:	9f e7       	ldi	r25, 0x7F	; 127
    2004:	9e 83       	std	Y+6, r25	; 0x06
    2006:	8d 83       	std	Y+5, r24	; 0x05
    2008:	9e 01       	movw	r18, r28
    200a:	27 5e       	subi	r18, 0xE7	; 231
    200c:	3f 4f       	sbci	r19, 0xFF	; 255
    200e:	ce 01       	movw	r24, r28
    2010:	01 96       	adiw	r24, 0x01	; 1
    2012:	6f 89       	ldd	r22, Y+23	; 0x17
    2014:	78 8d       	ldd	r23, Y+24	; 0x18
    2016:	a9 01       	movw	r20, r18
    2018:	0e 94 18 10 	call	0x2030	; 0x2030 <vfprintf>
    201c:	2f 81       	ldd	r18, Y+7	; 0x07
    201e:	38 85       	ldd	r19, Y+8	; 0x08
    2020:	02 0f       	add	r16, r18
    2022:	13 1f       	adc	r17, r19
    2024:	f8 01       	movw	r30, r16
    2026:	10 82       	st	Z, r1
    2028:	2e 96       	adiw	r28, 0x0e	; 14
    202a:	e4 e0       	ldi	r30, 0x04	; 4
    202c:	0c 94 c6 0f 	jmp	0x1f8c	; 0x1f8c <__epilogue_restores__+0x1c>

00002030 <vfprintf>:
    2030:	ab e0       	ldi	r26, 0x0B	; 11
    2032:	b0 e0       	ldi	r27, 0x00	; 0
    2034:	ee e1       	ldi	r30, 0x1E	; 30
    2036:	f0 e1       	ldi	r31, 0x10	; 16
    2038:	0c 94 9c 0f 	jmp	0x1f38	; 0x1f38 <__prologue_saves__>
    203c:	3c 01       	movw	r6, r24
    203e:	2b 01       	movw	r4, r22
    2040:	5a 01       	movw	r10, r20
    2042:	fc 01       	movw	r30, r24
    2044:	17 82       	std	Z+7, r1	; 0x07
    2046:	16 82       	std	Z+6, r1	; 0x06
    2048:	83 81       	ldd	r24, Z+3	; 0x03
    204a:	81 fd       	sbrc	r24, 1
    204c:	03 c0       	rjmp	.+6      	; 0x2054 <vfprintf+0x24>
    204e:	6f ef       	ldi	r22, 0xFF	; 255
    2050:	7f ef       	ldi	r23, 0xFF	; 255
    2052:	c6 c1       	rjmp	.+908    	; 0x23e0 <vfprintf+0x3b0>
    2054:	9a e0       	ldi	r25, 0x0A	; 10
    2056:	89 2e       	mov	r8, r25
    2058:	1e 01       	movw	r2, r28
    205a:	08 94       	sec
    205c:	21 1c       	adc	r2, r1
    205e:	31 1c       	adc	r3, r1
    2060:	f3 01       	movw	r30, r6
    2062:	23 81       	ldd	r18, Z+3	; 0x03
    2064:	f2 01       	movw	r30, r4
    2066:	23 fd       	sbrc	r18, 3
    2068:	85 91       	lpm	r24, Z+
    206a:	23 ff       	sbrs	r18, 3
    206c:	81 91       	ld	r24, Z+
    206e:	2f 01       	movw	r4, r30
    2070:	88 23       	and	r24, r24
    2072:	09 f4       	brne	.+2      	; 0x2076 <vfprintf+0x46>
    2074:	b2 c1       	rjmp	.+868    	; 0x23da <vfprintf+0x3aa>
    2076:	85 32       	cpi	r24, 0x25	; 37
    2078:	39 f4       	brne	.+14     	; 0x2088 <vfprintf+0x58>
    207a:	23 fd       	sbrc	r18, 3
    207c:	85 91       	lpm	r24, Z+
    207e:	23 ff       	sbrs	r18, 3
    2080:	81 91       	ld	r24, Z+
    2082:	2f 01       	movw	r4, r30
    2084:	85 32       	cpi	r24, 0x25	; 37
    2086:	29 f4       	brne	.+10     	; 0x2092 <vfprintf+0x62>
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	b3 01       	movw	r22, r6
    208c:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    2090:	e7 cf       	rjmp	.-50     	; 0x2060 <vfprintf+0x30>
    2092:	98 2f       	mov	r25, r24
    2094:	ff 24       	eor	r15, r15
    2096:	ee 24       	eor	r14, r14
    2098:	99 24       	eor	r9, r9
    209a:	ff e1       	ldi	r31, 0x1F	; 31
    209c:	ff 15       	cp	r31, r15
    209e:	d0 f0       	brcs	.+52     	; 0x20d4 <vfprintf+0xa4>
    20a0:	9b 32       	cpi	r25, 0x2B	; 43
    20a2:	69 f0       	breq	.+26     	; 0x20be <vfprintf+0x8e>
    20a4:	9c 32       	cpi	r25, 0x2C	; 44
    20a6:	28 f4       	brcc	.+10     	; 0x20b2 <vfprintf+0x82>
    20a8:	90 32       	cpi	r25, 0x20	; 32
    20aa:	59 f0       	breq	.+22     	; 0x20c2 <vfprintf+0x92>
    20ac:	93 32       	cpi	r25, 0x23	; 35
    20ae:	91 f4       	brne	.+36     	; 0x20d4 <vfprintf+0xa4>
    20b0:	0e c0       	rjmp	.+28     	; 0x20ce <vfprintf+0x9e>
    20b2:	9d 32       	cpi	r25, 0x2D	; 45
    20b4:	49 f0       	breq	.+18     	; 0x20c8 <vfprintf+0x98>
    20b6:	90 33       	cpi	r25, 0x30	; 48
    20b8:	69 f4       	brne	.+26     	; 0x20d4 <vfprintf+0xa4>
    20ba:	41 e0       	ldi	r20, 0x01	; 1
    20bc:	24 c0       	rjmp	.+72     	; 0x2106 <vfprintf+0xd6>
    20be:	52 e0       	ldi	r21, 0x02	; 2
    20c0:	f5 2a       	or	r15, r21
    20c2:	84 e0       	ldi	r24, 0x04	; 4
    20c4:	f8 2a       	or	r15, r24
    20c6:	28 c0       	rjmp	.+80     	; 0x2118 <vfprintf+0xe8>
    20c8:	98 e0       	ldi	r25, 0x08	; 8
    20ca:	f9 2a       	or	r15, r25
    20cc:	25 c0       	rjmp	.+74     	; 0x2118 <vfprintf+0xe8>
    20ce:	e0 e1       	ldi	r30, 0x10	; 16
    20d0:	fe 2a       	or	r15, r30
    20d2:	22 c0       	rjmp	.+68     	; 0x2118 <vfprintf+0xe8>
    20d4:	f7 fc       	sbrc	r15, 7
    20d6:	29 c0       	rjmp	.+82     	; 0x212a <vfprintf+0xfa>
    20d8:	89 2f       	mov	r24, r25
    20da:	80 53       	subi	r24, 0x30	; 48
    20dc:	8a 30       	cpi	r24, 0x0A	; 10
    20de:	70 f4       	brcc	.+28     	; 0x20fc <vfprintf+0xcc>
    20e0:	f6 fe       	sbrs	r15, 6
    20e2:	05 c0       	rjmp	.+10     	; 0x20ee <vfprintf+0xbe>
    20e4:	98 9c       	mul	r9, r8
    20e6:	90 2c       	mov	r9, r0
    20e8:	11 24       	eor	r1, r1
    20ea:	98 0e       	add	r9, r24
    20ec:	15 c0       	rjmp	.+42     	; 0x2118 <vfprintf+0xe8>
    20ee:	e8 9c       	mul	r14, r8
    20f0:	e0 2c       	mov	r14, r0
    20f2:	11 24       	eor	r1, r1
    20f4:	e8 0e       	add	r14, r24
    20f6:	f0 e2       	ldi	r31, 0x20	; 32
    20f8:	ff 2a       	or	r15, r31
    20fa:	0e c0       	rjmp	.+28     	; 0x2118 <vfprintf+0xe8>
    20fc:	9e 32       	cpi	r25, 0x2E	; 46
    20fe:	29 f4       	brne	.+10     	; 0x210a <vfprintf+0xda>
    2100:	f6 fc       	sbrc	r15, 6
    2102:	6b c1       	rjmp	.+726    	; 0x23da <vfprintf+0x3aa>
    2104:	40 e4       	ldi	r20, 0x40	; 64
    2106:	f4 2a       	or	r15, r20
    2108:	07 c0       	rjmp	.+14     	; 0x2118 <vfprintf+0xe8>
    210a:	9c 36       	cpi	r25, 0x6C	; 108
    210c:	19 f4       	brne	.+6      	; 0x2114 <vfprintf+0xe4>
    210e:	50 e8       	ldi	r21, 0x80	; 128
    2110:	f5 2a       	or	r15, r21
    2112:	02 c0       	rjmp	.+4      	; 0x2118 <vfprintf+0xe8>
    2114:	98 36       	cpi	r25, 0x68	; 104
    2116:	49 f4       	brne	.+18     	; 0x212a <vfprintf+0xfa>
    2118:	f2 01       	movw	r30, r4
    211a:	23 fd       	sbrc	r18, 3
    211c:	95 91       	lpm	r25, Z+
    211e:	23 ff       	sbrs	r18, 3
    2120:	91 91       	ld	r25, Z+
    2122:	2f 01       	movw	r4, r30
    2124:	99 23       	and	r25, r25
    2126:	09 f0       	breq	.+2      	; 0x212a <vfprintf+0xfa>
    2128:	b8 cf       	rjmp	.-144    	; 0x209a <vfprintf+0x6a>
    212a:	89 2f       	mov	r24, r25
    212c:	85 54       	subi	r24, 0x45	; 69
    212e:	83 30       	cpi	r24, 0x03	; 3
    2130:	18 f0       	brcs	.+6      	; 0x2138 <vfprintf+0x108>
    2132:	80 52       	subi	r24, 0x20	; 32
    2134:	83 30       	cpi	r24, 0x03	; 3
    2136:	38 f4       	brcc	.+14     	; 0x2146 <vfprintf+0x116>
    2138:	44 e0       	ldi	r20, 0x04	; 4
    213a:	50 e0       	ldi	r21, 0x00	; 0
    213c:	a4 0e       	add	r10, r20
    213e:	b5 1e       	adc	r11, r21
    2140:	5f e3       	ldi	r21, 0x3F	; 63
    2142:	59 83       	std	Y+1, r21	; 0x01
    2144:	0f c0       	rjmp	.+30     	; 0x2164 <vfprintf+0x134>
    2146:	93 36       	cpi	r25, 0x63	; 99
    2148:	31 f0       	breq	.+12     	; 0x2156 <vfprintf+0x126>
    214a:	93 37       	cpi	r25, 0x73	; 115
    214c:	79 f0       	breq	.+30     	; 0x216c <vfprintf+0x13c>
    214e:	93 35       	cpi	r25, 0x53	; 83
    2150:	09 f0       	breq	.+2      	; 0x2154 <vfprintf+0x124>
    2152:	56 c0       	rjmp	.+172    	; 0x2200 <vfprintf+0x1d0>
    2154:	20 c0       	rjmp	.+64     	; 0x2196 <vfprintf+0x166>
    2156:	f5 01       	movw	r30, r10
    2158:	80 81       	ld	r24, Z
    215a:	89 83       	std	Y+1, r24	; 0x01
    215c:	42 e0       	ldi	r20, 0x02	; 2
    215e:	50 e0       	ldi	r21, 0x00	; 0
    2160:	a4 0e       	add	r10, r20
    2162:	b5 1e       	adc	r11, r21
    2164:	61 01       	movw	r12, r2
    2166:	01 e0       	ldi	r16, 0x01	; 1
    2168:	10 e0       	ldi	r17, 0x00	; 0
    216a:	12 c0       	rjmp	.+36     	; 0x2190 <vfprintf+0x160>
    216c:	f5 01       	movw	r30, r10
    216e:	c0 80       	ld	r12, Z
    2170:	d1 80       	ldd	r13, Z+1	; 0x01
    2172:	f6 fc       	sbrc	r15, 6
    2174:	03 c0       	rjmp	.+6      	; 0x217c <vfprintf+0x14c>
    2176:	6f ef       	ldi	r22, 0xFF	; 255
    2178:	7f ef       	ldi	r23, 0xFF	; 255
    217a:	02 c0       	rjmp	.+4      	; 0x2180 <vfprintf+0x150>
    217c:	69 2d       	mov	r22, r9
    217e:	70 e0       	ldi	r23, 0x00	; 0
    2180:	42 e0       	ldi	r20, 0x02	; 2
    2182:	50 e0       	ldi	r21, 0x00	; 0
    2184:	a4 0e       	add	r10, r20
    2186:	b5 1e       	adc	r11, r21
    2188:	c6 01       	movw	r24, r12
    218a:	0e 94 3a 14 	call	0x2874	; 0x2874 <strnlen>
    218e:	8c 01       	movw	r16, r24
    2190:	5f e7       	ldi	r21, 0x7F	; 127
    2192:	f5 22       	and	r15, r21
    2194:	14 c0       	rjmp	.+40     	; 0x21be <vfprintf+0x18e>
    2196:	f5 01       	movw	r30, r10
    2198:	c0 80       	ld	r12, Z
    219a:	d1 80       	ldd	r13, Z+1	; 0x01
    219c:	f6 fc       	sbrc	r15, 6
    219e:	03 c0       	rjmp	.+6      	; 0x21a6 <vfprintf+0x176>
    21a0:	6f ef       	ldi	r22, 0xFF	; 255
    21a2:	7f ef       	ldi	r23, 0xFF	; 255
    21a4:	02 c0       	rjmp	.+4      	; 0x21aa <vfprintf+0x17a>
    21a6:	69 2d       	mov	r22, r9
    21a8:	70 e0       	ldi	r23, 0x00	; 0
    21aa:	42 e0       	ldi	r20, 0x02	; 2
    21ac:	50 e0       	ldi	r21, 0x00	; 0
    21ae:	a4 0e       	add	r10, r20
    21b0:	b5 1e       	adc	r11, r21
    21b2:	c6 01       	movw	r24, r12
    21b4:	0e 94 2f 14 	call	0x285e	; 0x285e <strnlen_P>
    21b8:	8c 01       	movw	r16, r24
    21ba:	50 e8       	ldi	r21, 0x80	; 128
    21bc:	f5 2a       	or	r15, r21
    21be:	f3 fe       	sbrs	r15, 3
    21c0:	07 c0       	rjmp	.+14     	; 0x21d0 <vfprintf+0x1a0>
    21c2:	1a c0       	rjmp	.+52     	; 0x21f8 <vfprintf+0x1c8>
    21c4:	80 e2       	ldi	r24, 0x20	; 32
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	b3 01       	movw	r22, r6
    21ca:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    21ce:	ea 94       	dec	r14
    21d0:	8e 2d       	mov	r24, r14
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	08 17       	cp	r16, r24
    21d6:	19 07       	cpc	r17, r25
    21d8:	a8 f3       	brcs	.-22     	; 0x21c4 <vfprintf+0x194>
    21da:	0e c0       	rjmp	.+28     	; 0x21f8 <vfprintf+0x1c8>
    21dc:	f6 01       	movw	r30, r12
    21de:	f7 fc       	sbrc	r15, 7
    21e0:	85 91       	lpm	r24, Z+
    21e2:	f7 fe       	sbrs	r15, 7
    21e4:	81 91       	ld	r24, Z+
    21e6:	6f 01       	movw	r12, r30
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	b3 01       	movw	r22, r6
    21ec:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    21f0:	e1 10       	cpse	r14, r1
    21f2:	ea 94       	dec	r14
    21f4:	01 50       	subi	r16, 0x01	; 1
    21f6:	10 40       	sbci	r17, 0x00	; 0
    21f8:	01 15       	cp	r16, r1
    21fa:	11 05       	cpc	r17, r1
    21fc:	79 f7       	brne	.-34     	; 0x21dc <vfprintf+0x1ac>
    21fe:	ea c0       	rjmp	.+468    	; 0x23d4 <vfprintf+0x3a4>
    2200:	94 36       	cpi	r25, 0x64	; 100
    2202:	11 f0       	breq	.+4      	; 0x2208 <vfprintf+0x1d8>
    2204:	99 36       	cpi	r25, 0x69	; 105
    2206:	69 f5       	brne	.+90     	; 0x2262 <vfprintf+0x232>
    2208:	f7 fe       	sbrs	r15, 7
    220a:	08 c0       	rjmp	.+16     	; 0x221c <vfprintf+0x1ec>
    220c:	f5 01       	movw	r30, r10
    220e:	20 81       	ld	r18, Z
    2210:	31 81       	ldd	r19, Z+1	; 0x01
    2212:	42 81       	ldd	r20, Z+2	; 0x02
    2214:	53 81       	ldd	r21, Z+3	; 0x03
    2216:	84 e0       	ldi	r24, 0x04	; 4
    2218:	90 e0       	ldi	r25, 0x00	; 0
    221a:	0a c0       	rjmp	.+20     	; 0x2230 <vfprintf+0x200>
    221c:	f5 01       	movw	r30, r10
    221e:	80 81       	ld	r24, Z
    2220:	91 81       	ldd	r25, Z+1	; 0x01
    2222:	9c 01       	movw	r18, r24
    2224:	44 27       	eor	r20, r20
    2226:	37 fd       	sbrc	r19, 7
    2228:	40 95       	com	r20
    222a:	54 2f       	mov	r21, r20
    222c:	82 e0       	ldi	r24, 0x02	; 2
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	a8 0e       	add	r10, r24
    2232:	b9 1e       	adc	r11, r25
    2234:	9f e6       	ldi	r25, 0x6F	; 111
    2236:	f9 22       	and	r15, r25
    2238:	57 ff       	sbrs	r21, 7
    223a:	09 c0       	rjmp	.+18     	; 0x224e <vfprintf+0x21e>
    223c:	50 95       	com	r21
    223e:	40 95       	com	r20
    2240:	30 95       	com	r19
    2242:	21 95       	neg	r18
    2244:	3f 4f       	sbci	r19, 0xFF	; 255
    2246:	4f 4f       	sbci	r20, 0xFF	; 255
    2248:	5f 4f       	sbci	r21, 0xFF	; 255
    224a:	e0 e8       	ldi	r30, 0x80	; 128
    224c:	fe 2a       	or	r15, r30
    224e:	ca 01       	movw	r24, r20
    2250:	b9 01       	movw	r22, r18
    2252:	a1 01       	movw	r20, r2
    2254:	2a e0       	ldi	r18, 0x0A	; 10
    2256:	30 e0       	ldi	r19, 0x00	; 0
    2258:	0e 94 71 14 	call	0x28e2	; 0x28e2 <__ultoa_invert>
    225c:	d8 2e       	mov	r13, r24
    225e:	d2 18       	sub	r13, r2
    2260:	40 c0       	rjmp	.+128    	; 0x22e2 <vfprintf+0x2b2>
    2262:	95 37       	cpi	r25, 0x75	; 117
    2264:	29 f4       	brne	.+10     	; 0x2270 <vfprintf+0x240>
    2266:	1f 2d       	mov	r17, r15
    2268:	1f 7e       	andi	r17, 0xEF	; 239
    226a:	2a e0       	ldi	r18, 0x0A	; 10
    226c:	30 e0       	ldi	r19, 0x00	; 0
    226e:	1d c0       	rjmp	.+58     	; 0x22aa <vfprintf+0x27a>
    2270:	1f 2d       	mov	r17, r15
    2272:	19 7f       	andi	r17, 0xF9	; 249
    2274:	9f 36       	cpi	r25, 0x6F	; 111
    2276:	61 f0       	breq	.+24     	; 0x2290 <vfprintf+0x260>
    2278:	90 37       	cpi	r25, 0x70	; 112
    227a:	20 f4       	brcc	.+8      	; 0x2284 <vfprintf+0x254>
    227c:	98 35       	cpi	r25, 0x58	; 88
    227e:	09 f0       	breq	.+2      	; 0x2282 <vfprintf+0x252>
    2280:	ac c0       	rjmp	.+344    	; 0x23da <vfprintf+0x3aa>
    2282:	0f c0       	rjmp	.+30     	; 0x22a2 <vfprintf+0x272>
    2284:	90 37       	cpi	r25, 0x70	; 112
    2286:	39 f0       	breq	.+14     	; 0x2296 <vfprintf+0x266>
    2288:	98 37       	cpi	r25, 0x78	; 120
    228a:	09 f0       	breq	.+2      	; 0x228e <vfprintf+0x25e>
    228c:	a6 c0       	rjmp	.+332    	; 0x23da <vfprintf+0x3aa>
    228e:	04 c0       	rjmp	.+8      	; 0x2298 <vfprintf+0x268>
    2290:	28 e0       	ldi	r18, 0x08	; 8
    2292:	30 e0       	ldi	r19, 0x00	; 0
    2294:	0a c0       	rjmp	.+20     	; 0x22aa <vfprintf+0x27a>
    2296:	10 61       	ori	r17, 0x10	; 16
    2298:	14 fd       	sbrc	r17, 4
    229a:	14 60       	ori	r17, 0x04	; 4
    229c:	20 e1       	ldi	r18, 0x10	; 16
    229e:	30 e0       	ldi	r19, 0x00	; 0
    22a0:	04 c0       	rjmp	.+8      	; 0x22aa <vfprintf+0x27a>
    22a2:	14 fd       	sbrc	r17, 4
    22a4:	16 60       	ori	r17, 0x06	; 6
    22a6:	20 e1       	ldi	r18, 0x10	; 16
    22a8:	32 e0       	ldi	r19, 0x02	; 2
    22aa:	17 ff       	sbrs	r17, 7
    22ac:	08 c0       	rjmp	.+16     	; 0x22be <vfprintf+0x28e>
    22ae:	f5 01       	movw	r30, r10
    22b0:	60 81       	ld	r22, Z
    22b2:	71 81       	ldd	r23, Z+1	; 0x01
    22b4:	82 81       	ldd	r24, Z+2	; 0x02
    22b6:	93 81       	ldd	r25, Z+3	; 0x03
    22b8:	44 e0       	ldi	r20, 0x04	; 4
    22ba:	50 e0       	ldi	r21, 0x00	; 0
    22bc:	08 c0       	rjmp	.+16     	; 0x22ce <vfprintf+0x29e>
    22be:	f5 01       	movw	r30, r10
    22c0:	80 81       	ld	r24, Z
    22c2:	91 81       	ldd	r25, Z+1	; 0x01
    22c4:	bc 01       	movw	r22, r24
    22c6:	80 e0       	ldi	r24, 0x00	; 0
    22c8:	90 e0       	ldi	r25, 0x00	; 0
    22ca:	42 e0       	ldi	r20, 0x02	; 2
    22cc:	50 e0       	ldi	r21, 0x00	; 0
    22ce:	a4 0e       	add	r10, r20
    22d0:	b5 1e       	adc	r11, r21
    22d2:	a1 01       	movw	r20, r2
    22d4:	0e 94 71 14 	call	0x28e2	; 0x28e2 <__ultoa_invert>
    22d8:	d8 2e       	mov	r13, r24
    22da:	d2 18       	sub	r13, r2
    22dc:	8f e7       	ldi	r24, 0x7F	; 127
    22de:	f8 2e       	mov	r15, r24
    22e0:	f1 22       	and	r15, r17
    22e2:	f6 fe       	sbrs	r15, 6
    22e4:	0b c0       	rjmp	.+22     	; 0x22fc <vfprintf+0x2cc>
    22e6:	5e ef       	ldi	r21, 0xFE	; 254
    22e8:	f5 22       	and	r15, r21
    22ea:	d9 14       	cp	r13, r9
    22ec:	38 f4       	brcc	.+14     	; 0x22fc <vfprintf+0x2cc>
    22ee:	f4 fe       	sbrs	r15, 4
    22f0:	07 c0       	rjmp	.+14     	; 0x2300 <vfprintf+0x2d0>
    22f2:	f2 fc       	sbrc	r15, 2
    22f4:	05 c0       	rjmp	.+10     	; 0x2300 <vfprintf+0x2d0>
    22f6:	8f ee       	ldi	r24, 0xEF	; 239
    22f8:	f8 22       	and	r15, r24
    22fa:	02 c0       	rjmp	.+4      	; 0x2300 <vfprintf+0x2d0>
    22fc:	1d 2d       	mov	r17, r13
    22fe:	01 c0       	rjmp	.+2      	; 0x2302 <vfprintf+0x2d2>
    2300:	19 2d       	mov	r17, r9
    2302:	f4 fe       	sbrs	r15, 4
    2304:	0d c0       	rjmp	.+26     	; 0x2320 <vfprintf+0x2f0>
    2306:	fe 01       	movw	r30, r28
    2308:	ed 0d       	add	r30, r13
    230a:	f1 1d       	adc	r31, r1
    230c:	80 81       	ld	r24, Z
    230e:	80 33       	cpi	r24, 0x30	; 48
    2310:	19 f4       	brne	.+6      	; 0x2318 <vfprintf+0x2e8>
    2312:	99 ee       	ldi	r25, 0xE9	; 233
    2314:	f9 22       	and	r15, r25
    2316:	08 c0       	rjmp	.+16     	; 0x2328 <vfprintf+0x2f8>
    2318:	1f 5f       	subi	r17, 0xFF	; 255
    231a:	f2 fe       	sbrs	r15, 2
    231c:	05 c0       	rjmp	.+10     	; 0x2328 <vfprintf+0x2f8>
    231e:	03 c0       	rjmp	.+6      	; 0x2326 <vfprintf+0x2f6>
    2320:	8f 2d       	mov	r24, r15
    2322:	86 78       	andi	r24, 0x86	; 134
    2324:	09 f0       	breq	.+2      	; 0x2328 <vfprintf+0x2f8>
    2326:	1f 5f       	subi	r17, 0xFF	; 255
    2328:	0f 2d       	mov	r16, r15
    232a:	f3 fc       	sbrc	r15, 3
    232c:	14 c0       	rjmp	.+40     	; 0x2356 <vfprintf+0x326>
    232e:	f0 fe       	sbrs	r15, 0
    2330:	0f c0       	rjmp	.+30     	; 0x2350 <vfprintf+0x320>
    2332:	1e 15       	cp	r17, r14
    2334:	10 f0       	brcs	.+4      	; 0x233a <vfprintf+0x30a>
    2336:	9d 2c       	mov	r9, r13
    2338:	0b c0       	rjmp	.+22     	; 0x2350 <vfprintf+0x320>
    233a:	9d 2c       	mov	r9, r13
    233c:	9e 0c       	add	r9, r14
    233e:	91 1a       	sub	r9, r17
    2340:	1e 2d       	mov	r17, r14
    2342:	06 c0       	rjmp	.+12     	; 0x2350 <vfprintf+0x320>
    2344:	80 e2       	ldi	r24, 0x20	; 32
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	b3 01       	movw	r22, r6
    234a:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    234e:	1f 5f       	subi	r17, 0xFF	; 255
    2350:	1e 15       	cp	r17, r14
    2352:	c0 f3       	brcs	.-16     	; 0x2344 <vfprintf+0x314>
    2354:	04 c0       	rjmp	.+8      	; 0x235e <vfprintf+0x32e>
    2356:	1e 15       	cp	r17, r14
    2358:	10 f4       	brcc	.+4      	; 0x235e <vfprintf+0x32e>
    235a:	e1 1a       	sub	r14, r17
    235c:	01 c0       	rjmp	.+2      	; 0x2360 <vfprintf+0x330>
    235e:	ee 24       	eor	r14, r14
    2360:	04 ff       	sbrs	r16, 4
    2362:	0f c0       	rjmp	.+30     	; 0x2382 <vfprintf+0x352>
    2364:	80 e3       	ldi	r24, 0x30	; 48
    2366:	90 e0       	ldi	r25, 0x00	; 0
    2368:	b3 01       	movw	r22, r6
    236a:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    236e:	02 ff       	sbrs	r16, 2
    2370:	1d c0       	rjmp	.+58     	; 0x23ac <vfprintf+0x37c>
    2372:	01 fd       	sbrc	r16, 1
    2374:	03 c0       	rjmp	.+6      	; 0x237c <vfprintf+0x34c>
    2376:	88 e7       	ldi	r24, 0x78	; 120
    2378:	90 e0       	ldi	r25, 0x00	; 0
    237a:	0e c0       	rjmp	.+28     	; 0x2398 <vfprintf+0x368>
    237c:	88 e5       	ldi	r24, 0x58	; 88
    237e:	90 e0       	ldi	r25, 0x00	; 0
    2380:	0b c0       	rjmp	.+22     	; 0x2398 <vfprintf+0x368>
    2382:	80 2f       	mov	r24, r16
    2384:	86 78       	andi	r24, 0x86	; 134
    2386:	91 f0       	breq	.+36     	; 0x23ac <vfprintf+0x37c>
    2388:	01 ff       	sbrs	r16, 1
    238a:	02 c0       	rjmp	.+4      	; 0x2390 <vfprintf+0x360>
    238c:	8b e2       	ldi	r24, 0x2B	; 43
    238e:	01 c0       	rjmp	.+2      	; 0x2392 <vfprintf+0x362>
    2390:	80 e2       	ldi	r24, 0x20	; 32
    2392:	f7 fc       	sbrc	r15, 7
    2394:	8d e2       	ldi	r24, 0x2D	; 45
    2396:	90 e0       	ldi	r25, 0x00	; 0
    2398:	b3 01       	movw	r22, r6
    239a:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    239e:	06 c0       	rjmp	.+12     	; 0x23ac <vfprintf+0x37c>
    23a0:	80 e3       	ldi	r24, 0x30	; 48
    23a2:	90 e0       	ldi	r25, 0x00	; 0
    23a4:	b3 01       	movw	r22, r6
    23a6:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    23aa:	9a 94       	dec	r9
    23ac:	d9 14       	cp	r13, r9
    23ae:	c0 f3       	brcs	.-16     	; 0x23a0 <vfprintf+0x370>
    23b0:	da 94       	dec	r13
    23b2:	f1 01       	movw	r30, r2
    23b4:	ed 0d       	add	r30, r13
    23b6:	f1 1d       	adc	r31, r1
    23b8:	80 81       	ld	r24, Z
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	b3 01       	movw	r22, r6
    23be:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    23c2:	dd 20       	and	r13, r13
    23c4:	a9 f7       	brne	.-22     	; 0x23b0 <vfprintf+0x380>
    23c6:	06 c0       	rjmp	.+12     	; 0x23d4 <vfprintf+0x3a4>
    23c8:	80 e2       	ldi	r24, 0x20	; 32
    23ca:	90 e0       	ldi	r25, 0x00	; 0
    23cc:	b3 01       	movw	r22, r6
    23ce:	0e 94 45 14 	call	0x288a	; 0x288a <fputc>
    23d2:	ea 94       	dec	r14
    23d4:	ee 20       	and	r14, r14
    23d6:	c1 f7       	brne	.-16     	; 0x23c8 <vfprintf+0x398>
    23d8:	43 ce       	rjmp	.-890    	; 0x2060 <vfprintf+0x30>
    23da:	f3 01       	movw	r30, r6
    23dc:	66 81       	ldd	r22, Z+6	; 0x06
    23de:	77 81       	ldd	r23, Z+7	; 0x07
    23e0:	cb 01       	movw	r24, r22
    23e2:	2b 96       	adiw	r28, 0x0b	; 11
    23e4:	e2 e1       	ldi	r30, 0x12	; 18
    23e6:	0c 94 b8 0f 	jmp	0x1f70	; 0x1f70 <__epilogue_restores__>

000023ea <dtoa_prf>:
    23ea:	a9 e0       	ldi	r26, 0x09	; 9
    23ec:	b0 e0       	ldi	r27, 0x00	; 0
    23ee:	eb ef       	ldi	r30, 0xFB	; 251
    23f0:	f1 e1       	ldi	r31, 0x11	; 17
    23f2:	0c 94 a0 0f 	jmp	0x1f40	; 0x1f40 <__prologue_saves__+0x8>
    23f6:	6a 01       	movw	r12, r20
    23f8:	12 2f       	mov	r17, r18
    23fa:	a0 2e       	mov	r10, r16
    23fc:	be 2c       	mov	r11, r14
    23fe:	2b e3       	ldi	r18, 0x3B	; 59
    2400:	20 17       	cp	r18, r16
    2402:	18 f4       	brcc	.+6      	; 0x240a <dtoa_prf+0x20>
    2404:	2c e3       	ldi	r18, 0x3C	; 60
    2406:	92 2e       	mov	r9, r18
    2408:	02 c0       	rjmp	.+4      	; 0x240e <dtoa_prf+0x24>
    240a:	90 2e       	mov	r9, r16
    240c:	93 94       	inc	r9
    240e:	ae 01       	movw	r20, r28
    2410:	4f 5f       	subi	r20, 0xFF	; 255
    2412:	5f 4f       	sbci	r21, 0xFF	; 255
    2414:	27 e0       	ldi	r18, 0x07	; 7
    2416:	09 2d       	mov	r16, r9
    2418:	0e 94 57 13 	call	0x26ae	; 0x26ae <__ftoa_engine>
    241c:	bc 01       	movw	r22, r24
    241e:	89 81       	ldd	r24, Y+1	; 0x01
    2420:	e8 2e       	mov	r14, r24
    2422:	ff 24       	eor	r15, r15
    2424:	c7 01       	movw	r24, r14
    2426:	89 70       	andi	r24, 0x09	; 9
    2428:	90 70       	andi	r25, 0x00	; 0
    242a:	01 97       	sbiw	r24, 0x01	; 1
    242c:	11 f4       	brne	.+4      	; 0x2432 <dtoa_prf+0x48>
    242e:	ad e2       	ldi	r26, 0x2D	; 45
    2430:	09 c0       	rjmp	.+18     	; 0x2444 <dtoa_prf+0x5a>
    2432:	b1 fe       	sbrs	r11, 1
    2434:	02 c0       	rjmp	.+4      	; 0x243a <dtoa_prf+0x50>
    2436:	ab e2       	ldi	r26, 0x2B	; 43
    2438:	05 c0       	rjmp	.+10     	; 0x2444 <dtoa_prf+0x5a>
    243a:	b0 fc       	sbrc	r11, 0
    243c:	02 c0       	rjmp	.+4      	; 0x2442 <dtoa_prf+0x58>
    243e:	a0 e0       	ldi	r26, 0x00	; 0
    2440:	01 c0       	rjmp	.+2      	; 0x2444 <dtoa_prf+0x5a>
    2442:	a0 e2       	ldi	r26, 0x20	; 32
    2444:	e3 fe       	sbrs	r14, 3
    2446:	3b c0       	rjmp	.+118    	; 0x24be <dtoa_prf+0xd4>
    2448:	aa 23       	and	r26, r26
    244a:	11 f4       	brne	.+4      	; 0x2450 <dtoa_prf+0x66>
    244c:	23 e0       	ldi	r18, 0x03	; 3
    244e:	01 c0       	rjmp	.+2      	; 0x2452 <dtoa_prf+0x68>
    2450:	24 e0       	ldi	r18, 0x04	; 4
    2452:	21 17       	cp	r18, r17
    2454:	10 f0       	brcs	.+4      	; 0x245a <dtoa_prf+0x70>
    2456:	20 e0       	ldi	r18, 0x00	; 0
    2458:	02 c0       	rjmp	.+4      	; 0x245e <dtoa_prf+0x74>
    245a:	12 1b       	sub	r17, r18
    245c:	21 2f       	mov	r18, r17
    245e:	eb 2c       	mov	r14, r11
    2460:	b4 fe       	sbrs	r11, 4
    2462:	02 c0       	rjmp	.+4      	; 0x2468 <dtoa_prf+0x7e>
    2464:	32 2f       	mov	r19, r18
    2466:	0a c0       	rjmp	.+20     	; 0x247c <dtoa_prf+0x92>
    2468:	f6 01       	movw	r30, r12
    246a:	32 2f       	mov	r19, r18
    246c:	80 e2       	ldi	r24, 0x20	; 32
    246e:	02 c0       	rjmp	.+4      	; 0x2474 <dtoa_prf+0x8a>
    2470:	81 93       	st	Z+, r24
    2472:	31 50       	subi	r19, 0x01	; 1
    2474:	33 23       	and	r19, r19
    2476:	e1 f7       	brne	.-8      	; 0x2470 <dtoa_prf+0x86>
    2478:	c2 0e       	add	r12, r18
    247a:	d1 1c       	adc	r13, r1
    247c:	aa 23       	and	r26, r26
    247e:	19 f0       	breq	.+6      	; 0x2486 <dtoa_prf+0x9c>
    2480:	f6 01       	movw	r30, r12
    2482:	a1 93       	st	Z+, r26
    2484:	6f 01       	movw	r12, r30
    2486:	f6 01       	movw	r30, r12
    2488:	31 96       	adiw	r30, 0x01	; 1
    248a:	e2 fe       	sbrs	r14, 2
    248c:	05 c0       	rjmp	.+10     	; 0x2498 <dtoa_prf+0xae>
    248e:	9e e4       	ldi	r25, 0x4E	; 78
    2490:	d6 01       	movw	r26, r12
    2492:	9c 93       	st	X, r25
    2494:	81 e4       	ldi	r24, 0x41	; 65
    2496:	04 c0       	rjmp	.+8      	; 0x24a0 <dtoa_prf+0xb6>
    2498:	9e e6       	ldi	r25, 0x6E	; 110
    249a:	d6 01       	movw	r26, r12
    249c:	9c 93       	st	X, r25
    249e:	81 e6       	ldi	r24, 0x61	; 97
    24a0:	11 96       	adiw	r26, 0x01	; 1
    24a2:	8c 93       	st	X, r24
    24a4:	91 83       	std	Z+1, r25	; 0x01
    24a6:	32 96       	adiw	r30, 0x02	; 2
    24a8:	df 01       	movw	r26, r30
    24aa:	83 2f       	mov	r24, r19
    24ac:	90 e2       	ldi	r25, 0x20	; 32
    24ae:	02 c0       	rjmp	.+4      	; 0x24b4 <dtoa_prf+0xca>
    24b0:	9d 93       	st	X+, r25
    24b2:	81 50       	subi	r24, 0x01	; 1
    24b4:	88 23       	and	r24, r24
    24b6:	e1 f7       	brne	.-8      	; 0x24b0 <dtoa_prf+0xc6>
    24b8:	e3 0f       	add	r30, r19
    24ba:	f1 1d       	adc	r31, r1
    24bc:	40 c0       	rjmp	.+128    	; 0x253e <dtoa_prf+0x154>
    24be:	e2 fe       	sbrs	r14, 2
    24c0:	42 c0       	rjmp	.+132    	; 0x2546 <dtoa_prf+0x15c>
    24c2:	aa 23       	and	r26, r26
    24c4:	11 f4       	brne	.+4      	; 0x24ca <dtoa_prf+0xe0>
    24c6:	23 e0       	ldi	r18, 0x03	; 3
    24c8:	01 c0       	rjmp	.+2      	; 0x24cc <dtoa_prf+0xe2>
    24ca:	24 e0       	ldi	r18, 0x04	; 4
    24cc:	21 17       	cp	r18, r17
    24ce:	10 f0       	brcs	.+4      	; 0x24d4 <dtoa_prf+0xea>
    24d0:	20 e0       	ldi	r18, 0x00	; 0
    24d2:	02 c0       	rjmp	.+4      	; 0x24d8 <dtoa_prf+0xee>
    24d4:	12 1b       	sub	r17, r18
    24d6:	21 2f       	mov	r18, r17
    24d8:	eb 2c       	mov	r14, r11
    24da:	b4 fe       	sbrs	r11, 4
    24dc:	02 c0       	rjmp	.+4      	; 0x24e2 <dtoa_prf+0xf8>
    24de:	92 2f       	mov	r25, r18
    24e0:	0a c0       	rjmp	.+20     	; 0x24f6 <dtoa_prf+0x10c>
    24e2:	f6 01       	movw	r30, r12
    24e4:	92 2f       	mov	r25, r18
    24e6:	80 e2       	ldi	r24, 0x20	; 32
    24e8:	02 c0       	rjmp	.+4      	; 0x24ee <dtoa_prf+0x104>
    24ea:	81 93       	st	Z+, r24
    24ec:	91 50       	subi	r25, 0x01	; 1
    24ee:	99 23       	and	r25, r25
    24f0:	e1 f7       	brne	.-8      	; 0x24ea <dtoa_prf+0x100>
    24f2:	c2 0e       	add	r12, r18
    24f4:	d1 1c       	adc	r13, r1
    24f6:	aa 23       	and	r26, r26
    24f8:	19 f0       	breq	.+6      	; 0x2500 <dtoa_prf+0x116>
    24fa:	f6 01       	movw	r30, r12
    24fc:	a1 93       	st	Z+, r26
    24fe:	6f 01       	movw	r12, r30
    2500:	f6 01       	movw	r30, r12
    2502:	31 96       	adiw	r30, 0x01	; 1
    2504:	e2 fe       	sbrs	r14, 2
    2506:	08 c0       	rjmp	.+16     	; 0x2518 <dtoa_prf+0x12e>
    2508:	89 e4       	ldi	r24, 0x49	; 73
    250a:	d6 01       	movw	r26, r12
    250c:	8c 93       	st	X, r24
    250e:	8e e4       	ldi	r24, 0x4E	; 78
    2510:	11 96       	adiw	r26, 0x01	; 1
    2512:	8c 93       	st	X, r24
    2514:	86 e4       	ldi	r24, 0x46	; 70
    2516:	07 c0       	rjmp	.+14     	; 0x2526 <dtoa_prf+0x13c>
    2518:	89 e6       	ldi	r24, 0x69	; 105
    251a:	d6 01       	movw	r26, r12
    251c:	8c 93       	st	X, r24
    251e:	8e e6       	ldi	r24, 0x6E	; 110
    2520:	11 96       	adiw	r26, 0x01	; 1
    2522:	8c 93       	st	X, r24
    2524:	86 e6       	ldi	r24, 0x66	; 102
    2526:	81 83       	std	Z+1, r24	; 0x01
    2528:	32 96       	adiw	r30, 0x02	; 2
    252a:	df 01       	movw	r26, r30
    252c:	89 2f       	mov	r24, r25
    252e:	20 e2       	ldi	r18, 0x20	; 32
    2530:	02 c0       	rjmp	.+4      	; 0x2536 <dtoa_prf+0x14c>
    2532:	2d 93       	st	X+, r18
    2534:	81 50       	subi	r24, 0x01	; 1
    2536:	88 23       	and	r24, r24
    2538:	e1 f7       	brne	.-8      	; 0x2532 <dtoa_prf+0x148>
    253a:	e9 0f       	add	r30, r25
    253c:	f1 1d       	adc	r31, r1
    253e:	10 82       	st	Z, r1
    2540:	2e ef       	ldi	r18, 0xFE	; 254
    2542:	3f ef       	ldi	r19, 0xFF	; 255
    2544:	af c0       	rjmp	.+350    	; 0x26a4 <dtoa_prf+0x2ba>
    2546:	16 16       	cp	r1, r22
    2548:	17 06       	cpc	r1, r23
    254a:	1c f0       	brlt	.+6      	; 0x2552 <dtoa_prf+0x168>
    254c:	41 e0       	ldi	r20, 0x01	; 1
    254e:	50 e0       	ldi	r21, 0x00	; 0
    2550:	03 c0       	rjmp	.+6      	; 0x2558 <dtoa_prf+0x16e>
    2552:	ab 01       	movw	r20, r22
    2554:	4f 5f       	subi	r20, 0xFF	; 255
    2556:	5f 4f       	sbci	r21, 0xFF	; 255
    2558:	aa 20       	and	r10, r10
    255a:	19 f4       	brne	.+6      	; 0x2562 <dtoa_prf+0x178>
    255c:	80 e0       	ldi	r24, 0x00	; 0
    255e:	90 e0       	ldi	r25, 0x00	; 0
    2560:	03 c0       	rjmp	.+6      	; 0x2568 <dtoa_prf+0x17e>
    2562:	8a 2d       	mov	r24, r10
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	01 96       	adiw	r24, 0x01	; 1
    2568:	20 e0       	ldi	r18, 0x00	; 0
    256a:	30 e0       	ldi	r19, 0x00	; 0
    256c:	aa 23       	and	r26, r26
    256e:	11 f0       	breq	.+4      	; 0x2574 <dtoa_prf+0x18a>
    2570:	21 e0       	ldi	r18, 0x01	; 1
    2572:	30 e0       	ldi	r19, 0x00	; 0
    2574:	24 0f       	add	r18, r20
    2576:	35 1f       	adc	r19, r21
    2578:	28 0f       	add	r18, r24
    257a:	39 1f       	adc	r19, r25
    257c:	81 2f       	mov	r24, r17
    257e:	90 e0       	ldi	r25, 0x00	; 0
    2580:	28 17       	cp	r18, r24
    2582:	39 07       	cpc	r19, r25
    2584:	14 f0       	brlt	.+4      	; 0x258a <dtoa_prf+0x1a0>
    2586:	20 e0       	ldi	r18, 0x00	; 0
    2588:	02 c0       	rjmp	.+4      	; 0x258e <dtoa_prf+0x1a4>
    258a:	12 1b       	sub	r17, r18
    258c:	21 2f       	mov	r18, r17
    258e:	4b 2d       	mov	r20, r11
    2590:	50 e0       	ldi	r21, 0x00	; 0
    2592:	ca 01       	movw	r24, r20
    2594:	80 71       	andi	r24, 0x10	; 16
    2596:	90 70       	andi	r25, 0x00	; 0
    2598:	b4 fc       	sbrc	r11, 4
    259a:	0d c0       	rjmp	.+26     	; 0x25b6 <dtoa_prf+0x1cc>
    259c:	b3 fc       	sbrc	r11, 3
    259e:	0b c0       	rjmp	.+22     	; 0x25b6 <dtoa_prf+0x1cc>
    25a0:	f6 01       	movw	r30, r12
    25a2:	32 2f       	mov	r19, r18
    25a4:	40 e2       	ldi	r20, 0x20	; 32
    25a6:	02 c0       	rjmp	.+4      	; 0x25ac <dtoa_prf+0x1c2>
    25a8:	41 93       	st	Z+, r20
    25aa:	31 50       	subi	r19, 0x01	; 1
    25ac:	33 23       	and	r19, r19
    25ae:	e1 f7       	brne	.-8      	; 0x25a8 <dtoa_prf+0x1be>
    25b0:	c2 0e       	add	r12, r18
    25b2:	d1 1c       	adc	r13, r1
    25b4:	01 c0       	rjmp	.+2      	; 0x25b8 <dtoa_prf+0x1ce>
    25b6:	32 2f       	mov	r19, r18
    25b8:	aa 23       	and	r26, r26
    25ba:	19 f0       	breq	.+6      	; 0x25c2 <dtoa_prf+0x1d8>
    25bc:	f6 01       	movw	r30, r12
    25be:	a1 93       	st	Z+, r26
    25c0:	6f 01       	movw	r12, r30
    25c2:	89 2b       	or	r24, r25
    25c4:	11 f0       	breq	.+4      	; 0x25ca <dtoa_prf+0x1e0>
    25c6:	13 2f       	mov	r17, r19
    25c8:	0a c0       	rjmp	.+20     	; 0x25de <dtoa_prf+0x1f4>
    25ca:	f6 01       	movw	r30, r12
    25cc:	13 2f       	mov	r17, r19
    25ce:	80 e3       	ldi	r24, 0x30	; 48
    25d0:	02 c0       	rjmp	.+4      	; 0x25d6 <dtoa_prf+0x1ec>
    25d2:	81 93       	st	Z+, r24
    25d4:	11 50       	subi	r17, 0x01	; 1
    25d6:	11 23       	and	r17, r17
    25d8:	e1 f7       	brne	.-8      	; 0x25d2 <dtoa_prf+0x1e8>
    25da:	c3 0e       	add	r12, r19
    25dc:	d1 1c       	adc	r13, r1
    25de:	09 2d       	mov	r16, r9
    25e0:	06 0f       	add	r16, r22
    25e2:	ba 80       	ldd	r11, Y+2	; 0x02
    25e4:	90 e1       	ldi	r25, 0x10	; 16
    25e6:	89 2e       	mov	r8, r25
    25e8:	91 2c       	mov	r9, r1
    25ea:	8e 20       	and	r8, r14
    25ec:	9f 20       	and	r9, r15
    25ee:	e4 fe       	sbrs	r14, 4
    25f0:	04 c0       	rjmp	.+8      	; 0x25fa <dtoa_prf+0x210>
    25f2:	f1 e3       	ldi	r31, 0x31	; 49
    25f4:	bf 16       	cp	r11, r31
    25f6:	09 f4       	brne	.+2      	; 0x25fa <dtoa_prf+0x210>
    25f8:	01 50       	subi	r16, 0x01	; 1
    25fa:	10 16       	cp	r1, r16
    25fc:	14 f0       	brlt	.+4      	; 0x2602 <dtoa_prf+0x218>
    25fe:	01 e0       	ldi	r16, 0x01	; 1
    2600:	03 c0       	rjmp	.+6      	; 0x2608 <dtoa_prf+0x21e>
    2602:	09 30       	cpi	r16, 0x09	; 9
    2604:	08 f0       	brcs	.+2      	; 0x2608 <dtoa_prf+0x21e>
    2606:	08 e0       	ldi	r16, 0x08	; 8
    2608:	9b 01       	movw	r18, r22
    260a:	77 ff       	sbrs	r23, 7
    260c:	02 c0       	rjmp	.+4      	; 0x2612 <dtoa_prf+0x228>
    260e:	20 e0       	ldi	r18, 0x00	; 0
    2610:	30 e0       	ldi	r19, 0x00	; 0
    2612:	cb 01       	movw	r24, r22
    2614:	01 96       	adiw	r24, 0x01	; 1
    2616:	82 1b       	sub	r24, r18
    2618:	93 0b       	sbc	r25, r19
    261a:	fe 01       	movw	r30, r28
    261c:	31 96       	adiw	r30, 0x01	; 1
    261e:	e8 0f       	add	r30, r24
    2620:	f9 1f       	adc	r31, r25
    2622:	8e e2       	ldi	r24, 0x2E	; 46
    2624:	f8 2e       	mov	r15, r24
    2626:	3b 01       	movw	r6, r22
    2628:	60 1a       	sub	r6, r16
    262a:	71 08       	sbc	r7, r1
    262c:	8a 2d       	mov	r24, r10
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	44 27       	eor	r20, r20
    2632:	55 27       	eor	r21, r21
    2634:	48 1b       	sub	r20, r24
    2636:	59 0b       	sbc	r21, r25
    2638:	8f ef       	ldi	r24, 0xFF	; 255
    263a:	2f 3f       	cpi	r18, 0xFF	; 255
    263c:	38 07       	cpc	r19, r24
    263e:	19 f4       	brne	.+6      	; 0x2646 <dtoa_prf+0x25c>
    2640:	d6 01       	movw	r26, r12
    2642:	fd 92       	st	X+, r15
    2644:	6d 01       	movw	r12, r26
    2646:	62 17       	cp	r22, r18
    2648:	73 07       	cpc	r23, r19
    264a:	2c f0       	brlt	.+10     	; 0x2656 <dtoa_prf+0x26c>
    264c:	62 16       	cp	r6, r18
    264e:	73 06       	cpc	r7, r19
    2650:	14 f4       	brge	.+4      	; 0x2656 <dtoa_prf+0x26c>
    2652:	80 81       	ld	r24, Z
    2654:	01 c0       	rjmp	.+2      	; 0x2658 <dtoa_prf+0x26e>
    2656:	80 e3       	ldi	r24, 0x30	; 48
    2658:	21 50       	subi	r18, 0x01	; 1
    265a:	30 40       	sbci	r19, 0x00	; 0
    265c:	31 96       	adiw	r30, 0x01	; 1
    265e:	24 17       	cp	r18, r20
    2660:	35 07       	cpc	r19, r21
    2662:	24 f0       	brlt	.+8      	; 0x266c <dtoa_prf+0x282>
    2664:	d6 01       	movw	r26, r12
    2666:	8d 93       	st	X+, r24
    2668:	6d 01       	movw	r12, r26
    266a:	e6 cf       	rjmp	.-52     	; 0x2638 <dtoa_prf+0x24e>
    266c:	26 17       	cp	r18, r22
    266e:	37 07       	cpc	r19, r23
    2670:	49 f4       	brne	.+18     	; 0x2684 <dtoa_prf+0x29a>
    2672:	b5 e3       	ldi	r27, 0x35	; 53
    2674:	bb 15       	cp	r27, r11
    2676:	28 f0       	brcs	.+10     	; 0x2682 <dtoa_prf+0x298>
    2678:	bb 16       	cp	r11, r27
    267a:	21 f4       	brne	.+8      	; 0x2684 <dtoa_prf+0x29a>
    267c:	81 14       	cp	r8, r1
    267e:	91 04       	cpc	r9, r1
    2680:	09 f4       	brne	.+2      	; 0x2684 <dtoa_prf+0x29a>
    2682:	81 e3       	ldi	r24, 0x31	; 49
    2684:	f6 01       	movw	r30, r12
    2686:	81 93       	st	Z+, r24
    2688:	d6 01       	movw	r26, r12
    268a:	81 2f       	mov	r24, r17
    268c:	90 e2       	ldi	r25, 0x20	; 32
    268e:	02 c0       	rjmp	.+4      	; 0x2694 <dtoa_prf+0x2aa>
    2690:	9c 93       	st	X, r25
    2692:	81 50       	subi	r24, 0x01	; 1
    2694:	11 96       	adiw	r26, 0x01	; 1
    2696:	88 23       	and	r24, r24
    2698:	d9 f7       	brne	.-10     	; 0x2690 <dtoa_prf+0x2a6>
    269a:	e1 0f       	add	r30, r17
    269c:	f1 1d       	adc	r31, r1
    269e:	10 82       	st	Z, r1
    26a0:	20 e0       	ldi	r18, 0x00	; 0
    26a2:	30 e0       	ldi	r19, 0x00	; 0
    26a4:	c9 01       	movw	r24, r18
    26a6:	29 96       	adiw	r28, 0x09	; 9
    26a8:	ee e0       	ldi	r30, 0x0E	; 14
    26aa:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <__epilogue_restores__+0x8>

000026ae <__ftoa_engine>:
    26ae:	28 30       	cpi	r18, 0x08	; 8
    26b0:	08 f0       	brcs	.+2      	; 0x26b4 <__ftoa_engine+0x6>
    26b2:	27 e0       	ldi	r18, 0x07	; 7
    26b4:	33 27       	eor	r19, r19
    26b6:	da 01       	movw	r26, r20
    26b8:	99 0f       	add	r25, r25
    26ba:	31 1d       	adc	r19, r1
    26bc:	87 fd       	sbrc	r24, 7
    26be:	91 60       	ori	r25, 0x01	; 1
    26c0:	00 96       	adiw	r24, 0x00	; 0
    26c2:	61 05       	cpc	r22, r1
    26c4:	71 05       	cpc	r23, r1
    26c6:	39 f4       	brne	.+14     	; 0x26d6 <__ftoa_engine+0x28>
    26c8:	32 60       	ori	r19, 0x02	; 2
    26ca:	2e 5f       	subi	r18, 0xFE	; 254
    26cc:	3d 93       	st	X+, r19
    26ce:	30 e3       	ldi	r19, 0x30	; 48
    26d0:	2a 95       	dec	r18
    26d2:	e1 f7       	brne	.-8      	; 0x26cc <__ftoa_engine+0x1e>
    26d4:	08 95       	ret
    26d6:	9f 3f       	cpi	r25, 0xFF	; 255
    26d8:	30 f0       	brcs	.+12     	; 0x26e6 <__ftoa_engine+0x38>
    26da:	80 38       	cpi	r24, 0x80	; 128
    26dc:	71 05       	cpc	r23, r1
    26de:	61 05       	cpc	r22, r1
    26e0:	09 f0       	breq	.+2      	; 0x26e4 <__ftoa_engine+0x36>
    26e2:	3c 5f       	subi	r19, 0xFC	; 252
    26e4:	3c 5f       	subi	r19, 0xFC	; 252
    26e6:	3d 93       	st	X+, r19
    26e8:	91 30       	cpi	r25, 0x01	; 1
    26ea:	08 f0       	brcs	.+2      	; 0x26ee <__ftoa_engine+0x40>
    26ec:	80 68       	ori	r24, 0x80	; 128
    26ee:	91 1d       	adc	r25, r1
    26f0:	df 93       	push	r29
    26f2:	cf 93       	push	r28
    26f4:	1f 93       	push	r17
    26f6:	0f 93       	push	r16
    26f8:	ff 92       	push	r15
    26fa:	ef 92       	push	r14
    26fc:	19 2f       	mov	r17, r25
    26fe:	98 7f       	andi	r25, 0xF8	; 248
    2700:	96 95       	lsr	r25
    2702:	e9 2f       	mov	r30, r25
    2704:	96 95       	lsr	r25
    2706:	96 95       	lsr	r25
    2708:	e9 0f       	add	r30, r25
    270a:	ff 27       	eor	r31, r31
    270c:	e2 55       	subi	r30, 0x52	; 82
    270e:	ff 4f       	sbci	r31, 0xFF	; 255
    2710:	99 27       	eor	r25, r25
    2712:	33 27       	eor	r19, r19
    2714:	ee 24       	eor	r14, r14
    2716:	ff 24       	eor	r15, r15
    2718:	a7 01       	movw	r20, r14
    271a:	e7 01       	movw	r28, r14
    271c:	05 90       	lpm	r0, Z+
    271e:	08 94       	sec
    2720:	07 94       	ror	r0
    2722:	28 f4       	brcc	.+10     	; 0x272e <__ftoa_engine+0x80>
    2724:	36 0f       	add	r19, r22
    2726:	e7 1e       	adc	r14, r23
    2728:	f8 1e       	adc	r15, r24
    272a:	49 1f       	adc	r20, r25
    272c:	51 1d       	adc	r21, r1
    272e:	66 0f       	add	r22, r22
    2730:	77 1f       	adc	r23, r23
    2732:	88 1f       	adc	r24, r24
    2734:	99 1f       	adc	r25, r25
    2736:	06 94       	lsr	r0
    2738:	a1 f7       	brne	.-24     	; 0x2722 <__ftoa_engine+0x74>
    273a:	05 90       	lpm	r0, Z+
    273c:	07 94       	ror	r0
    273e:	28 f4       	brcc	.+10     	; 0x274a <__ftoa_engine+0x9c>
    2740:	e7 0e       	add	r14, r23
    2742:	f8 1e       	adc	r15, r24
    2744:	49 1f       	adc	r20, r25
    2746:	56 1f       	adc	r21, r22
    2748:	c1 1d       	adc	r28, r1
    274a:	77 0f       	add	r23, r23
    274c:	88 1f       	adc	r24, r24
    274e:	99 1f       	adc	r25, r25
    2750:	66 1f       	adc	r22, r22
    2752:	06 94       	lsr	r0
    2754:	a1 f7       	brne	.-24     	; 0x273e <__ftoa_engine+0x90>
    2756:	05 90       	lpm	r0, Z+
    2758:	07 94       	ror	r0
    275a:	28 f4       	brcc	.+10     	; 0x2766 <__ftoa_engine+0xb8>
    275c:	f8 0e       	add	r15, r24
    275e:	49 1f       	adc	r20, r25
    2760:	56 1f       	adc	r21, r22
    2762:	c7 1f       	adc	r28, r23
    2764:	d1 1d       	adc	r29, r1
    2766:	88 0f       	add	r24, r24
    2768:	99 1f       	adc	r25, r25
    276a:	66 1f       	adc	r22, r22
    276c:	77 1f       	adc	r23, r23
    276e:	06 94       	lsr	r0
    2770:	a1 f7       	brne	.-24     	; 0x275a <__ftoa_engine+0xac>
    2772:	05 90       	lpm	r0, Z+
    2774:	07 94       	ror	r0
    2776:	20 f4       	brcc	.+8      	; 0x2780 <__ftoa_engine+0xd2>
    2778:	49 0f       	add	r20, r25
    277a:	56 1f       	adc	r21, r22
    277c:	c7 1f       	adc	r28, r23
    277e:	d8 1f       	adc	r29, r24
    2780:	99 0f       	add	r25, r25
    2782:	66 1f       	adc	r22, r22
    2784:	77 1f       	adc	r23, r23
    2786:	88 1f       	adc	r24, r24
    2788:	06 94       	lsr	r0
    278a:	a9 f7       	brne	.-22     	; 0x2776 <__ftoa_engine+0xc8>
    278c:	84 91       	lpm	r24, Z+
    278e:	10 95       	com	r17
    2790:	17 70       	andi	r17, 0x07	; 7
    2792:	41 f0       	breq	.+16     	; 0x27a4 <__ftoa_engine+0xf6>
    2794:	d6 95       	lsr	r29
    2796:	c7 95       	ror	r28
    2798:	57 95       	ror	r21
    279a:	47 95       	ror	r20
    279c:	f7 94       	ror	r15
    279e:	e7 94       	ror	r14
    27a0:	1a 95       	dec	r17
    27a2:	c1 f7       	brne	.-16     	; 0x2794 <__ftoa_engine+0xe6>
    27a4:	e4 e5       	ldi	r30, 0x54	; 84
    27a6:	f0 e0       	ldi	r31, 0x00	; 0
    27a8:	68 94       	set
    27aa:	15 90       	lpm	r1, Z+
    27ac:	15 91       	lpm	r17, Z+
    27ae:	35 91       	lpm	r19, Z+
    27b0:	65 91       	lpm	r22, Z+
    27b2:	95 91       	lpm	r25, Z+
    27b4:	05 90       	lpm	r0, Z+
    27b6:	7f e2       	ldi	r23, 0x2F	; 47
    27b8:	73 95       	inc	r23
    27ba:	e1 18       	sub	r14, r1
    27bc:	f1 0a       	sbc	r15, r17
    27be:	43 0b       	sbc	r20, r19
    27c0:	56 0b       	sbc	r21, r22
    27c2:	c9 0b       	sbc	r28, r25
    27c4:	d0 09       	sbc	r29, r0
    27c6:	c0 f7       	brcc	.-16     	; 0x27b8 <__ftoa_engine+0x10a>
    27c8:	e1 0c       	add	r14, r1
    27ca:	f1 1e       	adc	r15, r17
    27cc:	43 1f       	adc	r20, r19
    27ce:	56 1f       	adc	r21, r22
    27d0:	c9 1f       	adc	r28, r25
    27d2:	d0 1d       	adc	r29, r0
    27d4:	7e f4       	brtc	.+30     	; 0x27f4 <__ftoa_engine+0x146>
    27d6:	70 33       	cpi	r23, 0x30	; 48
    27d8:	11 f4       	brne	.+4      	; 0x27de <__ftoa_engine+0x130>
    27da:	8a 95       	dec	r24
    27dc:	e6 cf       	rjmp	.-52     	; 0x27aa <__ftoa_engine+0xfc>
    27de:	e8 94       	clt
    27e0:	01 50       	subi	r16, 0x01	; 1
    27e2:	30 f0       	brcs	.+12     	; 0x27f0 <__ftoa_engine+0x142>
    27e4:	08 0f       	add	r16, r24
    27e6:	0a f4       	brpl	.+2      	; 0x27ea <__ftoa_engine+0x13c>
    27e8:	00 27       	eor	r16, r16
    27ea:	02 17       	cp	r16, r18
    27ec:	08 f4       	brcc	.+2      	; 0x27f0 <__ftoa_engine+0x142>
    27ee:	20 2f       	mov	r18, r16
    27f0:	23 95       	inc	r18
    27f2:	02 2f       	mov	r16, r18
    27f4:	7a 33       	cpi	r23, 0x3A	; 58
    27f6:	28 f0       	brcs	.+10     	; 0x2802 <__ftoa_engine+0x154>
    27f8:	79 e3       	ldi	r23, 0x39	; 57
    27fa:	7d 93       	st	X+, r23
    27fc:	2a 95       	dec	r18
    27fe:	e9 f7       	brne	.-6      	; 0x27fa <__ftoa_engine+0x14c>
    2800:	10 c0       	rjmp	.+32     	; 0x2822 <__ftoa_engine+0x174>
    2802:	7d 93       	st	X+, r23
    2804:	2a 95       	dec	r18
    2806:	89 f6       	brne	.-94     	; 0x27aa <__ftoa_engine+0xfc>
    2808:	06 94       	lsr	r0
    280a:	97 95       	ror	r25
    280c:	67 95       	ror	r22
    280e:	37 95       	ror	r19
    2810:	17 95       	ror	r17
    2812:	17 94       	ror	r1
    2814:	e1 18       	sub	r14, r1
    2816:	f1 0a       	sbc	r15, r17
    2818:	43 0b       	sbc	r20, r19
    281a:	56 0b       	sbc	r21, r22
    281c:	c9 0b       	sbc	r28, r25
    281e:	d0 09       	sbc	r29, r0
    2820:	98 f0       	brcs	.+38     	; 0x2848 <__ftoa_engine+0x19a>
    2822:	23 95       	inc	r18
    2824:	7e 91       	ld	r23, -X
    2826:	73 95       	inc	r23
    2828:	7a 33       	cpi	r23, 0x3A	; 58
    282a:	08 f0       	brcs	.+2      	; 0x282e <__ftoa_engine+0x180>
    282c:	70 e3       	ldi	r23, 0x30	; 48
    282e:	7c 93       	st	X, r23
    2830:	20 13       	cpse	r18, r16
    2832:	b8 f7       	brcc	.-18     	; 0x2822 <__ftoa_engine+0x174>
    2834:	7e 91       	ld	r23, -X
    2836:	70 61       	ori	r23, 0x10	; 16
    2838:	7d 93       	st	X+, r23
    283a:	30 f0       	brcs	.+12     	; 0x2848 <__ftoa_engine+0x19a>
    283c:	83 95       	inc	r24
    283e:	71 e3       	ldi	r23, 0x31	; 49
    2840:	7d 93       	st	X+, r23
    2842:	70 e3       	ldi	r23, 0x30	; 48
    2844:	2a 95       	dec	r18
    2846:	e1 f7       	brne	.-8      	; 0x2840 <__ftoa_engine+0x192>
    2848:	11 24       	eor	r1, r1
    284a:	ef 90       	pop	r14
    284c:	ff 90       	pop	r15
    284e:	0f 91       	pop	r16
    2850:	1f 91       	pop	r17
    2852:	cf 91       	pop	r28
    2854:	df 91       	pop	r29
    2856:	99 27       	eor	r25, r25
    2858:	87 fd       	sbrc	r24, 7
    285a:	90 95       	com	r25
    285c:	08 95       	ret

0000285e <strnlen_P>:
    285e:	fc 01       	movw	r30, r24
    2860:	05 90       	lpm	r0, Z+
    2862:	61 50       	subi	r22, 0x01	; 1
    2864:	70 40       	sbci	r23, 0x00	; 0
    2866:	01 10       	cpse	r0, r1
    2868:	d8 f7       	brcc	.-10     	; 0x2860 <strnlen_P+0x2>
    286a:	80 95       	com	r24
    286c:	90 95       	com	r25
    286e:	8e 0f       	add	r24, r30
    2870:	9f 1f       	adc	r25, r31
    2872:	08 95       	ret

00002874 <strnlen>:
    2874:	fc 01       	movw	r30, r24
    2876:	61 50       	subi	r22, 0x01	; 1
    2878:	70 40       	sbci	r23, 0x00	; 0
    287a:	01 90       	ld	r0, Z+
    287c:	01 10       	cpse	r0, r1
    287e:	d8 f7       	brcc	.-10     	; 0x2876 <strnlen+0x2>
    2880:	80 95       	com	r24
    2882:	90 95       	com	r25
    2884:	8e 0f       	add	r24, r30
    2886:	9f 1f       	adc	r25, r31
    2888:	08 95       	ret

0000288a <fputc>:
    288a:	0f 93       	push	r16
    288c:	1f 93       	push	r17
    288e:	cf 93       	push	r28
    2890:	df 93       	push	r29
    2892:	8c 01       	movw	r16, r24
    2894:	eb 01       	movw	r28, r22
    2896:	8b 81       	ldd	r24, Y+3	; 0x03
    2898:	81 ff       	sbrs	r24, 1
    289a:	1b c0       	rjmp	.+54     	; 0x28d2 <fputc+0x48>
    289c:	82 ff       	sbrs	r24, 2
    289e:	0d c0       	rjmp	.+26     	; 0x28ba <fputc+0x30>
    28a0:	2e 81       	ldd	r18, Y+6	; 0x06
    28a2:	3f 81       	ldd	r19, Y+7	; 0x07
    28a4:	8c 81       	ldd	r24, Y+4	; 0x04
    28a6:	9d 81       	ldd	r25, Y+5	; 0x05
    28a8:	28 17       	cp	r18, r24
    28aa:	39 07       	cpc	r19, r25
    28ac:	64 f4       	brge	.+24     	; 0x28c6 <fputc+0x3c>
    28ae:	e8 81       	ld	r30, Y
    28b0:	f9 81       	ldd	r31, Y+1	; 0x01
    28b2:	01 93       	st	Z+, r16
    28b4:	f9 83       	std	Y+1, r31	; 0x01
    28b6:	e8 83       	st	Y, r30
    28b8:	06 c0       	rjmp	.+12     	; 0x28c6 <fputc+0x3c>
    28ba:	e8 85       	ldd	r30, Y+8	; 0x08
    28bc:	f9 85       	ldd	r31, Y+9	; 0x09
    28be:	80 2f       	mov	r24, r16
    28c0:	09 95       	icall
    28c2:	89 2b       	or	r24, r25
    28c4:	31 f4       	brne	.+12     	; 0x28d2 <fputc+0x48>
    28c6:	8e 81       	ldd	r24, Y+6	; 0x06
    28c8:	9f 81       	ldd	r25, Y+7	; 0x07
    28ca:	01 96       	adiw	r24, 0x01	; 1
    28cc:	9f 83       	std	Y+7, r25	; 0x07
    28ce:	8e 83       	std	Y+6, r24	; 0x06
    28d0:	02 c0       	rjmp	.+4      	; 0x28d6 <fputc+0x4c>
    28d2:	0f ef       	ldi	r16, 0xFF	; 255
    28d4:	1f ef       	ldi	r17, 0xFF	; 255
    28d6:	c8 01       	movw	r24, r16
    28d8:	df 91       	pop	r29
    28da:	cf 91       	pop	r28
    28dc:	1f 91       	pop	r17
    28de:	0f 91       	pop	r16
    28e0:	08 95       	ret

000028e2 <__ultoa_invert>:
    28e2:	fa 01       	movw	r30, r20
    28e4:	aa 27       	eor	r26, r26
    28e6:	28 30       	cpi	r18, 0x08	; 8
    28e8:	51 f1       	breq	.+84     	; 0x293e <__ultoa_invert+0x5c>
    28ea:	20 31       	cpi	r18, 0x10	; 16
    28ec:	81 f1       	breq	.+96     	; 0x294e <__ultoa_invert+0x6c>
    28ee:	e8 94       	clt
    28f0:	6f 93       	push	r22
    28f2:	6e 7f       	andi	r22, 0xFE	; 254
    28f4:	6e 5f       	subi	r22, 0xFE	; 254
    28f6:	7f 4f       	sbci	r23, 0xFF	; 255
    28f8:	8f 4f       	sbci	r24, 0xFF	; 255
    28fa:	9f 4f       	sbci	r25, 0xFF	; 255
    28fc:	af 4f       	sbci	r26, 0xFF	; 255
    28fe:	b1 e0       	ldi	r27, 0x01	; 1
    2900:	3e d0       	rcall	.+124    	; 0x297e <__ultoa_invert+0x9c>
    2902:	b4 e0       	ldi	r27, 0x04	; 4
    2904:	3c d0       	rcall	.+120    	; 0x297e <__ultoa_invert+0x9c>
    2906:	67 0f       	add	r22, r23
    2908:	78 1f       	adc	r23, r24
    290a:	89 1f       	adc	r24, r25
    290c:	9a 1f       	adc	r25, r26
    290e:	a1 1d       	adc	r26, r1
    2910:	68 0f       	add	r22, r24
    2912:	79 1f       	adc	r23, r25
    2914:	8a 1f       	adc	r24, r26
    2916:	91 1d       	adc	r25, r1
    2918:	a1 1d       	adc	r26, r1
    291a:	6a 0f       	add	r22, r26
    291c:	71 1d       	adc	r23, r1
    291e:	81 1d       	adc	r24, r1
    2920:	91 1d       	adc	r25, r1
    2922:	a1 1d       	adc	r26, r1
    2924:	20 d0       	rcall	.+64     	; 0x2966 <__ultoa_invert+0x84>
    2926:	09 f4       	brne	.+2      	; 0x292a <__ultoa_invert+0x48>
    2928:	68 94       	set
    292a:	3f 91       	pop	r19
    292c:	2a e0       	ldi	r18, 0x0A	; 10
    292e:	26 9f       	mul	r18, r22
    2930:	11 24       	eor	r1, r1
    2932:	30 19       	sub	r19, r0
    2934:	30 5d       	subi	r19, 0xD0	; 208
    2936:	31 93       	st	Z+, r19
    2938:	de f6       	brtc	.-74     	; 0x28f0 <__ultoa_invert+0xe>
    293a:	cf 01       	movw	r24, r30
    293c:	08 95       	ret
    293e:	46 2f       	mov	r20, r22
    2940:	47 70       	andi	r20, 0x07	; 7
    2942:	40 5d       	subi	r20, 0xD0	; 208
    2944:	41 93       	st	Z+, r20
    2946:	b3 e0       	ldi	r27, 0x03	; 3
    2948:	0f d0       	rcall	.+30     	; 0x2968 <__ultoa_invert+0x86>
    294a:	c9 f7       	brne	.-14     	; 0x293e <__ultoa_invert+0x5c>
    294c:	f6 cf       	rjmp	.-20     	; 0x293a <__ultoa_invert+0x58>
    294e:	46 2f       	mov	r20, r22
    2950:	4f 70       	andi	r20, 0x0F	; 15
    2952:	40 5d       	subi	r20, 0xD0	; 208
    2954:	4a 33       	cpi	r20, 0x3A	; 58
    2956:	18 f0       	brcs	.+6      	; 0x295e <__ultoa_invert+0x7c>
    2958:	49 5d       	subi	r20, 0xD9	; 217
    295a:	31 fd       	sbrc	r19, 1
    295c:	40 52       	subi	r20, 0x20	; 32
    295e:	41 93       	st	Z+, r20
    2960:	02 d0       	rcall	.+4      	; 0x2966 <__ultoa_invert+0x84>
    2962:	a9 f7       	brne	.-22     	; 0x294e <__ultoa_invert+0x6c>
    2964:	ea cf       	rjmp	.-44     	; 0x293a <__ultoa_invert+0x58>
    2966:	b4 e0       	ldi	r27, 0x04	; 4
    2968:	a6 95       	lsr	r26
    296a:	97 95       	ror	r25
    296c:	87 95       	ror	r24
    296e:	77 95       	ror	r23
    2970:	67 95       	ror	r22
    2972:	ba 95       	dec	r27
    2974:	c9 f7       	brne	.-14     	; 0x2968 <__ultoa_invert+0x86>
    2976:	00 97       	sbiw	r24, 0x00	; 0
    2978:	61 05       	cpc	r22, r1
    297a:	71 05       	cpc	r23, r1
    297c:	08 95       	ret
    297e:	9b 01       	movw	r18, r22
    2980:	ac 01       	movw	r20, r24
    2982:	0a 2e       	mov	r0, r26
    2984:	06 94       	lsr	r0
    2986:	57 95       	ror	r21
    2988:	47 95       	ror	r20
    298a:	37 95       	ror	r19
    298c:	27 95       	ror	r18
    298e:	ba 95       	dec	r27
    2990:	c9 f7       	brne	.-14     	; 0x2984 <__ultoa_invert+0xa2>
    2992:	62 0f       	add	r22, r18
    2994:	73 1f       	adc	r23, r19
    2996:	84 1f       	adc	r24, r20
    2998:	95 1f       	adc	r25, r21
    299a:	a0 1d       	adc	r26, r0
    299c:	08 95       	ret

0000299e <_exit>:
    299e:	f8 94       	cli

000029a0 <__stop_program>:
    29a0:	ff cf       	rjmp	.-2      	; 0x29a0 <__stop_program>
